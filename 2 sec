{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "a8712994",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-02T10:59:14.921661Z",
     "iopub.status.busy": "2025-05-02T10:59:14.921343Z",
     "iopub.status.idle": "2025-05-02T10:59:21.773899Z",
     "shell.execute_reply": "2025-05-02T10:59:21.772898Z"
    },
    "papermill": {
     "duration": 6.860007,
     "end_time": "2025-05-02T10:59:21.775467",
     "exception": false,
     "start_time": "2025-05-02T10:59:14.915460",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cloning into 'PIE'...\r\n",
      "remote: Enumerating objects: 178, done.\u001b[K\r\n",
      "remote: Counting objects: 100% (93/93), done.\u001b[K\r\n",
      "remote: Compressing objects: 100% (74/74), done.\u001b[K\r\n",
      "remote: Total 178 (delta 32), reused 75 (delta 17), pack-reused 85 (from 1)\u001b[K\r\n",
      "Receiving objects: 100% (178/178), 144.63 MiB | 36.93 MiB/s, done.\r\n",
      "Resolving deltas: 100% (73/73), done.\r\n",
      "Updating files: 100% (41/41), done.\r\n",
      "unzip:  cannot find or open /content/PIE/annotations/annotations.zip, /content/PIE/annotations/annotations.zip.zip or /content/PIE/annotations/annotations.zip.ZIP.\r\n",
      "unzip:  cannot find or open /content/PIE/annotations/annotations_vehicle.zip, /content/PIE/annotations/annotations_vehicle.zip.zip or /content/PIE/annotations/annotations_vehicle.zip.ZIP.\r\n"
     ]
    }
   ],
   "source": [
    "!git clone https://github.com/aras62/PIE.git\n",
    "!unzip /content/PIE/annotations/annotations.zip -d /content/PIE\n",
    "!unzip /content/PIE/annotations/annotations_vehicle.zip -d /content/PIE\n",
    "# !git clone https://github.com/hustvl/YOLOP.git\n",
    "!mkdir /kaggle/working/PIE/content"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "5697a020",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-02T10:59:21.786450Z",
     "iopub.status.busy": "2025-05-02T10:59:21.786207Z",
     "iopub.status.idle": "2025-05-02T10:59:27.153038Z",
     "shell.execute_reply": "2025-05-02T10:59:27.152022Z"
    },
    "papermill": {
     "duration": 5.373741,
     "end_time": "2025-05-02T10:59:27.154553",
     "exception": false,
     "start_time": "2025-05-02T10:59:21.780812",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.0/1.0 MB\u001b[0m \u001b[31m25.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25h"
     ]
    }
   ],
   "source": [
    "!pip install -q ultralytics opencv-python-headless "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "43415bdf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-02T10:59:27.165894Z",
     "iopub.status.busy": "2025-05-02T10:59:27.165592Z",
     "iopub.status.idle": "2025-05-02T10:59:35.565761Z",
     "shell.execute_reply": "2025-05-02T10:59:35.565025Z"
    },
    "papermill": {
     "duration": 8.407432,
     "end_time": "2025-05-02T10:59:35.567314",
     "exception": false,
     "start_time": "2025-05-02T10:59:27.159882",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Creating new Ultralytics Settings v0.0.6 file ✅ \n",
      "View Ultralytics Settings with 'yolo settings' or at '/root/.config/Ultralytics/settings.json'\n",
      "Update Settings with 'yolo settings key=value', i.e. 'yolo settings runs_dir=path/to/dir'. For help see https://docs.ultralytics.com/quickstart/#ultralytics-settings.\n"
     ]
    }
   ],
   "source": [
    "import torch\n",
    "import torch.nn as nn\n",
    "import torch.optim as optim\n",
    "from torch.utils.data import Dataset, DataLoader\n",
    "import xml.etree.ElementTree as ET\n",
    "import os\n",
    "import numpy as np\n",
    "from sklearn.metrics import accuracy_score, precision_recall_fscore_support, roc_auc_score, confusion_matrix, ConfusionMatrixDisplay\n",
    "from tqdm.notebook import tqdm\n",
    "import random\n",
    "import math\n",
    "import zipfile\n",
    "import cv2\n",
    "from ultralytics import YOLO\n",
    "import pandas as pd \n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4653c742",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-02T10:59:35.578596Z",
     "iopub.status.busy": "2025-05-02T10:59:35.578203Z",
     "iopub.status.idle": "2025-05-02T10:59:37.103969Z",
     "shell.execute_reply": "2025-05-02T10:59:37.102882Z"
    },
    "papermill": {
     "duration": 1.533572,
     "end_time": "2025-05-02T10:59:37.106178",
     "exception": false,
     "start_time": "2025-05-02T10:59:35.572606",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Unzipped successfully.\n"
     ]
    }
   ],
   "source": [
    "zip_path = \"/kaggle/working/PIE/annotations/annotations.zip\"\n",
    "extract_to = \"/kaggle/working/PIE/annotations/\"\n",
    "\n",
    "if os.path.exists(extract_to + 'annotations'):\n",
    "    print(\"Exists already. Not unzipping.\")\n",
    "else:\n",
    "    with zipfile.ZipFile(zip_path, 'r') as zip_ref:\n",
    "        zip_ref.extractall(extract_to)\n",
    "    print(\"Unzipped successfully.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c410a883",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-02T10:59:37.118842Z",
     "iopub.status.busy": "2025-05-02T10:59:37.118525Z",
     "iopub.status.idle": "2025-05-02T10:59:37.860631Z",
     "shell.execute_reply": "2025-05-02T10:59:37.859708Z"
    },
    "papermill": {
     "duration": 0.749557,
     "end_time": "2025-05-02T10:59:37.862070",
     "exception": false,
     "start_time": "2025-05-02T10:59:37.112513",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Unzipped successfully.\n"
     ]
    }
   ],
   "source": [
    "zip_path = \"/kaggle/working/PIE/annotations/annotations_vehicle.zip\"\n",
    "extract_to = \"/kaggle/working/PIE/annotations/\"\n",
    "\n",
    "if os.path.exists(extract_to + 'annotations_vehicle'):\n",
    "    print(\"Exists already. Not unzipping.\")\n",
    "else:\n",
    "    with zipfile.ZipFile(zip_path, 'r') as zip_ref:\n",
    "        zip_ref.extractall(extract_to)\n",
    "    print(\"Unzipped successfully.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "b703b948",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-02T10:59:37.873396Z",
     "iopub.status.busy": "2025-05-02T10:59:37.873156Z",
     "iopub.status.idle": "2025-05-02T10:59:37.885631Z",
     "shell.execute_reply": "2025-05-02T10:59:37.884831Z"
    },
    "papermill": {
     "duration": 0.01943,
     "end_time": "2025-05-02T10:59:37.887036",
     "exception": false,
     "start_time": "2025-05-02T10:59:37.867606",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Unzipped successfully.\n"
     ]
    }
   ],
   "source": [
    "zip_path = \"/kaggle/working/PIE/annotations/annotations_attributes.zip\"\n",
    "extract_to = \"/kaggle/working/PIE/annotations/\"\n",
    "\n",
    "if os.path.exists(extract_to + \"annotations_attributes\"):\n",
    "    print(\"Exists already. Not unzipping.\")\n",
    "else:\n",
    "    with zipfile.ZipFile(zip_path, 'r') as zip_ref:\n",
    "        zip_ref.extractall(extract_to)\n",
    "    print(\"Unzipped successfully.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c9b4532a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-02T10:59:37.898459Z",
     "iopub.status.busy": "2025-05-02T10:59:37.898231Z",
     "iopub.status.idle": "2025-05-02T11:15:58.300571Z",
     "shell.execute_reply": "2025-05-02T11:15:58.299666Z"
    },
    "papermill": {
     "duration": 980.409866,
     "end_time": "2025-05-02T11:15:58.302070",
     "exception": false,
     "start_time": "2025-05-02T10:59:37.892204",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "--- DATA PREPARATION ---\n",
      "Loading PIE database cache …\n",
      "✓ PIE DB loaded.\n",
      "\n",
      "Computing scalers …\n",
      "Scalers: {'ego_speed_mean': 13.428368358531902, 'ego_speed_std': 13.306451814881573, 'accX_mean': -0.028068299916188515, 'accX_std': 0.07827638994593288, 'accY_mean': -0.5235171297788667, 'accY_std': 0.8514409917161664, 'gyroZ_mean': -0.037905654051963104, 'gyroZ_std': 4.475510697376237}\n",
      "\n",
      "Extracting training sequences (all streams) …\n",
      "Loading pose PKLs …\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b945b41ae7ee403b9f5a90c27e935faa",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "0it [00:00, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "2c64cae55d4c46e7864466b17c7c22ec",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "0it [00:00, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "e0af702282224db8bb8f40e92c066c16",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "0it [00:00, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enumerating sequences …\n",
      "Total sequences: 211819\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "7e2267d80e414e9488e7ca9b184cb32f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "seq:   0%|          | 0/211819 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Raw training samples: 211819\n",
      "Balanced: 1s=42872 | 0s=42872\n",
      "\n",
      "Saving balanced data …\n",
      "✓ /kaggle/working/balanced_train_data.pkl\n",
      "Saving scalers …\n",
      "✓ /kaggle/working/scalers.pkl\n",
      "\n",
      "--- DATA PREPARATION COMPLETE ---\n"
     ]
    }
   ],
   "source": [
    "# -----------------------------------------------------------------------------\n",
    "# CELL 1: DATA PREPARATION & BALANCING  (run once before training)\n",
    "# -----------------------------------------------------------------------------\n",
    "#  This cell:\n",
    "#    1. Loads (or regenerates) the PIE database\n",
    "#    2. Computes per-signal standardisation scalers\n",
    "#    3. Extracts ALL training sequences for every stream\n",
    "#    4. Balances the dataset 50 / 50 on the crossing label\n",
    "#    5. Writes two pickles:\n",
    "#         - /kaggle/working/balanced_train_data.pkl\n",
    "#         - /kaggle/working/scalers.pkl\n",
    "# -----------------------------------------------------------------------------\n",
    "\n",
    "import os\n",
    "import sys\n",
    "import time\n",
    "import pickle\n",
    "import gc\n",
    "from pathlib import Path\n",
    "\n",
    "import cv2                               # used internally by PIE utilities\n",
    "import numpy as np\n",
    "import torch\n",
    "from torch.utils.data import Dataset\n",
    "from tqdm.notebook import tqdm\n",
    "\n",
    "# -----------------------------------------------------------------------------#\n",
    "#                                PIE utilities                                 #\n",
    "# -----------------------------------------------------------------------------#\n",
    "pie_utilities_path = \"/kaggle/working/PIE/utilities\"\n",
    "if pie_utilities_path not in sys.path:\n",
    "    sys.path.insert(0, pie_utilities_path)\n",
    "\n",
    "try:\n",
    "    from pie_data import PIE\n",
    "except ImportError as e:\n",
    "    print(\n",
    "        f\"[WARN] Could not import PIE from {pie_utilities_path}. \"\n",
    "        f\"If the DB cache already exists this is fine.\\n→ {e}\"\n",
    "    )\n",
    "    PIE = None\n",
    "\n",
    "# -----------------------------------------------------------------------------#\n",
    "#                              configuration                                   #\n",
    "# -----------------------------------------------------------------------------#\n",
    "PIE_ROOT_PATH           = \"/kaggle/working/PIE\"\n",
    "POSE_DATA_DIR           = \"/kaggle/input/pose-data/extracted_poses2\"\n",
    "PIE_DATABASE_CACHE_PATH = \"/kaggle/input/pie-database/pie_database.pkl\"\n",
    "\n",
    "TRAIN_SETS_STR = [\"set01\", \"set02\", \"set04\"]\n",
    "\n",
    "BALANCED_DATA_PKL_PATH  = \"/kaggle/working/balanced_train_data.pkl\"\n",
    "SCALERS_PKL_PATH        = \"/kaggle/working/scalers.pkl\"\n",
    "\n",
    "# Streams used throughout the project ----------------------------------------\n",
    "ALL_POSSIBLE_STREAMS = [\n",
    "    \"bbox\",\n",
    "    \"pose\",\n",
    "    \"ego_speed\",\n",
    "    \"ego_acc\",\n",
    "    \"ego_gyro\",\n",
    "    \"ped_action\",\n",
    "    \"ped_look\",\n",
    "    \"ped_occlusion\",\n",
    "    \"traffic_light\",\n",
    "    \"static_context\",\n",
    "]\n",
    "\n",
    "# Feature sizes & categorical constants --------------------------------------\n",
    "SEQ_LEN, PRED_LEN = 60, 120\n",
    "\n",
    "INPUT_SIZE_BBOX       = 4\n",
    "INPUT_SIZE_POSE       = 34\n",
    "INPUT_SIZE_EGO_SPEED  = 1\n",
    "INPUT_SIZE_EGO_ACC    = 2\n",
    "INPUT_SIZE_EGO_GYRO   = 1\n",
    "INPUT_SIZE_PED_ACTION = 1\n",
    "INPUT_SIZE_PED_LOOK   = 1\n",
    "INPUT_SIZE_PED_OCC    = 1\n",
    "INPUT_SIZE_TL_STATE   = 4\n",
    "\n",
    "NUM_SIGNALIZED_CATS   = 4\n",
    "NUM_INTERSECTION_CATS = 5\n",
    "NUM_AGE_CATS          = 4\n",
    "NUM_GENDER_CATS       = 3\n",
    "NUM_TRAFFIC_DIR_CATS  = 2\n",
    "\n",
    "LANE_CATEGORIES = {1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 4, 7: 4, 8: 4}\n",
    "NUM_LANE_CATS   = len(set(LANE_CATEGORIES.values()))\n",
    "\n",
    "INPUT_SIZE_STATIC = (\n",
    "    NUM_SIGNALIZED_CATS\n",
    "    + NUM_INTERSECTION_CATS\n",
    "    + NUM_AGE_CATS\n",
    "    + NUM_GENDER_CATS\n",
    "    + NUM_TRAFFIC_DIR_CATS\n",
    "    + NUM_LANE_CATS\n",
    ")  # → 23\n",
    "\n",
    "TL_STATE_MAP = {\"__undefined__\": 0, \"red\": 1, \"yellow\": 2, \"green\": 3}\n",
    "NUM_TL_STATES = len(TL_STATE_MAP)\n",
    "\n",
    "# -----------------------------------------------------------------------------#\n",
    "#                               helper utils                                   #\n",
    "# -----------------------------------------------------------------------------#\n",
    "\n",
    "\n",
    "def to_one_hot(index: int, num_classes: int) -> np.ndarray:\n",
    "    vec = np.zeros(num_classes, dtype=np.float32)\n",
    "    vec[int(np.clip(index, 0, num_classes - 1))] = 1.0\n",
    "    return vec\n",
    "\n",
    "\n",
    "def balance_samples_count(seq_data: dict, label_key: str, seed: int = 42) -> dict:\n",
    "    \"\"\"Undersample majority class so positive and negative labels are equal.\"\"\"\n",
    "    labels = [lbl[0] for lbl in seq_data[label_key]]\n",
    "    n_pos  = int(np.sum(labels))\n",
    "    n_neg  = len(labels) - n_pos\n",
    "\n",
    "    if n_pos == n_neg:\n",
    "        print(\"Dataset already balanced.\")\n",
    "        return seq_data.copy()\n",
    "\n",
    "    majority_label    = 0 if n_neg > n_pos else 1\n",
    "    minority_count    = min(n_pos, n_neg)\n",
    "    majority_indices  = np.where(np.array(labels) == majority_label)[0]\n",
    "    minority_indices  = np.where(np.array(labels) != majority_label)[0]\n",
    "\n",
    "    rng = np.random.default_rng(seed)\n",
    "    keep_majority = rng.choice(majority_indices, size=minority_count, replace=False)\n",
    "    final_indices = np.concatenate([minority_indices, keep_majority])\n",
    "    rng.shuffle(final_indices)\n",
    "\n",
    "    balanced = {}\n",
    "    for k, v in seq_data.items():\n",
    "        balanced[k] = [v[i] for i in final_indices]\n",
    "\n",
    "    print(f\"Balanced: 1s={minority_count} | 0s={minority_count}\")\n",
    "    return balanced\n",
    "\n",
    "\n",
    "# -----------------------------------------------------------------------------#\n",
    "#                                PIEDataset                                    #\n",
    "# -----------------------------------------------------------------------------#\n",
    "class PIEDataset(Dataset):\n",
    "    \"\"\"\n",
    "    Lightweight dataset that can generate any subset of the PIE feature streams.\n",
    "    \"\"\"\n",
    "\n",
    "    def __init__(\n",
    "        self,\n",
    "        pie_db: dict,\n",
    "        set_names: list[str],\n",
    "        pose_dir: str,\n",
    "        seq_len: int,\n",
    "        pred_len: int,\n",
    "        scalers: dict,\n",
    "        streams_to_generate: list[str],\n",
    "    ):\n",
    "        self.pie_db            = pie_db\n",
    "        self.set_names         = set_names\n",
    "        self.pose_dir          = pose_dir\n",
    "        self.seq_len           = seq_len\n",
    "        self.pred_len          = pred_len\n",
    "        self.scalers           = scalers\n",
    "        self.streams           = streams_to_generate\n",
    "        self._input_sizes      = self._build_input_size_map()\n",
    "        self.all_pose_data     = {}\n",
    "        self.sequences         = []\n",
    "\n",
    "        if \"pose\" in self.streams:\n",
    "            self._load_pose_pkls()\n",
    "        self._enumerate_sequences()\n",
    "\n",
    "    # ------------------------ internal helpers -------------------------------\n",
    "    def _build_input_size_map(self) -> dict:\n",
    "        special = {\n",
    "            \"TRAFFIC_LIGHT\": \"TL_STATE\",\n",
    "            \"STATIC_CONTEXT\": \"STATIC\",\n",
    "            \"EGO_SPEED\": \"EGO_SPEED\",\n",
    "            \"EGO_ACC\": \"EGO_ACC\",\n",
    "            \"EGO_GYRO\": \"EGO_GYRO\",\n",
    "            \"PED_ACTION\": \"PED_ACTION\",\n",
    "            \"PED_LOOK\": \"PED_LOOK\",\n",
    "            \"PED_OCCLUSION\": \"PED_OCC\",\n",
    "        }\n",
    "        sizes = {}\n",
    "        for s in ALL_POSSIBLE_STREAMS:\n",
    "            const = f\"INPUT_SIZE_{special.get(s.upper(), s.upper())}\"\n",
    "            if s == \"bbox\":\n",
    "                const = \"INPUT_SIZE_BBOX\"\n",
    "            elif s == \"pose\":\n",
    "                const = \"INPUT_SIZE_POSE\"\n",
    "            sizes[s] = globals().get(const, 1)\n",
    "        return sizes\n",
    "\n",
    "    def _load_pose_pkls(self):\n",
    "        print(\"Loading pose PKLs …\")\n",
    "        for set_id in self.set_names:\n",
    "            set_dir = Path(self.pose_dir) / set_id\n",
    "            if not set_dir.is_dir():\n",
    "                continue\n",
    "            self.all_pose_data[set_id] = {}\n",
    "            for pkl_path in tqdm(set_dir.glob(f\"{set_id}_*_poses.pkl\"), leave=False):\n",
    "                try:\n",
    "                    with open(pkl_path, \"rb\") as fp:\n",
    "                        loaded = pickle.load(fp)\n",
    "                except Exception as e:\n",
    "                    print(f\"[pose load] {pkl_path}: {e}\")\n",
    "                    continue\n",
    "\n",
    "                if len(loaded) != 1:\n",
    "                    continue\n",
    "                (key, data), *_ = loaded.items()\n",
    "                vid = \"_\".join(key.split(\"_\")[1:])\n",
    "                if vid in self.pie_db.get(set_id, {}):\n",
    "                    self.all_pose_data[set_id][vid] = data\n",
    "\n",
    "    def _enumerate_sequences(self):\n",
    "        print(\"Enumerating sequences …\")\n",
    "        for set_id in self.set_names:\n",
    "            for vid, vdb in self.pie_db.get(set_id, {}).items():\n",
    "                for pid, pdb in vdb.get(\"ped_annotations\", {}).items():\n",
    "                    frames = pdb.get(\"frames\", [])\n",
    "                    if len(frames) < self.seq_len + self.pred_len:\n",
    "                        continue\n",
    "                    frames = sorted(frames)\n",
    "                    for i in range(len(frames) - self.seq_len - self.pred_len + 1):\n",
    "                        start = frames[i]\n",
    "                        obs_end = frames[i + self.seq_len - 1]\n",
    "                        if obs_end - start != self.seq_len - 1:\n",
    "                            continue\n",
    "                        target = frames[i + self.seq_len + self.pred_len - 1]\n",
    "                        if target - obs_end != self.pred_len:\n",
    "                            continue\n",
    "                        self.sequences.append((set_id, vid, pid, start))\n",
    "        print(f\"Total sequences: {len(self.sequences)}\")\n",
    "\n",
    "    # ------------------ Dataset API ------------------------------------------\n",
    "    def __len__(self):\n",
    "        return len(self.sequences)\n",
    "\n",
    "    def __getitem__(self, idx: int):\n",
    "        set_id, vid, pid, start = self.sequences[idx]\n",
    "        vdb  = self.pie_db[set_id][vid]\n",
    "        pdb  = vdb[\"ped_annotations\"][pid]\n",
    "        ego  = vdb.get(\"vehicle_annotations\", {})\n",
    "        tldb = vdb.get(\"traffic_annotations\", {})\n",
    "\n",
    "        frame_nums = list(range(start, start + self.seq_len))\n",
    "        target_f   = start + self.seq_len + self.pred_len - 1\n",
    "\n",
    "        # label ---------------------------------------------------------------\n",
    "        label = 0\n",
    "        if (\n",
    "            \"frames\" in pdb\n",
    "            and \"behavior\" in pdb\n",
    "            and \"cross\" in pdb[\"behavior\"]\n",
    "            and target_f in pdb[\"frames\"]\n",
    "        ):\n",
    "            try:\n",
    "                j = pdb[\"frames\"].index(target_f)\n",
    "                label = pdb[\"behavior\"][\"cross\"][j]\n",
    "                if label == -1:\n",
    "                    label = 0\n",
    "            except (ValueError, IndexError):\n",
    "                pass\n",
    "\n",
    "        # static context ------------------------------------------------------\n",
    "        static_vec = np.zeros(INPUT_SIZE_STATIC, np.float32)\n",
    "        if \"static_context\" in self.streams:\n",
    "            attr  = pdb.get(\"attributes\", {})\n",
    "            sig   = attr.get(\"signalized\", 0)\n",
    "            intr  = attr.get(\"intersection\", 0)\n",
    "            age   = attr.get(\"age\", 2)\n",
    "            gen   = attr.get(\"gender\", 0)\n",
    "            tdir  = int(attr.get(\"traffic_direction\", 0))\n",
    "            ln    = attr.get(\"num_lanes\", 2)\n",
    "            lncat = LANE_CATEGORIES.get(ln, LANE_CATEGORIES[max(LANE_CATEGORIES)])\n",
    "            static_vec = np.concatenate(\n",
    "                [\n",
    "                    to_one_hot(sig,  NUM_SIGNALIZED_CATS),\n",
    "                    to_one_hot(intr, NUM_INTERSECTION_CATS),\n",
    "                    to_one_hot(age,  NUM_AGE_CATS),\n",
    "                    to_one_hot(gen,  NUM_GENDER_CATS),\n",
    "                    to_one_hot(tdir, NUM_TRAFFIC_DIR_CATS),\n",
    "                    to_one_hot(lncat, NUM_LANE_CATS),\n",
    "                ]\n",
    "            ).astype(np.float32)\n",
    "\n",
    "        # per-frame feature assembly -----------------------------------------\n",
    "        feats = {s: [] for s in self.streams}\n",
    "\n",
    "        for fn in frame_nums:\n",
    "            fidx = -1\n",
    "            if \"frames\" in pdb:\n",
    "                try:\n",
    "                    fidx = pdb[\"frames\"].index(fn)\n",
    "                except ValueError:\n",
    "                    pass\n",
    "\n",
    "            ego_f = ego.get(fn, {})\n",
    "\n",
    "            # bbox ----------------------------------------------------------\n",
    "            if \"bbox\" in self.streams:\n",
    "                bb = np.zeros(INPUT_SIZE_BBOX, np.float32)\n",
    "                if (\n",
    "                    fidx != -1\n",
    "                    and \"bbox\" in pdb\n",
    "                    and len(pdb[\"bbox\"]) > fidx\n",
    "                ):\n",
    "                    try:\n",
    "                        x1, y1, x2, y2 = pdb[\"bbox\"][fidx]\n",
    "                        w_img = vdb.get(\"width\", 1920)\n",
    "                        h_img = vdb.get(\"height\", 1080)\n",
    "                        if w_img > 0 and h_img > 0:\n",
    "                            cx = ((x1 + x2) / 2) / w_img\n",
    "                            cy = ((y1 + y2) / 2) / h_img\n",
    "                            w  = (x2 - x1) / w_img\n",
    "                            h  = (y2 - y1) / h_img\n",
    "                            if 0 < w and 0 < h and 0 <= cx <= 1 and 0 <= cy <= 1:\n",
    "                                bb = np.array([cx, cy, w, h], np.float32)\n",
    "                    except Exception:\n",
    "                        pass\n",
    "                feats[\"bbox\"].append(bb)\n",
    "\n",
    "            # pose ----------------------------------------------------------\n",
    "            if \"pose\" in self.streams:\n",
    "                pvec = np.zeros(INPUT_SIZE_POSE, np.float32)\n",
    "                pose_set = self.all_pose_data.get(set_id, {}).get(vid, {})\n",
    "                p_loaded = pose_set.get(fn, {}).get(pid)\n",
    "                if (\n",
    "                    isinstance(p_loaded, np.ndarray)\n",
    "                    and p_loaded.shape == (INPUT_SIZE_POSE,)\n",
    "                ):\n",
    "                    pvec = p_loaded\n",
    "                feats[\"pose\"].append(pvec)\n",
    "\n",
    "            # ego signals ---------------------------------------------------\n",
    "            if \"ego_speed\" in self.streams:\n",
    "                s = ego_f.get(\"OBD_speed\", 0.0) or ego_f.get(\"GPS_speed\", 0.0)\n",
    "                s = (s - self.scalers.get(\"ego_speed_mean\", 0.0)) / self.scalers.get(\n",
    "                    \"ego_speed_std\", 1.0\n",
    "                )\n",
    "                feats[\"ego_speed\"].append([s])\n",
    "\n",
    "            if \"ego_acc\" in self.streams:\n",
    "                ax = ego_f.get(\"accX\", 0.0)\n",
    "                ay = ego_f.get(\"accY\", 0.0)\n",
    "                ax = (ax - self.scalers.get(\"accX_mean\", 0.0)) / self.scalers.get(\n",
    "                    \"accX_std\", 1.0\n",
    "                )\n",
    "                ay = (ay - self.scalers.get(\"accY_mean\", 0.0)) / self.scalers.get(\n",
    "                    \"accY_std\", 1.0\n",
    "                )\n",
    "                feats[\"ego_acc\"].append([ax, ay])\n",
    "\n",
    "            if \"ego_gyro\" in self.streams:\n",
    "                gz = ego_f.get(\"gyroZ\", 0.0)\n",
    "                gz = (gz - self.scalers.get(\"gyroZ_mean\", 0.0)) / self.scalers.get(\n",
    "                    \"gyroZ_std\", 1.0\n",
    "                )\n",
    "                feats[\"ego_gyro\"].append([gz])\n",
    "\n",
    "            # pedestrian behaviour -----------------------------------------\n",
    "            if \"ped_action\" in self.streams:\n",
    "                action = (\n",
    "                    pdb[\"behavior\"][\"action\"][fidx]\n",
    "                    if fidx != -1\n",
    "                    and \"behavior\" in pdb\n",
    "                    and \"action\" in pdb[\"behavior\"]\n",
    "                    and len(pdb[\"behavior\"][\"action\"]) > fidx\n",
    "                    else 0\n",
    "                )\n",
    "                feats[\"ped_action\"].append([float(action)])\n",
    "\n",
    "            if \"ped_look\" in self.streams:\n",
    "                look = (\n",
    "                    pdb[\"behavior\"][\"look\"][fidx]\n",
    "                    if fidx != -1\n",
    "                    and \"behavior\" in pdb\n",
    "                    and \"look\" in pdb[\"behavior\"]\n",
    "                    and len(pdb[\"behavior\"][\"look\"]) > fidx\n",
    "                    else 0\n",
    "                )\n",
    "                feats[\"ped_look\"].append([float(look)])\n",
    "\n",
    "            if \"ped_occlusion\" in self.streams:\n",
    "                occ = (\n",
    "                    float(pdb[\"occlusion\"][fidx]) / 2.0\n",
    "                    if fidx != -1\n",
    "                    and \"occlusion\" in pdb\n",
    "                    and len(pdb[\"occlusion\"]) > fidx\n",
    "                    else 0.0\n",
    "                )\n",
    "                feats[\"ped_occlusion\"].append([occ])\n",
    "\n",
    "            # traffic light -------------------------------------------------\n",
    "            if \"traffic_light\" in self.streams:\n",
    "                tl_state = 0\n",
    "                for obj in tldb.values():\n",
    "                    if obj.get(\"obj_class\") != \"traffic_light\":\n",
    "                        continue\n",
    "                    if \"frames\" not in obj or \"state\" not in obj:\n",
    "                        continue\n",
    "                    try:\n",
    "                        j = obj[\"frames\"].index(fn)\n",
    "                        if obj[\"state\"][j] != 0:\n",
    "                            tl_state = obj[\"state\"][j]\n",
    "                            break\n",
    "                    except (ValueError, IndexError):\n",
    "                        continue\n",
    "                feats[\"traffic_light\"].append(to_one_hot(tl_state, NUM_TL_STATES))\n",
    "\n",
    "            # static context -----------------------------------------------\n",
    "            if \"static_context\" in self.streams:\n",
    "                feats[\"static_context\"].append(static_vec)\n",
    "\n",
    "        # numpy → torch ------------------------------------------------------\n",
    "        out = {\n",
    "            s: torch.tensor(np.asarray(feats[s], np.float32), dtype=torch.float32)\n",
    "            for s in self.streams\n",
    "        }\n",
    "        return out, torch.tensor(label, dtype=torch.long)\n",
    "\n",
    "\n",
    "# =============================================================================\n",
    "#                       MAIN: build balanced training set\n",
    "# =============================================================================\n",
    "if __name__ == \"__main__\":\n",
    "    print(\"\\n--- DATA PREPARATION ---\")\n",
    "\n",
    "    # 1) load / regenerate PIE DB -------------------------------------------\n",
    "    cache = Path(PIE_DATABASE_CACHE_PATH)\n",
    "    if cache.is_file():\n",
    "        print(\"Loading PIE database cache …\")\n",
    "        with cache.open(\"rb\") as fp:\n",
    "            pie_db = pickle.load(fp)\n",
    "        print(\"✓ PIE DB loaded.\")\n",
    "    else:\n",
    "        if PIE is None:\n",
    "            raise RuntimeError(\"PIE class unavailable: cannot rebuild database.\")\n",
    "        print(\"Cache not found – regenerating PIE DB …\")\n",
    "        pie_db = PIE(data_path=PIE_ROOT_PATH, regen_database=True).generate_database()\n",
    "        if not pie_db:\n",
    "            raise RuntimeError(\"PIE DB generation failed.\")\n",
    "        print(\"✓ PIE DB generated.\")\n",
    "\n",
    "    # 2) compute scalers -----------------------------------------------------\n",
    "    print(\"\\nComputing scalers …\")\n",
    "    spd, accx, accy, gyz = [], [], [], []\n",
    "    for sid in TRAIN_SETS_STR:\n",
    "        for vid, vdb in pie_db.get(sid, {}).items():\n",
    "            for frame, e in vdb.get(\"vehicle_annotations\", {}).items():\n",
    "                s  = e.get(\"OBD_speed\", 0.0) or e.get(\"GPS_speed\", 0.0)\n",
    "                spd.append(s)\n",
    "                accx.append(e.get(\"accX\", 0.0))\n",
    "                accy.append(e.get(\"accY\", 0.0))\n",
    "                gyz.append(e.get(\"gyroZ\", 0.0))\n",
    "\n",
    "    scalers = {}\n",
    "    if spd:\n",
    "        scalers[\"ego_speed_mean\"] = float(np.mean(spd))\n",
    "        scalers[\"ego_speed_std\"]  = float(max(np.std(spd), 1e-6))\n",
    "    if accx:\n",
    "        scalers[\"accX_mean\"] = float(np.mean(accx))\n",
    "        scalers[\"accX_std\"]  = float(max(np.std(accx), 1e-6))\n",
    "        scalers[\"accY_mean\"] = float(np.mean(accy))\n",
    "        scalers[\"accY_std\"]  = float(max(np.std(accy), 1e-6))\n",
    "    if gyz:\n",
    "        scalers[\"gyroZ_mean\"] = float(np.mean(gyz))\n",
    "        scalers[\"gyroZ_std\"]  = float(max(np.std(gyz), 1e-6))\n",
    "\n",
    "    print(\"Scalers:\", scalers)\n",
    "\n",
    "    # 3) extract full training dataset --------------------------------------\n",
    "    print(\"\\nExtracting training sequences (all streams) …\")\n",
    "    full_ds = PIEDataset(\n",
    "        pie_db,\n",
    "        TRAIN_SETS_STR,\n",
    "        POSE_DATA_DIR,\n",
    "        SEQ_LEN,\n",
    "        PRED_LEN,\n",
    "        scalers,\n",
    "        ALL_POSSIBLE_STREAMS,\n",
    "    )\n",
    "\n",
    "    train_dict = {s: [] for s in ALL_POSSIBLE_STREAMS}\n",
    "    train_dict[\"label\"] = []\n",
    "\n",
    "    for i in tqdm(range(len(full_ds)), desc=\"seq\"):\n",
    "        feat, lbl = full_ds[i]\n",
    "        for s in ALL_POSSIBLE_STREAMS:\n",
    "            train_dict[s].append(feat[s].numpy())\n",
    "        train_dict[\"label\"].append([lbl.item()])\n",
    "\n",
    "    print(f\"Raw training samples: {len(train_dict['label'])}\")\n",
    "\n",
    "    # 4) balance -------------------------------------------------------------\n",
    "    balanced = balance_samples_count(train_dict, \"label\")\n",
    "    del train_dict, full_ds\n",
    "    gc.collect()\n",
    "\n",
    "    # 5) write pickles -------------------------------------------------------\n",
    "    print(\"\\nSaving balanced data …\")\n",
    "    with open(BALANCED_DATA_PKL_PATH, \"wb\") as fp:\n",
    "        pickle.dump(balanced, fp, pickle.HIGHEST_PROTOCOL)\n",
    "    print(f\"✓ {BALANCED_DATA_PKL_PATH}\")\n",
    "\n",
    "    print(\"Saving scalers …\")\n",
    "    with open(SCALERS_PKL_PATH, \"wb\") as fp:\n",
    "        pickle.dump(scalers, fp, pickle.HIGHEST_PROTOCOL)\n",
    "    print(f\"✓ {SCALERS_PKL_PATH}\")\n",
    "\n",
    "    del pie_db\n",
    "    gc.collect()\n",
    "\n",
    "    print(\"\\n--- DATA PREPARATION COMPLETE ---\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a8c7f41b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-02T11:15:58.317402Z",
     "iopub.status.busy": "2025-05-02T11:15:58.317155Z",
     "iopub.status.idle": "2025-05-02T12:29:29.290150Z",
     "shell.execute_reply": "2025-05-02T12:29:29.289337Z"
    },
    "papermill": {
     "duration": 4410.983203,
     "end_time": "2025-05-02T12:29:29.291422",
     "exception": false,
     "start_time": "2025-05-02T11:15:58.308219",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--- Running Weighted Average Fusion With Active Streams: ['bbox', 'ped_action', 'ped_look', 'ego_speed', 'ego_acc', 'static_context'] ---\n",
      "Using device: cuda\n",
      "--- Running Model Training/Evaluation with Weighted Fusion ---\n",
      "Active Streams: ['bbox', 'ped_action', 'ped_look', 'ego_speed', 'ego_acc', 'static_context']\n",
      "\n",
      "Loading balanced training data …\n",
      "   ✓ pre-processed data loaded.\n",
      "\n",
      "Loading PIE database cache for validation …\n",
      "   ✓ PIE database loaded.\n",
      "\n",
      "Creating Datasets and DataLoaders …\n",
      "Dataset initialized with 44412 sequences for sets ['set05', 'set06'].\n",
      "   ✓ DataLoaders ready.\n",
      "\n",
      "Initialising model …\n",
      "Initializing Weighted-Avg model with streams: ['bbox', 'ped_action', 'ped_look', 'ego_speed', 'ego_acc', 'static_context']\n",
      "  – Adding stream 'bbox' (input 4)\n",
      "  – Adding stream 'ped_action' (input 1)\n",
      "  – Adding stream 'ped_look' (input 1)\n",
      "  – Adding stream 'ego_speed' (input 1)\n",
      "  – Adding stream 'ego_acc' (input 2)\n",
      "  – Adding stream 'static_context' (input 23)\n",
      "\n",
      "--- Model architecture ---\n",
      "MultiStreamWeightedAvgLSTM(\n",
      "  (lstms): ModuleDict(\n",
      "    (bbox): LSTM(4, 256, num_layers=2, batch_first=True, dropout=0.3, bidirectional=True)\n",
      "    (ped_action): LSTM(1, 256, num_layers=2, batch_first=True, dropout=0.3, bidirectional=True)\n",
      "    (ped_look): LSTM(1, 256, num_layers=2, batch_first=True, dropout=0.3, bidirectional=True)\n",
      "    (ego_speed): LSTM(1, 256, num_layers=2, batch_first=True, dropout=0.3, bidirectional=True)\n",
      "    (ego_acc): LSTM(2, 256, num_layers=2, batch_first=True, dropout=0.3, bidirectional=True)\n",
      "    (static_context): LSTM(23, 256, num_layers=2, batch_first=True, dropout=0.3, bidirectional=True)\n",
      "  )\n",
      "  (attentions): ModuleDict(\n",
      "    (bbox): Attention(\n",
      "      (attention_net): Sequential(\n",
      "        (0): Linear(in_features=512, out_features=128, bias=True)\n",
      "        (1): Tanh()\n",
      "        (2): Linear(in_features=128, out_features=1, bias=True)\n",
      "      )\n",
      "    )\n",
      "    (ped_action): Attention(\n",
      "      (attention_net): Sequential(\n",
      "        (0): Linear(in_features=512, out_features=128, bias=True)\n",
      "        (1): Tanh()\n",
      "        (2): Linear(in_features=128, out_features=1, bias=True)\n",
      "      )\n",
      "    )\n",
      "    (ped_look): Attention(\n",
      "      (attention_net): Sequential(\n",
      "        (0): Linear(in_features=512, out_features=128, bias=True)\n",
      "        (1): Tanh()\n",
      "        (2): Linear(in_features=128, out_features=1, bias=True)\n",
      "      )\n",
      "    )\n",
      "    (ego_speed): Attention(\n",
      "      (attention_net): Sequential(\n",
      "        (0): Linear(in_features=512, out_features=128, bias=True)\n",
      "        (1): Tanh()\n",
      "        (2): Linear(in_features=128, out_features=1, bias=True)\n",
      "      )\n",
      "    )\n",
      "    (ego_acc): Attention(\n",
      "      (attention_net): Sequential(\n",
      "        (0): Linear(in_features=512, out_features=128, bias=True)\n",
      "        (1): Tanh()\n",
      "        (2): Linear(in_features=128, out_features=1, bias=True)\n",
      "      )\n",
      "    )\n",
      "    (static_context): Attention(\n",
      "      (attention_net): Sequential(\n",
      "        (0): Linear(in_features=512, out_features=128, bias=True)\n",
      "        (1): Tanh()\n",
      "        (2): Linear(in_features=128, out_features=1, bias=True)\n",
      "      )\n",
      "    )\n",
      "  )\n",
      "  (dropout): Dropout(p=0.3, inplace=False)\n",
      "  (fc1): Linear(in_features=512, out_features=256, bias=True)\n",
      "  (relu): ReLU()\n",
      "  (fc2): Linear(in_features=256, out_features=2, bias=True)\n",
      ")\n",
      "Trainable parameters: 13,224,206\n",
      "------------------------------\n",
      "\n",
      "Calculating class weights …\n",
      "Loss weights → 0: 1.00, 1: 1.00\n",
      "\n",
      "--- Starting training ---\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "2d4b1377398b4a88a67bf7d583f08bff",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/2680 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "37ef4850aefe4afe83409d8078b3d2e9",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/1388 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 01/10 – 418.5s\n",
      "  train loss 0.4331 | acc 0.7959\n",
      "  val   loss 0.4759 | acc 0.8120\n",
      "           prec 0.4821 | rec 0.8413 | f1 0.6129 | auc 0.8675\n",
      "  ✓ new best model saved → best_model_weighted_bbox_ego_acc_ego_speed_ped_action_ped_look_static_context_ep1.pth (F1 0.6129)\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "bba8386d420c4ac28bdb2c4cb978f8ea",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/2680 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "656f744c73854b86849602e8826cb426",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/1388 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 02/10 – 415.5s\n",
      "  train loss 0.3642 | acc 0.8383\n",
      "  val   loss 0.3713 | acc 0.8414\n",
      "           prec 0.5389 | rec 0.7171 | f1 0.6154 | auc 0.8834\n",
      "  ✓ new best model saved → best_model_weighted_bbox_ego_acc_ego_speed_ped_action_ped_look_static_context_ep2.pth (F1 0.6154)\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "729aa6bc66d14bf8a5dd7082ca1edc64",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/2680 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c4f29b76f7ea42af9cf15d2094511125",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/1388 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 03/10 – 418.2s\n",
      "  train loss 0.3463 | acc 0.8500\n",
      "  val   loss 0.3468 | acc 0.8554\n",
      "           prec 0.5777 | rec 0.6792 | f1 0.6244 | auc 0.8970\n",
      "  ✓ new best model saved → best_model_weighted_bbox_ego_acc_ego_speed_ped_action_ped_look_static_context_ep3.pth (F1 0.6244)\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "fb32d43ec0c24db887e97924ba08d488",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/2680 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "21eaf8edac744e3f96997ae4807cde5f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/1388 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 04/10 – 417.3s\n",
      "  train loss 0.3194 | acc 0.8616\n",
      "  val   loss 0.3905 | acc 0.8492\n",
      "           prec 0.5691 | rec 0.6076 | f1 0.5877 | auc 0.8812\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "d27d228886f949078c4772e0f03a364c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/2680 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "49eb28d151c148619546c6b1d7cea0f2",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/1388 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 05/10 – 417.6s\n",
      "  train loss 0.2997 | acc 0.8718\n",
      "  val   loss 0.4615 | acc 0.8260\n",
      "           prec 0.5056 | rec 0.7409 | f1 0.6011 | auc 0.8696\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "1e500dd271e44a4299d480b3abe21926",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/2680 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "1a10b12f507c4e93bb25edec4b7e34f8",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/1388 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 06/10 – 418.1s\n",
      "  train loss 0.2622 | acc 0.8917\n",
      "  val   loss 0.4216 | acc 0.8510\n",
      "           prec 0.5668 | rec 0.6707 | f1 0.6144 | auc 0.8900\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5fba8d8d08ae4ec49dd55d14cd73f75b",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/2680 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "38df38b7061a41bda608428ed0261fbb",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/1388 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 07/10 – 418.8s\n",
      "  train loss 0.2428 | acc 0.9008\n",
      "  val   loss 0.4378 | acc 0.8610\n",
      "           prec 0.5960 | rec 0.6661 | f1 0.6291 | auc 0.8968\n",
      "  ✓ new best model saved → best_model_weighted_bbox_ego_acc_ego_speed_ped_action_ped_look_static_context_ep7.pth (F1 0.6291)\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "4a998d5e4acc4757b89105cc812d2e94",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/2680 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "26911864a39c44a4a14990f8f7c2920c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/1388 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 08/10 – 417.3s\n",
      "  train loss 0.2157 | acc 0.9121\n",
      "  val   loss 0.4512 | acc 0.8485\n",
      "           prec 0.5571 | rec 0.7023 | f1 0.6213 | auc 0.8928\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "1870a92363fe495ca69cda4d5dff8c87",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/2680 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a9a1554b5271457a9f887ec56ecc0714",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/1388 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 09/10 – 418.8s\n",
      "  train loss 0.1975 | acc 0.9203\n",
      "  val   loss 0.4057 | acc 0.8423\n",
      "           prec 0.5539 | rec 0.5606 | f1 0.5572 | auc 0.9047\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "7c50888464ff4702a2aa4e0aeb9c52d9",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/2680 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "fd42c76be2a345b7bdb1f246f16b61e4",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/1388 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 10/10 – 417.8s\n",
      "  train loss 0.1846 | acc 0.9250\n",
      "  val   loss 0.4963 | acc 0.8428\n",
      "           prec 0.5593 | rec 0.5273 | f1 0.5428 | auc 0.8941\n",
      "\n",
      "--- Training finished ---\n",
      "\n",
      "Plotting training curves …\n"
     ]
    },
    {
     "data": {
      "image/png": "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0CHatWv3jzFERUU5vvf29sbX15eMjIzrvSQRERGRIqX1k4gYQUkpESl1vL29L9oOXlg8PT2vqp+rq2uBxyaTCZvNVhQhiYiIiNwwrZ9ExAiqKSUiZc7q1asvely3bl0A6taty6ZNm8jOznY8v3LlSsxmM7Vr18bHx4eqVauyZMmSYo1ZRERExEhaP4lIUdBOKREpdXJzc0lLSyvQ5uLiQmBgIACzZ88mJiaGli1b8tlnn7F27VqmTZsGQO/evRk1ahT9+vXjpZde4siRIzz55JM88MADBAcHA/DSSy/x+OOPExQUxG233capU6dYuXIlTz75ZPFeqIiIiEgh0fpJRIygpJSIlDrz588nNDS0QFvt2rXZuXMncP7OLl988QVPPPEEoaGhfP7559SrVw8ALy8vFixYwODBg7npppvw8vKie/fuTJgwwTFWv379OHv2LG+//TZDhgwhMDCQe+65p/guUERERKSQaf0kIkYw2e12u9FBiIgUF5PJxLfffkuXLl2MDkVERESkRND6SUSKimpKiYiIiIiIiIhIsVNSSkREREREREREip2O74mIiIiIiIiISLHTTikRERERERERESl2SkqJiIiIiIiIiEixU1JKRERERERERESKnZJSIiIiIiIiIiJS7JSUEhERERERERGRYqeklIiIiIiIiIiIFDslpUREREREREREpNgpKSUiIiIiIiIiIsVOSSkRERERERERESl2/w+q1pGwLgq1jAAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 1200x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "--- Final Evaluation on Validation set ---\n",
      "Loaded best model: best_model_weighted_bbox_ego_acc_ego_speed_ped_action_ped_look_static_context_ep7.pth\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "52038ce6418e45708116f435e55e2ac8",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/1388 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "24ebdd6f820d4b06b7aa0c2fab46126b",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Generating CM Data:   0%|          | 0/1388 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "--- Final metrics (Weighted Avg Fusion) ---\n",
      "loss      : 0.4378\n",
      "accuracy  : 0.8610\n",
      "precision : 0.5960\n",
      "recall    : 0.6661\n",
      "f1        : 0.6291\n",
      "auc       : 0.8968\n",
      "(Best validation F1 during training: 0.6291)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "--- Learned fusion weights ---\n",
      "bbox           : 0.1752\n",
      "ped_action     : 0.1627\n",
      "ped_look       : 0.1481\n",
      "ego_speed      : 0.1589\n",
      "ego_acc        : 0.1744\n",
      "static_context : 0.1808\n",
      "------------------------------\n",
      "\n",
      "--- Script complete ---\n"
     ]
    }
   ],
   "source": [
    "# --- CELL 2: ABLATION STUDY – MODEL TRAINING AND EVALUATION (with Weighted Average Fusion) ---\n",
    "\n",
    "import os\n",
    "import sys\n",
    "import gc\n",
    "import time\n",
    "import math\n",
    "import random\n",
    "import pickle\n",
    "import torch\n",
    "import numpy as np\n",
    "import pandas as pd                      # results-summary table\n",
    "import torch.nn as nn\n",
    "import torch.optim as optim\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from tqdm.notebook import tqdm\n",
    "from torch.utils.data import Dataset, DataLoader\n",
    "from sklearn.metrics import (\n",
    "    accuracy_score,\n",
    "    precision_recall_fscore_support,\n",
    "    roc_auc_score,\n",
    "    confusion_matrix,\n",
    "    ConfusionMatrixDisplay,\n",
    ")\n",
    "\n",
    "# --- Add PIE utilities path if necessary (adjust path) ------------------------\n",
    "pie_utilities_path = \"/kaggle/working/PIE/utilities\"\n",
    "if pie_utilities_path not in sys.path:\n",
    "    sys.path.insert(0, pie_utilities_path)\n",
    "\n",
    "try:\n",
    "    from pie_data import PIE\n",
    "except ImportError as e:\n",
    "    print(f\"Warn: Could not import PIE class: {e}\")\n",
    "    PIE = None\n",
    "\n",
    "# --- Configuration ------------------------------------------------------------\n",
    "PIE_ROOT_PATH = \"/kaggle/working/PIE\"\n",
    "POSE_DATA_DIR = \"/kaggle/input/pose-data/extracted_poses2\"\n",
    "PIE_DATABASE_CACHE_PATH = \"/kaggle/input/pie-database/pie_database.pkl\"\n",
    "\n",
    "# --- Define ALL possible streams (used by Dataset class) ----------------------\n",
    "ALL_POSSIBLE_STREAMS = [\n",
    "    \"bbox\",\n",
    "    \"pose\",\n",
    "    \"ego_speed\",\n",
    "    \"ego_acc\",\n",
    "    \"ego_gyro\",\n",
    "    \"ped_action\",\n",
    "    \"ped_look\",\n",
    "    \"ped_occlusion\",\n",
    "    \"traffic_light\",\n",
    "    \"static_context\",\n",
    "]\n",
    "\n",
    "# --- *** CHOOSE ACTIVE STREAMS FOR THIS EXPERIMENT *** ------------------------\n",
    "ACTIVE_STREAMS = [\n",
    "    \"bbox\",\n",
    "    \"ped_action\",\n",
    "    \"ped_look\",\n",
    "    \"ego_speed\",\n",
    "    \"ego_acc\",\n",
    "    \"static_context\",\n",
    "]\n",
    "# ------------------------------------------------------------------------------\n",
    "\n",
    "print(f\"--- Running Weighted Average Fusion With Active Streams: {ACTIVE_STREAMS} ---\")\n",
    "\n",
    "# --- Model Hyper-parameters ---------------------------------------------------\n",
    "SEQ_LEN, PRED_LEN = 60, 120\n",
    "INPUT_SIZE_BBOX = 4\n",
    "INPUT_SIZE_POSE = 34\n",
    "INPUT_SIZE_EGO_SPEED = 1\n",
    "INPUT_SIZE_EGO_ACC = 2\n",
    "INPUT_SIZE_EGO_GYRO = 1\n",
    "INPUT_SIZE_PED_ACTION = 1\n",
    "INPUT_SIZE_PED_LOOK = 1\n",
    "INPUT_SIZE_PED_OCC = 1\n",
    "INPUT_SIZE_TL_STATE = 4\n",
    "NUM_SIGNALIZED_CATS = 4\n",
    "NUM_INTERSECTION_CATS = 5\n",
    "NUM_AGE_CATS = 4\n",
    "NUM_GENDER_CATS = 3\n",
    "NUM_TRAFFIC_DIR_CATS = 2\n",
    "LANE_CATEGORIES = {1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 4, 7: 4, 8: 4}\n",
    "NUM_LANE_CATS = len(set(LANE_CATEGORIES.values()))\n",
    "INPUT_SIZE_STATIC = (\n",
    "    NUM_SIGNALIZED_CATS\n",
    "    + NUM_INTERSECTION_CATS\n",
    "    + NUM_AGE_CATS\n",
    "    + NUM_GENDER_CATS\n",
    "    + NUM_TRAFFIC_DIR_CATS\n",
    "    + NUM_LANE_CATS\n",
    ")\n",
    "\n",
    "LSTM_HIDDEN_SIZE = 256\n",
    "NUM_LSTM_LAYERS = 2\n",
    "DROPOUT_RATE = 0.3\n",
    "NUM_CLASSES = 2\n",
    "ATTENTION_DIM = 128\n",
    "\n",
    "# --- Training Hyper-parameters ------------------------------------------------\n",
    "LEARNING_RATE = 1e-4\n",
    "BATCH_SIZE = 32\n",
    "NUM_EPOCHS = 10\n",
    "DEVICE = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "print(f\"Using device: {DEVICE}\")\n",
    "\n",
    "# --- Dataset splits -----------------------------------------------------------\n",
    "VAL_SETS_STR = [\"set05\", \"set06\"]\n",
    "\n",
    "# --- Paths for pre-processed data --------------------------------------------\n",
    "BALANCED_DATA_PKL_PATH = \"/kaggle/working/balanced_train_data.pkl\"\n",
    "SCALERS_PKL_PATH = \"/kaggle/working/scalers.pkl\"\n",
    "\n",
    "# -----------------------------------------------------------------------------#\n",
    "#                               Helper classes                                #\n",
    "# -----------------------------------------------------------------------------\n",
    "\n",
    "\n",
    "def to_one_hot(index, num_classes):\n",
    "    vec = np.zeros(num_classes, dtype=np.float32)\n",
    "    safe_index = int(np.clip(index, 0, num_classes - 1))\n",
    "    vec[safe_index] = 1.0\n",
    "    return vec\n",
    "\n",
    "\n",
    "class PIEDataset(Dataset):\n",
    "    \"\"\"\n",
    "    Dataset that can dynamically enable/disable streams.\n",
    "    \"\"\"\n",
    "\n",
    "    def __init__(\n",
    "        self,\n",
    "        pie_database,\n",
    "        set_names,\n",
    "        pose_data_dir,\n",
    "        seq_len,\n",
    "        pred_len,\n",
    "        scalers=None,\n",
    "        active_streams=None,\n",
    "    ):\n",
    "        self.pie_db = pie_database\n",
    "        self.set_names = set_names\n",
    "        self.pose_data_dir = pose_data_dir\n",
    "        self.seq_len = seq_len\n",
    "        self.pred_len = pred_len\n",
    "        self.scalers = scalers or {}\n",
    "        self.active_streams = active_streams or ALL_POSSIBLE_STREAMS\n",
    "        self.sequences = []\n",
    "        self.all_pose_data = {}\n",
    "\n",
    "        self._input_sizes_for_error = self._get_input_sizes_dict()\n",
    "\n",
    "        if \"pose\" in self.active_streams:\n",
    "            self._load_pose_data()\n",
    "\n",
    "        self._generate_sequence_list()\n",
    "        if not self.sequences:\n",
    "            raise ValueError(f\"Dataset init failed: No sequences for {self.set_names}\")\n",
    "\n",
    "    # --------------------------------------------------------------------- #\n",
    "    #                        internal helper methods                        #\n",
    "    # --------------------------------------------------------------------- #\n",
    "\n",
    "    def _get_input_sizes_dict(self):\n",
    "        \"\"\"\n",
    "        Build a dict {stream_name: feature_size}.\n",
    "        \"\"\"\n",
    "        input_sizes = {}\n",
    "        special_cases = {\n",
    "            \"TRAFFIC_LIGHT\": \"TL_STATE\",\n",
    "            \"STATIC_CONTEXT\": \"STATIC\",\n",
    "            \"EGO_SPEED\": \"EGO_SPEED\",\n",
    "            \"EGO_ACC\": \"EGO_ACC\",\n",
    "            \"EGO_GYRO\": \"EGO_GYRO\",\n",
    "            \"PED_ACTION\": \"PED_ACTION\",\n",
    "            \"PED_LOOK\": \"PED_LOOK\",\n",
    "            \"PED_OCCLUSION\": \"PED_OCC\",\n",
    "        }\n",
    "\n",
    "        for stream in ALL_POSSIBLE_STREAMS:\n",
    "            size_constant_name = f\"INPUT_SIZE_{stream.upper()}\"\n",
    "            stream_upper_key = stream.upper()\n",
    "            suffix = special_cases.get(stream_upper_key)\n",
    "\n",
    "            if suffix:\n",
    "                size_constant_name = f\"INPUT_SIZE_{suffix}\"\n",
    "            elif stream == \"bbox\":\n",
    "                size_constant_name = \"INPUT_SIZE_BBOX\"\n",
    "            elif stream == \"pose\":\n",
    "                size_constant_name = \"INPUT_SIZE_POSE\"\n",
    "\n",
    "            input_sizes[stream] = globals().get(size_constant_name, 1)\n",
    "\n",
    "        return input_sizes\n",
    "\n",
    "    def _load_pose_data(self):\n",
    "        \"\"\"\n",
    "        Load pose dictionaries once per dataset instance.\n",
    "        \"\"\"\n",
    "        sets_loaded_count = 0\n",
    "        for set_id in self.set_names:\n",
    "            self.all_pose_data[set_id] = {}\n",
    "            pose_set_path = os.path.join(self.pose_data_dir, set_id)\n",
    "            if not os.path.isdir(pose_set_path):\n",
    "                continue\n",
    "\n",
    "            pkl_files_in_set = [\n",
    "                f\n",
    "                for f in os.listdir(pose_set_path)\n",
    "                if f.startswith(f\"{set_id}_\") and f.endswith(\"_poses.pkl\")\n",
    "            ]\n",
    "            if not pkl_files_in_set:\n",
    "                continue\n",
    "\n",
    "            loaded_video_count = 0\n",
    "            for pkl_filename in pkl_files_in_set:\n",
    "                pkl_file_path = os.path.join(pose_set_path, pkl_filename)\n",
    "                try:\n",
    "                    with open(pkl_file_path, \"rb\") as f:\n",
    "                        loaded_pkl_content = pickle.load(f)\n",
    "                except FileNotFoundError:\n",
    "                    continue\n",
    "                except Exception as e:\n",
    "                    print(f\"Error loading pose PKL {pkl_file_path}: {e}\")\n",
    "                    continue\n",
    "\n",
    "                # Every pose-PKL contains a single key (video), by convention\n",
    "                if len(loaded_pkl_content) != 1:\n",
    "                    continue\n",
    "\n",
    "                unique_video_key, video_data = list(loaded_pkl_content.items())[0]\n",
    "                video_id = \"_\".join(unique_video_key.split(\"_\")[1:])\n",
    "                if video_id in self.pie_db.get(set_id, {}):\n",
    "                    self.all_pose_data[set_id][video_id] = video_data\n",
    "                    loaded_video_count += 1\n",
    "\n",
    "            if loaded_video_count > 0:\n",
    "                sets_loaded_count += 1\n",
    "\n",
    "    def _generate_sequence_list(self):\n",
    "        \"\"\"\n",
    "        Enumerate every sliding window that satisfies length + prediction horizon.\n",
    "        \"\"\"\n",
    "        sequence_count = 0\n",
    "        for set_id in self.set_names:\n",
    "            if set_id not in self.pie_db:\n",
    "                continue\n",
    "            for video_id, video_data in self.pie_db[set_id].items():\n",
    "                if \"ped_annotations\" not in video_data:\n",
    "                    continue\n",
    "                for ped_id, ped_data in video_data[\"ped_annotations\"].items():\n",
    "                    frames = ped_data.get(\"frames\", [])\n",
    "                    if len(frames) < self.seq_len + self.pred_len:\n",
    "                        continue\n",
    "\n",
    "                    frames_sorted = sorted(frames)\n",
    "                    for i in range(len(frames_sorted) - self.seq_len - self.pred_len + 1):\n",
    "                        start_f = frames_sorted[i]\n",
    "                        obs_end_f = frames_sorted[i + self.seq_len - 1]\n",
    "\n",
    "                        # consecutiveness check\n",
    "                        if obs_end_f - start_f != self.seq_len - 1:\n",
    "                            continue\n",
    "\n",
    "                        target_idx = i + self.seq_len + self.pred_len - 1\n",
    "                        if target_idx >= len(frames_sorted):\n",
    "                            continue\n",
    "\n",
    "                        target_f = frames_sorted[target_idx]\n",
    "                        if target_f - obs_end_f != self.pred_len:\n",
    "                            continue\n",
    "\n",
    "                        self.sequences.append((set_id, video_id, ped_id, start_f))\n",
    "                        sequence_count += 1\n",
    "\n",
    "        print(f\"Dataset initialized with {sequence_count} sequences for sets {self.set_names}.\")\n",
    "\n",
    "    # --------------------------------------------------------------------- #\n",
    "    #                              overrides                                #\n",
    "    # --------------------------------------------------------------------- #\n",
    "\n",
    "    def __len__(self):\n",
    "        return len(self.sequences)\n",
    "\n",
    "    def __getitem__(self, idx):\n",
    "        \"\"\"\n",
    "        Returns:\n",
    "            features_dict   {stream_name: Tensor(seq_len, feat_dim)}\n",
    "            label_tensor    Tensor([])\n",
    "        \"\"\"\n",
    "        set_id, video_id, ped_id, start_frame = self.sequences[idx]\n",
    "        frame_nums = list(range(start_frame, start_frame + self.seq_len))\n",
    "        target_frame_num = start_frame + self.seq_len + self.pred_len - 1\n",
    "\n",
    "        # convenient aliases\n",
    "        video_db = self.pie_db.get(set_id, {}).get(video_id, {})\n",
    "        ped_db = video_db.get(\"ped_annotations\", {}).get(ped_id, {})\n",
    "        ego_db = video_db.get(\"vehicle_annotations\", {})\n",
    "        traffic_db = video_db.get(\"traffic_annotations\", {})\n",
    "        ped_attributes = ped_db.get(\"attributes\", {})\n",
    "\n",
    "        feature_sequences = {s: [] for s in self.active_streams}\n",
    "        label = 0\n",
    "\n",
    "        if (\n",
    "            \"frames\" in ped_db\n",
    "            and \"behavior\" in ped_db\n",
    "            and \"cross\" in ped_db[\"behavior\"]\n",
    "        ):\n",
    "            try:\n",
    "                target_idx = ped_db[\"frames\"].index(target_frame_num)\n",
    "                label = ped_db[\"behavior\"][\"cross\"][target_idx]\n",
    "                if label == -1:\n",
    "                    label = 0\n",
    "            except (ValueError, IndexError):\n",
    "                pass\n",
    "\n",
    "        # --- static context ------------------------------------------------\n",
    "        static_vec = np.zeros(INPUT_SIZE_STATIC, dtype=np.float32)\n",
    "        if \"static_context\" in self.active_streams:\n",
    "            sig_idx = ped_attributes.get(\"signalized\", 0)\n",
    "            int_idx = ped_attributes.get(\"intersection\", 0)\n",
    "            age_idx = ped_attributes.get(\"age\", 2)\n",
    "            gen_idx = ped_attributes.get(\"gender\", 0)\n",
    "            td_idx = int(ped_attributes.get(\"traffic_direction\", 0))\n",
    "            nl_val = ped_attributes.get(\"num_lanes\", 2)\n",
    "            nl_cat_idx = LANE_CATEGORIES.get(\n",
    "                nl_val, LANE_CATEGORIES[max(LANE_CATEGORIES.keys())]\n",
    "            )\n",
    "\n",
    "            static_vec = np.concatenate(\n",
    "                [\n",
    "                    to_one_hot(sig_idx, NUM_SIGNALIZED_CATS),\n",
    "                    to_one_hot(int_idx, NUM_INTERSECTION_CATS),\n",
    "                    to_one_hot(age_idx, NUM_AGE_CATS),\n",
    "                    to_one_hot(gen_idx, NUM_GENDER_CATS),\n",
    "                    to_one_hot(td_idx, NUM_TRAFFIC_DIR_CATS),\n",
    "                    to_one_hot(nl_cat_idx, NUM_LANE_CATS),\n",
    "                ]\n",
    "            )\n",
    "\n",
    "            if static_vec.shape[0] != INPUT_SIZE_STATIC:\n",
    "                static_vec = np.zeros(INPUT_SIZE_STATIC, dtype=np.float32)\n",
    "\n",
    "        # -------------------------------------------------------------------\n",
    "        #                    per-frame feature extraction                    #\n",
    "        # -------------------------------------------------------------------\n",
    "        for frame_num in frame_nums:\n",
    "            frame_db_idx = -1\n",
    "            if \"frames\" in ped_db:\n",
    "                try:\n",
    "                    frame_db_idx = ped_db[\"frames\"].index(frame_num)\n",
    "                except ValueError:\n",
    "                    pass\n",
    "\n",
    "            ego_frame_data = ego_db.get(frame_num, {})\n",
    "\n",
    "            # ---------- bbox ------------------------------------------------\n",
    "            if \"bbox\" in self.active_streams:\n",
    "                bbox_norm = np.zeros(INPUT_SIZE_BBOX, dtype=np.float32)\n",
    "                if (\n",
    "                    frame_db_idx != -1\n",
    "                    and \"bbox\" in ped_db\n",
    "                    and len(ped_db[\"bbox\"]) > frame_db_idx\n",
    "                ):\n",
    "                    try:\n",
    "                        x1, y1, x2, y2 = ped_db[\"bbox\"][frame_db_idx]\n",
    "                        img_w = video_db.get(\"width\", 1920)\n",
    "                        img_h = video_db.get(\"height\", 1080)\n",
    "                        if img_w > 0 and img_h > 0:\n",
    "                            cx = ((x1 + x2) / 2) / img_w\n",
    "                            cy = ((y1 + y2) / 2) / img_h\n",
    "                            w = (x2 - x1) / img_w\n",
    "                            h = (y2 - y1) / img_h\n",
    "                            if 0 < w and 0 < h and 0 <= cx <= 1 and 0 <= cy <= 1:\n",
    "                                bbox_norm = np.array([cx, cy, w, h], dtype=np.float32)\n",
    "                    except Exception:\n",
    "                        pass\n",
    "\n",
    "                feature_sequences[\"bbox\"].append(bbox_norm)\n",
    "\n",
    "            # ---------- pose -----------------------------------------------\n",
    "            if \"pose\" in self.active_streams:\n",
    "                pose_vector = np.zeros(INPUT_SIZE_POSE, dtype=np.float32)\n",
    "                vid_pose = self.all_pose_data.get(set_id, {}).get(video_id, {})\n",
    "                frame_pose = vid_pose.get(frame_num, {})\n",
    "                loaded_pose = frame_pose.get(ped_id)\n",
    "\n",
    "                if (\n",
    "                    loaded_pose is not None\n",
    "                    and isinstance(loaded_pose, np.ndarray)\n",
    "                    and loaded_pose.shape == (INPUT_SIZE_POSE,)\n",
    "                ):\n",
    "                    pose_vector = loaded_pose\n",
    "\n",
    "                feature_sequences[\"pose\"].append(pose_vector)\n",
    "\n",
    "            # ---------- ego-speed ------------------------------------------\n",
    "            if \"ego_speed\" in self.active_streams:\n",
    "                speed = ego_frame_data.get(\"OBD_speed\", 0.0)\n",
    "                if speed == 0.0:\n",
    "                    speed = ego_frame_data.get(\"GPS_speed\", 0.0)\n",
    "\n",
    "                speed_scaled = (\n",
    "                    speed - self.scalers.get(\"ego_speed_mean\", 0.0)\n",
    "                ) / self.scalers.get(\"ego_speed_std\", 1.0)\n",
    "                feature_sequences[\"ego_speed\"].append([speed_scaled])\n",
    "\n",
    "            # ---------- ego-acc --------------------------------------------\n",
    "            if \"ego_acc\" in self.active_streams:\n",
    "                acc_x = ego_frame_data.get(\"accX\", 0.0)\n",
    "                acc_y = ego_frame_data.get(\"accY\", 0.0)\n",
    "                acc_x_scaled = (\n",
    "                    acc_x - self.scalers.get(\"accX_mean\", 0.0)\n",
    "                ) / self.scalers.get(\"accX_std\", 1.0)\n",
    "                acc_y_scaled = (\n",
    "                    acc_y - self.scalers.get(\"accY_mean\", 0.0)\n",
    "                ) / self.scalers.get(\"accY_std\", 1.0)\n",
    "                feature_sequences[\"ego_acc\"].append([acc_x_scaled, acc_y_scaled])\n",
    "\n",
    "            # ---------- ego-gyro -------------------------------------------\n",
    "            if \"ego_gyro\" in self.active_streams:\n",
    "                gyro_z = ego_frame_data.get(\"gyroZ\", 0.0)\n",
    "                gyro_z_scaled = (\n",
    "                    gyro_z - self.scalers.get(\"gyroZ_mean\", 0.0)\n",
    "                ) / self.scalers.get(\"gyroZ_std\", 1.0)\n",
    "                feature_sequences[\"ego_gyro\"].append([gyro_z_scaled])\n",
    "\n",
    "            # ---------- ped_action -----------------------------------------\n",
    "            if \"ped_action\" in self.active_streams:\n",
    "                action = 0\n",
    "                if (\n",
    "                    frame_db_idx != -1\n",
    "                    and \"behavior\" in ped_db\n",
    "                    and \"action\" in ped_db[\"behavior\"]\n",
    "                    and len(ped_db[\"behavior\"][\"action\"]) > frame_db_idx\n",
    "                ):\n",
    "                    action = ped_db[\"behavior\"][\"action\"][frame_db_idx]\n",
    "                feature_sequences[\"ped_action\"].append([float(action)])\n",
    "\n",
    "            # ---------- ped_look -------------------------------------------\n",
    "            if \"ped_look\" in self.active_streams:\n",
    "                look = 0\n",
    "                if (\n",
    "                    frame_db_idx != -1\n",
    "                    and \"behavior\" in ped_db\n",
    "                    and \"look\" in ped_db[\"behavior\"]\n",
    "                    and len(ped_db[\"behavior\"][\"look\"]) > frame_db_idx\n",
    "                ):\n",
    "                    look = ped_db[\"behavior\"][\"look\"][frame_db_idx]\n",
    "                feature_sequences[\"ped_look\"].append([float(look)])\n",
    "\n",
    "            # ---------- ped_occlusion --------------------------------------\n",
    "            if \"ped_occlusion\" in self.active_streams:\n",
    "                occ = 0.0\n",
    "                if (\n",
    "                    frame_db_idx != -1\n",
    "                    and \"occlusion\" in ped_db\n",
    "                    and len(ped_db[\"occlusion\"]) > frame_db_idx\n",
    "                ):\n",
    "                    occ_val = ped_db[\"occlusion\"][frame_db_idx]\n",
    "                    occ = float(occ_val) / 2.0\n",
    "                feature_sequences[\"ped_occlusion\"].append([occ])\n",
    "\n",
    "            # ---------- traffic_light --------------------------------------\n",
    "            if \"traffic_light\" in self.active_streams:\n",
    "                state_int = 0\n",
    "                for obj_id, obj_data in traffic_db.items():\n",
    "                    if (\n",
    "                        obj_data.get(\"obj_class\") == \"traffic_light\"\n",
    "                        and \"frames\" in obj_data\n",
    "                        and \"state\" in obj_data\n",
    "                    ):\n",
    "                        try:\n",
    "                            tl_idx = obj_data[\"frames\"].index(frame_num)\n",
    "                            state_val = obj_data[\"state\"][tl_idx]\n",
    "                            if state_val != 0:\n",
    "                                state_int = state_val\n",
    "                                break\n",
    "                        except (ValueError, IndexError):\n",
    "                            continue\n",
    "                feature_sequences[\"traffic_light\"].append(\n",
    "                    to_one_hot(state_int, INPUT_SIZE_TL_STATE)\n",
    "                )\n",
    "\n",
    "            # ---------- static_context (per-frame replicate) ---------------\n",
    "            if \"static_context\" in self.active_streams:\n",
    "                feature_sequences[\"static_context\"].append(static_vec)\n",
    "\n",
    "        # -------------------------------------------------------------------\n",
    "        # convert to tensors / safe fallback\n",
    "        # -------------------------------------------------------------------\n",
    "        features = {}\n",
    "        try:\n",
    "            for name in self.active_streams:\n",
    "                features[name] = torch.tensor(\n",
    "                    np.asarray(feature_sequences[name], dtype=np.float32),\n",
    "                    dtype=torch.float32,\n",
    "                )\n",
    "        except Exception as e:\n",
    "            print(f\"Error converting features idx {idx}: {e}. Returning zeros.\")\n",
    "            features = {\n",
    "                name: torch.zeros(\n",
    "                    (self.seq_len, self._input_sizes_for_error.get(name, 1)),\n",
    "                    dtype=torch.float32,\n",
    "                )\n",
    "                for name in self.active_streams\n",
    "            }\n",
    "\n",
    "        return features, torch.tensor(label, dtype=torch.long)\n",
    "\n",
    "\n",
    "class BalancedDataset(Dataset):\n",
    "    \"\"\"\n",
    "    Memory-based balanced dataset generated by the prep notebook cell.\n",
    "    \"\"\"\n",
    "\n",
    "    def __init__(self, data_dict, active_streams, label_key=\"label\"):\n",
    "        self.active_streams = active_streams\n",
    "        self.label_key = label_key\n",
    "\n",
    "        if self.label_key not in data_dict or not data_dict[self.label_key]:\n",
    "            raise ValueError(f\"Label key '{self.label_key}' missing/empty.\")\n",
    "\n",
    "        self.num_samples = len(data_dict[self.label_key])\n",
    "        if self.num_samples == 0:\n",
    "            print(\"Warning: BalancedDataset initialized with zero samples.\")\n",
    "\n",
    "        # convert every requested stream to tensor\n",
    "        self.features = {}\n",
    "        for stream in self.active_streams:\n",
    "            if stream in data_dict and data_dict[stream]:\n",
    "                try:\n",
    "                    self.features[stream] = torch.tensor(\n",
    "                        np.asarray(data_dict[stream]), dtype=torch.float32\n",
    "                    )\n",
    "                except ValueError as e:\n",
    "                    raise ValueError(f\"Error converting stream '{stream}': {e}\")\n",
    "            else:\n",
    "                raise KeyError(f\"Stream '{stream}' missing or empty in data.\")\n",
    "\n",
    "        try:\n",
    "            self.labels = torch.tensor(\n",
    "                [lbl[0] for lbl in data_dict[self.label_key]], dtype=torch.long\n",
    "            )\n",
    "        except (IndexError, TypeError) as e:\n",
    "            raise ValueError(f\"Error converting labels: {e}\")\n",
    "\n",
    "        for stream in self.active_streams:\n",
    "            if len(self.features[stream]) != self.num_samples:\n",
    "                raise ValueError(\n",
    "                    f\"Len mismatch: '{stream}' ({len(self.features[stream])}) vs labels ({self.num_samples})\"\n",
    "                )\n",
    "\n",
    "    def __len__(self):\n",
    "        return self.num_samples\n",
    "\n",
    "    def __getitem__(self, idx):\n",
    "        feature_dict = {s: self.features[s][idx] for s in self.active_streams}\n",
    "        label = self.labels[idx]\n",
    "        return feature_dict, label\n",
    "\n",
    "\n",
    "class Attention(nn.Module):\n",
    "    def __init__(self, hidden_dim, attention_dim):\n",
    "        super().__init__()\n",
    "        self.attention_net = nn.Sequential(\n",
    "            nn.Linear(hidden_dim, attention_dim),\n",
    "            nn.Tanh(),\n",
    "            nn.Linear(attention_dim, 1),\n",
    "        )\n",
    "\n",
    "    def forward(self, lstm_output):\n",
    "        att_scores = self.attention_net(lstm_output).squeeze(2)\n",
    "        att_weights = torch.softmax(att_scores, dim=1)\n",
    "        context_vector = torch.sum(lstm_output * att_weights.unsqueeze(2), dim=1)\n",
    "        return context_vector, att_weights\n",
    "\n",
    "\n",
    "# -----------------------------------------------------------------------------#\n",
    "#                  ***  MODEL WITH WEIGHTED AVERAGE FUSION  ***                #\n",
    "# -----------------------------------------------------------------------------\n",
    "\n",
    "\n",
    "class MultiStreamWeightedAvgLSTM(nn.Module):\n",
    "    def __init__(\n",
    "        self,\n",
    "        input_sizes,\n",
    "        lstm_hidden_size,\n",
    "        num_lstm_layers,\n",
    "        num_classes,\n",
    "        attention_dim,\n",
    "        dropout_rate,\n",
    "        stream_names=None,\n",
    "    ):\n",
    "        super().__init__()\n",
    "\n",
    "        if not stream_names:\n",
    "            raise ValueError(\"stream_names cannot be empty.\")\n",
    "        self.stream_names = stream_names\n",
    "        self.num_active_streams = len(stream_names)\n",
    "        self.lstm_output_dim = lstm_hidden_size * 2  # Bi-LSTM doubles hidden\n",
    "\n",
    "        self.lstms = nn.ModuleDict()\n",
    "        self.attentions = nn.ModuleDict()\n",
    "\n",
    "        print(f\"Initializing Weighted-Avg model with streams: {self.stream_names}\")\n",
    "\n",
    "        for name in self.stream_names:\n",
    "            if name not in input_sizes:\n",
    "                raise KeyError(f\"Input size for stream '{name}' not provided.\")\n",
    "\n",
    "            in_size = input_sizes[name]\n",
    "            print(f\"  – Adding stream '{name}' (input {in_size})\")\n",
    "\n",
    "            self.lstms[name] = nn.LSTM(\n",
    "                in_size,\n",
    "                lstm_hidden_size,\n",
    "                num_lstm_layers,\n",
    "                batch_first=True,\n",
    "                dropout=dropout_rate if num_lstm_layers > 1 else 0,\n",
    "                bidirectional=True,\n",
    "            )\n",
    "            self.attentions[name] = Attention(self.lstm_output_dim, attention_dim)\n",
    "\n",
    "        # learnable fusion weights (one per stream)\n",
    "        self.fusion_weights = nn.Parameter(torch.ones(self.num_active_streams))\n",
    "\n",
    "        # classification head\n",
    "        fused_dim = self.lstm_output_dim\n",
    "        self.dropout = nn.Dropout(dropout_rate)\n",
    "        inter_dim = max(num_classes * 4, fused_dim // 2)\n",
    "        self.fc1 = nn.Linear(fused_dim, inter_dim)\n",
    "        self.relu = nn.ReLU()\n",
    "        self.fc2 = nn.Linear(inter_dim, num_classes)\n",
    "\n",
    "    # --------------------------------------------------------------------- #\n",
    "\n",
    "    def forward(self, x):\n",
    "        # gather context vectors ------------------------------------------------\n",
    "        ctx_vecs = []\n",
    "        for name in self.stream_names:\n",
    "            if name not in x:\n",
    "                # gracefully handle a missing stream during inference\n",
    "                zero_ctx = torch.zeros(\n",
    "                    x[next(iter(x))].shape[0],\n",
    "                    self.lstm_output_dim,\n",
    "                    device=x[next(iter(x))].device,\n",
    "                )\n",
    "                ctx_vecs.append(zero_ctx)\n",
    "                continue\n",
    "\n",
    "            lstm_out, _ = self.lstms[name](x[name])\n",
    "            context_vector, _ = self.attentions[name](lstm_out)\n",
    "            ctx_vecs.append(context_vector)\n",
    "\n",
    "        if len(ctx_vecs) != self.num_active_streams:\n",
    "            raise RuntimeError(\n",
    "                f\"context_vectors({len(ctx_vecs)}) != num_streams({self.num_active_streams})\"\n",
    "            )\n",
    "\n",
    "        # weighted average fusion ---------------------------------------------\n",
    "        stacked = torch.stack(ctx_vecs, dim=1)  # (B, N, D)\n",
    "        weights = torch.softmax(self.fusion_weights, dim=0).view(1, -1, 1)\n",
    "        fused = torch.sum(stacked * weights, dim=1)\n",
    "\n",
    "        # classification head --------------------------------------------------\n",
    "        out = self.dropout(fused)\n",
    "        out = self.relu(self.fc1(out))\n",
    "        out = self.dropout(out)\n",
    "        logits = self.fc2(out)\n",
    "        return logits\n",
    "\n",
    "\n",
    "# -----------------------------------------------------------------------------#\n",
    "#                       Training / evaluation helpers                          #\n",
    "# -----------------------------------------------------------------------------\n",
    "\n",
    "\n",
    "def train_epoch(model, dataloader, optimizer, criterion, device):\n",
    "    model.train()\n",
    "    total_loss = 0.0\n",
    "    all_preds, all_labels = [], []\n",
    "    active = model.stream_names\n",
    "\n",
    "    for feats, labels in tqdm(dataloader, desc=\"Training\", leave=False):\n",
    "        inputs = {n: feats[n].to(device) for n in active if n in feats}\n",
    "        labels = labels.to(device)\n",
    "\n",
    "        optimizer.zero_grad()\n",
    "        outputs = model(inputs)\n",
    "        loss = criterion(outputs, labels)\n",
    "        loss.backward()\n",
    "        optimizer.step()\n",
    "\n",
    "        total_loss += loss.item()\n",
    "        all_preds.extend(torch.argmax(outputs, 1).cpu().numpy())\n",
    "        all_labels.extend(labels.cpu().numpy())\n",
    "\n",
    "    return total_loss / max(1, len(dataloader)), accuracy_score(all_labels, all_preds)\n",
    "\n",
    "\n",
    "def evaluate_epoch(model, dataloader, criterion, device):\n",
    "    model.eval()\n",
    "    total_loss = 0.0\n",
    "    all_labels, all_preds, all_probs = [], [], []\n",
    "    active = model.stream_names\n",
    "\n",
    "    with torch.no_grad():\n",
    "        for feats, labels in tqdm(dataloader, desc=\"Evaluating\", leave=False):\n",
    "            inputs = {n: feats[n].to(device) for n in active if n in feats}\n",
    "            labels = labels.to(device)\n",
    "\n",
    "            outputs = model(inputs)\n",
    "            loss = criterion(outputs, labels)\n",
    "            total_loss += loss.item()\n",
    "\n",
    "            probs = torch.softmax(outputs, 1)\n",
    "            preds = torch.argmax(probs, 1)\n",
    "\n",
    "            all_labels.extend(labels.cpu().numpy())\n",
    "            all_preds.extend(preds.cpu().numpy())\n",
    "            all_probs.extend(probs.cpu().numpy())\n",
    "\n",
    "    avg_loss = total_loss / max(1, len(dataloader))\n",
    "    all_probs = np.asarray(all_probs)\n",
    "    all_labels = np.asarray(all_labels)\n",
    "    all_preds = np.asarray(all_preds)\n",
    "\n",
    "    acc = accuracy_score(all_labels, all_preds)\n",
    "    prec, rec, f1, _ = precision_recall_fscore_support(\n",
    "        all_labels, all_preds, average=\"binary\", pos_label=1, zero_division=0\n",
    "    )\n",
    "    auc = (\n",
    "        roc_auc_score(all_labels, all_probs[:, 1])\n",
    "        if len(np.unique(all_labels)) > 1\n",
    "        else float(\"nan\")\n",
    "    )\n",
    "\n",
    "    return {\n",
    "        \"loss\": avg_loss,\n",
    "        \"accuracy\": acc,\n",
    "        \"precision\": prec,\n",
    "        \"recall\": rec,\n",
    "        \"f1\": f1,\n",
    "        \"auc\": auc,\n",
    "    }\n",
    "\n",
    "\n",
    "def get_predictions_and_labels(model, dataloader, device):\n",
    "    model.eval()\n",
    "    labels_all, preds_all = [], []\n",
    "    active = model.stream_names\n",
    "\n",
    "    with torch.no_grad():\n",
    "        for feats, labels in tqdm(dataloader, desc=\"Generating CM Data\", leave=False):\n",
    "            inputs = {n: feats[n].to(device) for n in active if n in feats}\n",
    "            outputs = model(inputs)\n",
    "            preds = torch.argmax(outputs, 1)\n",
    "            labels_all.extend(labels.cpu().numpy())\n",
    "            preds_all.extend(preds.cpu().numpy())\n",
    "\n",
    "    return np.asarray(labels_all), np.asarray(preds_all)\n",
    "\n",
    "\n",
    "# -----------------------------------------------------------------------------#\n",
    "#                            Main execution block                              #\n",
    "# -----------------------------------------------------------------------------\n",
    "\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    print(\"--- Running Model Training/Evaluation with Weighted Fusion ---\")\n",
    "    print(f\"Active Streams: {ACTIVE_STREAMS}\")\n",
    "\n",
    "    # ------------------ load balanced data & scalers -------------------------\n",
    "    print(\"\\nLoading balanced training data …\")\n",
    "    try:\n",
    "        with open(BALANCED_DATA_PKL_PATH, \"rb\") as f:\n",
    "            balanced_train_data_dict = pickle.load(f)\n",
    "        with open(SCALERS_PKL_PATH, \"rb\") as f:\n",
    "            scalers = pickle.load(f)\n",
    "        print(\"   ✓ pre-processed data loaded.\")\n",
    "    except FileNotFoundError as e:\n",
    "        print(f\"ERROR: {e}.  Run the preprocessing cell first.\")\n",
    "        sys.exit(1)\n",
    "    except Exception as e:\n",
    "        print(f\"Error loading pre-processed data: {e}\")\n",
    "        sys.exit(1)\n",
    "\n",
    "    # -------------------------- load PIE database ----------------------------\n",
    "    print(\"\\nLoading PIE database cache for validation …\")\n",
    "    if not os.path.exists(PIE_DATABASE_CACHE_PATH):\n",
    "        raise FileNotFoundError(\"PIE database cache not found.\")\n",
    "\n",
    "    try:\n",
    "        with open(PIE_DATABASE_CACHE_PATH, \"rb\") as f:\n",
    "            pie_database = pickle.load(f)\n",
    "    except Exception as e:\n",
    "        raise RuntimeError(f\"Failed to load PIE database: {e}\")\n",
    "    print(\"   ✓ PIE database loaded.\")\n",
    "\n",
    "    # ------------------- create datasets / dataloaders -----------------------\n",
    "    print(\"\\nCreating Datasets and DataLoaders …\")\n",
    "    try:\n",
    "        train_dataset = BalancedDataset(\n",
    "            balanced_train_data_dict, ACTIVE_STREAMS, label_key=\"label\"\n",
    "        )\n",
    "        del balanced_train_data_dict\n",
    "\n",
    "        val_dataset = PIEDataset(\n",
    "            pie_database,\n",
    "            VAL_SETS_STR,\n",
    "            POSE_DATA_DIR,\n",
    "            SEQ_LEN,\n",
    "            PRED_LEN,\n",
    "            scalers,\n",
    "            ALL_POSSIBLE_STREAMS,  # provide all streams for val\n",
    "        )\n",
    "    except Exception as e:\n",
    "        print(f\"Error creating datasets: {e}\")\n",
    "        raise\n",
    "\n",
    "    if len(train_dataset) == 0 or len(val_dataset) == 0:\n",
    "        raise ValueError(\"One of the datasets is empty!\")\n",
    "\n",
    "    train_loader = DataLoader(\n",
    "        train_dataset,\n",
    "        batch_size=BATCH_SIZE,\n",
    "        shuffle=True,\n",
    "        num_workers=2,\n",
    "        pin_memory=True,\n",
    "    )\n",
    "    val_loader = DataLoader(\n",
    "        val_dataset,\n",
    "        batch_size=BATCH_SIZE,\n",
    "        shuffle=False,\n",
    "        num_workers=2,\n",
    "        pin_memory=True,\n",
    "    )\n",
    "    print(\"   ✓ DataLoaders ready.\")\n",
    "    del pie_database\n",
    "    gc.collect()\n",
    "\n",
    "    # ------------------------- initialise the model --------------------------\n",
    "    print(\"\\nInitialising model …\")\n",
    "    current_input_sizes = {}\n",
    "    SPECIAL = {\n",
    "        \"TRAFFIC_LIGHT\": \"TL_STATE\",\n",
    "        \"STATIC_CONTEXT\": \"STATIC\",\n",
    "        \"EGO_SPEED\": \"EGO_SPEED\",\n",
    "        \"EGO_ACC\": \"EGO_ACC\",\n",
    "        \"EGO_GYRO\": \"EGO_GYRO\",\n",
    "        \"PED_ACTION\": \"PED_ACTION\",\n",
    "        \"PED_LOOK\": \"PED_LOOK\",\n",
    "        \"PED_OCCLUSION\": \"PED_OCC\",\n",
    "    }\n",
    "\n",
    "    for s in ACTIVE_STREAMS:\n",
    "        name = f\"INPUT_SIZE_{SPECIAL.get(s.upper(), s.upper())}\"\n",
    "        if s == \"bbox\":\n",
    "            name = \"INPUT_SIZE_BBOX\"\n",
    "        elif s == \"pose\":\n",
    "            name = \"INPUT_SIZE_POSE\"\n",
    "\n",
    "        if name not in globals():\n",
    "            raise ValueError(f\"Input-size constant {name} not found.\")\n",
    "\n",
    "        current_input_sizes[s] = globals()[name]\n",
    "\n",
    "    model = MultiStreamWeightedAvgLSTM(\n",
    "        current_input_sizes,\n",
    "        LSTM_HIDDEN_SIZE,\n",
    "        NUM_LSTM_LAYERS,\n",
    "        NUM_CLASSES,\n",
    "        ATTENTION_DIM,\n",
    "        DROPOUT_RATE,\n",
    "        stream_names=ACTIVE_STREAMS,\n",
    "    ).to(DEVICE)\n",
    "\n",
    "    print(\"\\n--- Model architecture ---\")\n",
    "    print(model)\n",
    "    total_params = sum(p.numel() for p in model.parameters() if p.requires_grad)\n",
    "    print(f\"Trainable parameters: {total_params:,}\")\n",
    "    print(\"-\" * 30)\n",
    "\n",
    "    # ---------------- loss / optimiser --------------------------------------\n",
    "    print(\"\\nCalculating class weights …\")\n",
    "    train_labels = train_dataset.labels.tolist()\n",
    "    n0, n1 = train_labels.count(0), train_labels.count(1)\n",
    "    total = len(train_labels)\n",
    "    if total == 0:\n",
    "        w0, w1 = 1.0, 1.0\n",
    "    elif n0 == 0:\n",
    "        w0, w1 = 0.0, 1.0\n",
    "    elif n1 == 0:\n",
    "        w0, w1 = 1.0, 0.0\n",
    "    else:\n",
    "        w0, w1 = total / (2.0 * n0), total / (2.0 * n1)\n",
    "\n",
    "    class_weights = torch.tensor([w0, w1], dtype=torch.float32).to(DEVICE)\n",
    "    print(f\"Loss weights → 0: {w0:.2f}, 1: {w1:.2f}\")\n",
    "\n",
    "    criterion = nn.CrossEntropyLoss(weight=class_weights)\n",
    "    optimizer = optim.Adam(model.parameters(), lr=LEARNING_RATE)\n",
    "\n",
    "    best_val_f1 = -1.0\n",
    "    history = {\"train_loss\": [], \"val_loss\": [], \"train_acc\": [], \"val_acc\": [], \"val_f1\": []}\n",
    "    best_model_path = \"\"\n",
    "\n",
    "    # --------------------------- training loop -------------------------------\n",
    "    print(\"\\n--- Starting training ---\")\n",
    "    for epoch in range(NUM_EPOCHS):\n",
    "        t0 = time.time()\n",
    "\n",
    "        train_loss, train_acc = train_epoch(model, train_loader, optimizer, criterion, DEVICE)\n",
    "        metrics = evaluate_epoch(model, val_loader, criterion, DEVICE)\n",
    "\n",
    "        history[\"train_loss\"].append(train_loss)\n",
    "        history[\"val_loss\"].append(metrics[\"loss\"])\n",
    "        history[\"train_acc\"].append(train_acc)\n",
    "        history[\"val_acc\"].append(metrics[\"accuracy\"])\n",
    "        history[\"val_f1\"].append(metrics[\"f1\"])\n",
    "\n",
    "        print(f\"\\nEpoch {epoch + 1:02d}/{NUM_EPOCHS} – {time.time() - t0:.1f}s\")\n",
    "        print(f\"  train loss {train_loss:.4f} | acc {train_acc:.4f}\")\n",
    "        print(f\"  val   loss {metrics['loss']:.4f} | acc {metrics['accuracy']:.4f}\")\n",
    "        print(\n",
    "            f\"           prec {metrics['precision']:.4f} | rec {metrics['recall']:.4f} | f1 {metrics['f1']:.4f} | auc {metrics['auc']:.4f}\"\n",
    "        )\n",
    "\n",
    "        if metrics[\"f1\"] > best_val_f1:\n",
    "            best_val_f1 = metrics[\"f1\"]\n",
    "            best_model_path = f\"best_model_weighted_{'_'.join(sorted(ACTIVE_STREAMS))}_ep{epoch + 1}.pth\"\n",
    "            torch.save(model.state_dict(), best_model_path)\n",
    "            print(f\"  ✓ new best model saved → {best_model_path} (F1 {best_val_f1:.4f})\")\n",
    "\n",
    "    print(\"\\n--- Training finished ---\")\n",
    "\n",
    "    # --------------------------- plots ---------------------------------------\n",
    "    print(\"\\nPlotting training curves …\")\n",
    "    fig, ax = plt.subplots(1, 2, figsize=(12, 5))\n",
    "\n",
    "    ax[0].plot(range(1, NUM_EPOCHS + 1), history[\"train_loss\"], label=\"Train\")\n",
    "    ax[0].plot(range(1, NUM_EPOCHS + 1), history[\"val_loss\"], label=\"Val\")\n",
    "    ax[0].set_xlabel(\"Epoch\")\n",
    "    ax[0].set_ylabel(\"Loss\")\n",
    "    ax[0].set_title(\"Loss curve\")\n",
    "    ax[0].legend()\n",
    "    ax[0].grid(True)\n",
    "\n",
    "    ax[1].plot(range(1, NUM_EPOCHS + 1), history[\"train_acc\"], label=\"Train Acc\")\n",
    "    ax[1].plot(range(1, NUM_EPOCHS + 1), history[\"val_acc\"], label=\"Val Acc\")\n",
    "    ax[1].plot(range(1, NUM_EPOCHS + 1), history[\"val_f1\"], \"--\", label=\"Val F1\")\n",
    "    ax[1].set_xlabel(\"Epoch\")\n",
    "    ax[1].set_ylabel(\"Metric\")\n",
    "    ax[1].set_title(\"Accuracy & F1\")\n",
    "    ax[1].legend()\n",
    "    ax[1].grid(True)\n",
    "\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n",
    "\n",
    "    # ------------------- final evaluation (best model) -----------------------\n",
    "    print(\"\\n--- Final Evaluation on Validation set ---\")\n",
    "    if best_model_path and os.path.exists(best_model_path):\n",
    "        try:\n",
    "            model.load_state_dict(torch.load(best_model_path, map_location=DEVICE))\n",
    "            print(f\"Loaded best model: {best_model_path}\")\n",
    "        except Exception as e:\n",
    "            print(f\"Warning: could not load best model ({e}).  Using last epoch params.\")\n",
    "    else:\n",
    "        print(\"Warning: best model not found, using last epoch parameters.\")\n",
    "\n",
    "    final_metrics = evaluate_epoch(model, val_loader, criterion, DEVICE)\n",
    "    y_true, y_pred = get_predictions_and_labels(model, val_loader, DEVICE)\n",
    "    cm = confusion_matrix(y_true, y_pred, labels=[0, 1])\n",
    "\n",
    "    print(\"\\n--- Final metrics (Weighted Avg Fusion) ---\")\n",
    "    for k, v in final_metrics.items():\n",
    "        print(f\"{k:<10}: {v:.4f}\")\n",
    "\n",
    "    print(f\"(Best validation F1 during training: {best_val_f1:.4f})\")\n",
    "\n",
    "    ConfusionMatrixDisplay(cm, display_labels=[\"Not Crossing\", \"Crossing\"]).plot(\n",
    "        cmap=plt.cm.Blues\n",
    "    )\n",
    "    plt.title(\"Confusion Matrix\")\n",
    "    plt.show()\n",
    "\n",
    "    # ------------------- inspect learned fusion weights ----------------------\n",
    "    if hasattr(model, \"fusion_weights\"):\n",
    "        w = torch.softmax(model.fusion_weights, 0).detach().cpu().numpy()\n",
    "        print(\"\\n--- Learned fusion weights ---\")\n",
    "        for stream, weight in zip(model.stream_names, w):\n",
    "            print(f\"{stream:<15}: {weight:.4f}\")\n",
    "        print(\"-\" * 30)\n",
    "\n",
    "    print(\"\\n--- Script complete ---\")\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "gpu",
   "dataSources": [
    {
     "datasetId": 6993690,
     "sourceId": 11201333,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 6993708,
     "sourceId": 11201362,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 6993722,
     "sourceId": 11201388,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 6993740,
     "sourceId": 11201422,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 6993794,
     "sourceId": 11201506,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 6993809,
     "sourceId": 11201543,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 7034191,
     "sourceId": 11255589,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 7127490,
     "sourceId": 11382982,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 7142036,
     "sourceId": 11402679,
     "sourceType": "datasetVersion"
    },
    {
     "modelId": 279383,
     "modelInstanceId": 258142,
     "sourceId": 302300,
     "sourceType": "modelInstanceVersion"
    },
    {
     "modelId": 283333,
     "modelInstanceId": 262207,
     "sourceId": 307831,
     "sourceType": "modelInstanceVersion"
    },
    {
     "modelId": 288527,
     "modelInstanceId": 267476,
     "sourceId": 316944,
     "sourceType": "modelInstanceVersion"
    },
    {
     "modelId": 297682,
     "modelInstanceId": 276781,
     "sourceId": 329886,
     "sourceType": "modelInstanceVersion"
    },
    {
     "modelId": 297702,
     "modelInstanceId": 276800,
     "sourceId": 329908,
     "sourceType": "modelInstanceVersion"
    },
    {
     "isSourceIdPinned": true,
     "modelId": 314775,
     "modelInstanceId": 294156,
     "sourceId": 352620,
     "sourceType": "modelInstanceVersion"
    }
   ],
   "dockerImageVersionId": 30918,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 5420.533882,
   "end_time": "2025-05-02T12:29:32.743895",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-05-02T10:59:12.210013",
   "version": "2.6.0"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "0009c8b03dd44297a79bef5279a83efb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f73abcee95fb4283a9a394f8b69b80e7",
       "max": 1388.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_e6b30ccc659f430cac798438d89bbc23",
       "tabbable": null,
       "tooltip": null,
       "value": 1388.0
      }
     },
     "02f1c47fbe4447ffb5aa3f1f92ad5a3c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "03c095494a0f4f618a325939d4959406": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "03db24904d7e4a6b978ff9a9062b067f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "0428923eabb14a038148a86eec2b9082": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "042cae2c9fd34923b8c8bcb866aa6cdd": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "046f18073ae6470892177d19d3b9e9a1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_304782e358d240b18cfc0c56245a52cb",
       "max": 2680.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_fc4d10b965ef4ea5822b99fdc7f6f61a",
       "tabbable": null,
       "tooltip": null,
       "value": 2680.0
      }
     },
     "04782fe01e30412b89101590b9e881e1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f98f26dc76404120b38f0ddfcb30fb4c",
       "max": 1388.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_6386a603ebcd4c95a8230d8dee64ab5c",
       "tabbable": null,
       "tooltip": null,
       "value": 1388.0
      }
     },
     "073c834c0f1644d39ac5a7ddfefb2e4a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_20f51dcfbed94470af19048d3071204a",
       "max": 2680.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_c2fb891671844781880e28321302ae56",
       "tabbable": null,
       "tooltip": null,
       "value": 2680.0
      }
     },
     "0765ed0a108c46ce9ca26697e6fcb21f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_27f5093b05af4b39aefe6f49719f204d",
       "max": 2680.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d36ad3fa55bd4b02888c0116ff7dbd96",
       "tabbable": null,
       "tooltip": null,
       "value": 2680.0
      }
     },
     "07ab8d2d5f1e4818bd179e25a0d1cb2d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_0428923eabb14a038148a86eec2b9082",
       "max": 1388.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_8ffdf5a3db8b47fda029bbeb70244eba",
       "tabbable": null,
       "tooltip": null,
       "value": 1388.0
      }
     },
     "081373bd963d4ac9bb5fc099078a6c60": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5ddfc90368264886991e3fdb2ecb47f9",
       "placeholder": "​",
       "style": "IPY_MODEL_443ca1262c4d4886adafb8fd976b1ef5",
       "tabbable": null,
       "tooltip": null,
       "value": " 211819/211819 [15:58&lt;00:00, 226.02it/s]"
      }
     },
     "08733170ca8a43eba9fa9e4f96418c67": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_cb0a36e706b24c96bc71b1ea662425b7",
       "max": 211819.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_32c0bbf65e9546c2b15dddfa2de75a17",
       "tabbable": null,
       "tooltip": null,
       "value": 211819.0
      }
     },
     "08925ead541543fb82e1ed212390ad3b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "0a7f33c80c2445eaadf2b26640d08145": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_43d19d09da4f4a858464284caf273324",
       "placeholder": "​",
       "style": "IPY_MODEL_3cada7a4885a45e6bcbd7e4b64cfab5f",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "0bfd4935725b416bb14378faab16565e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6ed1cfb5ce3a4d2089619fefdfe00b22",
       "max": 2680.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_f8f07d90d2634d30aac4a09748c1dccd",
       "tabbable": null,
       "tooltip": null,
       "value": 2680.0
      }
     },
     "0c18373c87374967ad822919caacf12a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "0c82fe113809473fba43f1bba9e1160a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "0d7c2c4a1e8d4f7da4560fc6afab5ea9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "0e51f33e13a244919bf045f3ac7057d9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "0e728b36e9cf46998197fe6cf7110566": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "10f55b5cbf2c480c9ce6705130613cf8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "13967f9c380d4200bffc85da0b4a7a30": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_927b0d8da37b459283c7eaf3bed8b7aa",
       "placeholder": "​",
       "style": "IPY_MODEL_620e60b580f94b59b4682f9371b70790",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "13e5a1cfc7d24737abd1e319e3ba98f2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "15720fc3f0094888b76847184fe86438": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "179eda9e97384bf0a372e61552f14075": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2e24b2a5bbc342c7973bdfe4f6bd0458",
       "placeholder": "​",
       "style": "IPY_MODEL_b5d2033b0d6042759c47db21275986e5",
       "tabbable": null,
       "tooltip": null,
       "value": " 1387/1388 [01:48&lt;00:00,  5.60it/s]"
      }
     },
     "17d103a489564dffb5221fcc6a0f8f6e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1870a92363fe495ca69cda4d5dff8c87": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_594f885507be44debe1f350478b16577",
        "IPY_MODEL_b8e3d683f3744591a94d996e8294d9ba",
        "IPY_MODEL_c868a13125f74eaf961f1067ae35f80d"
       ],
       "layout": "IPY_MODEL_3ee1ce0a834d4b088e05a1fc5015a2b7",
       "tabbable": null,
       "tooltip": null
      }
     },
     "18786e05d9f64a33b63bdb0976605dbd": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "info",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_8963a1855ba0443d99b3e862fefb967e",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_9942ce77b6254dc6b1a8c6da59944378",
       "tabbable": null,
       "tooltip": null,
       "value": 1.0
      }
     },
     "192302d41f014dd5bc7a025ae750443e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "1a10b12f507c4e93bb25edec4b7e34f8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_eac87cc2e0fd48a9aa9840977004606f",
        "IPY_MODEL_c64a878e336c45658f0b48c92422bda0",
        "IPY_MODEL_2d993bcba35d4ca987e1ddf8c087545f"
       ],
       "layout": "IPY_MODEL_f7acab7b725145a485dd249e60bcb147",
       "tabbable": null,
       "tooltip": null
      }
     },
     "1b0b7bc2f31549909070a7570ca1877b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2be61865f8f34f8985e3e9f7f7061e69",
       "placeholder": "​",
       "style": "IPY_MODEL_86f1c31712b64def8041e3376e1933cd",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "1b431705ef21482386fc397cba23857d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "1bfa41f5cc954662bf6d1cda96d555ce": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1e12962b751c4426990074e510d20b1d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_10f55b5cbf2c480c9ce6705130613cf8",
       "placeholder": "​",
       "style": "IPY_MODEL_2070ddb47b78410fa1def404a4387382",
       "tabbable": null,
       "tooltip": null,
       "value": " 2679/2680 [05:08&lt;00:00,  8.57it/s]"
      }
     },
     "1e500dd271e44a4299d480b3abe21926": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_2b158f6d7b6e44408fa526e86f6ccc72",
        "IPY_MODEL_0bfd4935725b416bb14378faab16565e",
        "IPY_MODEL_c45acb0ede76443381ded7d8502b8c70"
       ],
       "layout": "IPY_MODEL_2d8573c7730147d293d5eeeceba73eef",
       "tabbable": null,
       "tooltip": null
      }
     },
     "1e719409c7674852bc9d56a671afd7ec": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_e6ac8eebe11c4400b07376d943ea42db",
       "placeholder": "​",
       "style": "IPY_MODEL_92be8d6f55434bc4a4542c0745cc7ceb",
       "tabbable": null,
       "tooltip": null,
       "value": " 1388/1388 [01:48&lt;00:00,  7.56it/s]"
      }
     },
     "2070ddb47b78410fa1def404a4387382": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "20f51dcfbed94470af19048d3071204a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "21eaf8edac744e3f96997ae4807cde5f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_eb36b50fc6a242ecb4323889134467ff",
        "IPY_MODEL_07ab8d2d5f1e4818bd179e25a0d1cb2d",
        "IPY_MODEL_c2532a86010b4fa5a833f086cc91e491"
       ],
       "layout": "IPY_MODEL_273fe52dd8b54259a5a06474eae030c1",
       "tabbable": null,
       "tooltip": null
      }
     },
     "244ca698c9284488b7541cbd1c50b59c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "24ebdd6f820d4b06b7aa0c2fab46126b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_8c19ff0245054239ad3877d618991cd4",
        "IPY_MODEL_a4ef6473cc2845c6873d9cb18b52ed92",
        "IPY_MODEL_ef83b5604c67407f9257e6d51199928d"
       ],
       "layout": "IPY_MODEL_536b8ed77b6d44dea1088484577ce4ce",
       "tabbable": null,
       "tooltip": null
      }
     },
     "251aea70dc894760ba36a793a5148bb9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "25c5ab0e56094470895d37ce31cc8ca1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "26911864a39c44a4a14990f8f7c2920c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_2d2faba663234a36bff4596b1ca5c60e",
        "IPY_MODEL_31a8ead54f4347f4bd801028f1ca5a2a",
        "IPY_MODEL_e54f76906aac43f3bad2798ff056c44e"
       ],
       "layout": "IPY_MODEL_350a9033764b49e7bac075aedaeee07f",
       "tabbable": null,
       "tooltip": null
      }
     },
     "273fe52dd8b54259a5a06474eae030c1": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "27f5093b05af4b39aefe6f49719f204d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "294c472aab314dc2a7c01d73402f008a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2a20c3313aaa42418f7c8a01a5fa45ad": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "2a5e1b2003894e6ca9acffc3c87a325f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2af49d10441b4afc86877d9612dbdf6d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9dcd7bcfce9546259896901962ee85f5",
       "placeholder": "​",
       "style": "IPY_MODEL_59e61c69cbb2425a9224ae4470b509f0",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "2b158f6d7b6e44408fa526e86f6ccc72": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a00671ce4baf491ab15428948879872e",
       "placeholder": "​",
       "style": "IPY_MODEL_dacd68657ee24a46ac38ac998f428cfd",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "2be61865f8f34f8985e3e9f7f7061e69": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2c64cae55d4c46e7864466b17c7c22ec": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_851fab350e844370a7ef10371b31eb1a",
        "IPY_MODEL_aba45745499e43c4b35591584e470e2e",
        "IPY_MODEL_8940eca2e42242379898403f20de925c"
       ],
       "layout": "IPY_MODEL_590fa3f686ce4af6a5a6050ef78ca949",
       "tabbable": null,
       "tooltip": null
      }
     },
     "2d2faba663234a36bff4596b1ca5c60e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_1bfa41f5cc954662bf6d1cda96d555ce",
       "placeholder": "​",
       "style": "IPY_MODEL_56f397e95a9b40ecb654c302f0fdc852",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "2d4b1377398b4a88a67bf7d583f08bff": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_1b0b7bc2f31549909070a7570ca1877b",
        "IPY_MODEL_bb9c52f9141e41af802af052e620b5ad",
        "IPY_MODEL_b0ff5d00129e41319f6983ed988c883a"
       ],
       "layout": "IPY_MODEL_a81a93deba274545a44541a0b1d7525e",
       "tabbable": null,
       "tooltip": null
      }
     },
     "2d8573c7730147d293d5eeeceba73eef": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "2d993bcba35d4ca987e1ddf8c087545f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9fa77a0cb18e429a9ad58de51106c1f5",
       "placeholder": "​",
       "style": "IPY_MODEL_93d82e9e23f046829c60326f5fb4ff39",
       "tabbable": null,
       "tooltip": null,
       "value": " 1387/1388 [01:48&lt;00:00,  7.08it/s]"
      }
     },
     "2e24b2a5bbc342c7973bdfe4f6bd0458": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2ecaa3185da0490bbb1bc27f4917e966": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2ef5da8f66d7475ea15627bafb0720c5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "2f773fba7da14cbe9c2163bd9dde530d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "304782e358d240b18cfc0c56245a52cb": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "304c59db125e458fb82723a367d23f06": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "31a8ead54f4347f4bd801028f1ca5a2a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_17d103a489564dffb5221fcc6a0f8f6e",
       "max": 1388.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d096809df96f47cd915ebed7ce9c35bd",
       "tabbable": null,
       "tooltip": null,
       "value": 1388.0
      }
     },
     "32c0bbf65e9546c2b15dddfa2de75a17": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "334aa12d055e44528e5f778fd1d4d26d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "350a9033764b49e7bac075aedaeee07f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "37ef4850aefe4afe83409d8078b3d2e9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_eb390cbf43ad49afb2a6c4d23116dd32",
        "IPY_MODEL_c2079bbd8f5d470f893e12f01190926f",
        "IPY_MODEL_179eda9e97384bf0a372e61552f14075"
       ],
       "layout": "IPY_MODEL_3ed444b6e4e847318a880fcbccb2f6b7",
       "tabbable": null,
       "tooltip": null
      }
     },
     "3886e2fab12a4e4592de7a978b70072e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "38df38b7061a41bda608428ed0261fbb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_8f3d048114774b60b55a5980faf47fc2",
        "IPY_MODEL_791bb3e55bfb43f5858a2dc428336d6b",
        "IPY_MODEL_81d383221e6f43d794f152ad1a164a71"
       ],
       "layout": "IPY_MODEL_8cc94a8e89e14126a24ee9bc460f1886",
       "tabbable": null,
       "tooltip": null
      }
     },
     "398c8f9802964d3b8a09e6a5007a5a7e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3adb5afd136b4b8a8678eaea1b72d243": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "3bd5e3b4c828437f961d568e0a02bdad": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3c442f5c861e43f29620edf313e13840": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_571bb9a628524b14988bf38ae2dc26dc",
       "placeholder": "​",
       "style": "IPY_MODEL_cf5466f81e984b489e1bfcfcca147759",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "3cada7a4885a45e6bcbd7e4b64cfab5f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "3ed444b6e4e847318a880fcbccb2f6b7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "3ee1ce0a834d4b088e05a1fc5015a2b7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "41576ca40f7c4ffd805df4d9ef5faca1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_0e728b36e9cf46998197fe6cf7110566",
       "max": 1388.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_cabcfa0cca534a11ba35900f9a2fd324",
       "tabbable": null,
       "tooltip": null,
       "value": 1388.0
      }
     },
     "4195b8d5e85149d791e0214f30b4efb6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "433bdc8bdb594bada3e16f9f29596fa9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ef2992be56a049ca81a126d97defea61",
       "placeholder": "​",
       "style": "IPY_MODEL_96ca4baa549d4ce79b0d54c8c5c715ca",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "434b703fb52e49c0bcf3dd5d06661d89": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "43d19d09da4f4a858464284caf273324": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "44300295bf1f41d49fd7acc34da85e4f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_b1378f19b177472889f96c8ede5923df",
       "placeholder": "​",
       "style": "IPY_MODEL_80912c7ac0b64743a67e622ab2197dc0",
       "tabbable": null,
       "tooltip": null,
       "value": " 16/? [00:00&lt;00:00, 15.93it/s]"
      }
     },
     "443ca1262c4d4886adafb8fd976b1ef5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "44fdf3e8c2944e73800f69a49e1b972a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_3886e2fab12a4e4592de7a978b70072e",
       "placeholder": "​",
       "style": "IPY_MODEL_2a20c3313aaa42418f7c8a01a5fa45ad",
       "tabbable": null,
       "tooltip": null,
       "value": ""
      }
     },
     "491432beefdd49e3ad3ec43f31d1a9cd": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "49eb28d151c148619546c6b1d7cea0f2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_604c5c0004fd4feea303dbdcc2ddac6f",
        "IPY_MODEL_e1d08d4167724d1890b5522c78016ec8",
        "IPY_MODEL_1e719409c7674852bc9d56a671afd7ec"
       ],
       "layout": "IPY_MODEL_f872692722ba44f996a556866b5904d6",
       "tabbable": null,
       "tooltip": null
      }
     },
     "4a998d5e4acc4757b89105cc812d2e94": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_13967f9c380d4200bffc85da0b4a7a30",
        "IPY_MODEL_704f1d521553451a8ad377a0866458d6",
        "IPY_MODEL_be7514ed819a45f9a47b4239d4a9f04f"
       ],
       "layout": "IPY_MODEL_2ef5da8f66d7475ea15627bafb0720c5",
       "tabbable": null,
       "tooltip": null
      }
     },
     "4cd5ebb93d0f436082e82f63b77acf82": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_747ae7139d454489a6da11596c31f63a",
       "placeholder": "​",
       "style": "IPY_MODEL_f2c3faae3eaa499f88c7cb3dc75457e2",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "4d42efc108aa458d9abab15f615135c0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "505d78195fa64712a4e3835af48565e2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "52038ce6418e45708116f435e55e2ac8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_2af49d10441b4afc86877d9612dbdf6d",
        "IPY_MODEL_82c381505e874ceea911e1ffdf69f260",
        "IPY_MODEL_52f2e15832ba491e9fb49b1fa6c4a5db"
       ],
       "layout": "IPY_MODEL_2f773fba7da14cbe9c2163bd9dde530d",
       "tabbable": null,
       "tooltip": null
      }
     },
     "524df0c7481444b98534361bc6582433": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "52f2e15832ba491e9fb49b1fa6c4a5db": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_7436f5e527f34be193e8660dea21e2f4",
       "placeholder": "​",
       "style": "IPY_MODEL_91c047e9d67645c2a6f357a58dd0efdb",
       "tabbable": null,
       "tooltip": null,
       "value": " 1387/1388 [01:48&lt;00:00,  7.29it/s]"
      }
     },
     "536b8ed77b6d44dea1088484577ce4ce": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "54d85a147e0c4b098e5ffdb3f81275d0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "551b62061cfd4a9983df6b2c55edba9c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "555a333220f046c8a0bc77a06d8ddc13": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_729bee9224e2430ab393d5e849c8ce72",
       "placeholder": "​",
       "style": "IPY_MODEL_524df0c7481444b98534361bc6582433",
       "tabbable": null,
       "tooltip": null,
       "value": ""
      }
     },
     "561bc08ea6004542b1733b66379811bc": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "562f1b24cfcc495c9be4026dc787dffc": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "56f397e95a9b40ecb654c302f0fdc852": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "571bb9a628524b14988bf38ae2dc26dc": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "590fa3f686ce4af6a5a6050ef78ca949": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "594f885507be44debe1f350478b16577": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_fab54a52dafd4d5580cfed391d168036",
       "placeholder": "​",
       "style": "IPY_MODEL_6e1e8b0e3caa4ac1980023cf10e923c3",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "59e61c69cbb2425a9224ae4470b509f0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "5a9959aee4eb408593bcfac903fe5dca": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "5ba28bab18f841d288cab140cbf00c5d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "5d3cc80200bc45819e027136192252c2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "5ddfc90368264886991e3fdb2ecb47f9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5f0c12a92cb44e20a4636b23fe1c9f99": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_8af267093cc84c08816997d07ce4ff2a",
       "placeholder": "​",
       "style": "IPY_MODEL_e3588d96992c48e0879a40aa6b70d974",
       "tabbable": null,
       "tooltip": null,
       "value": " 2679/2680 [05:08&lt;00:00,  8.70it/s]"
      }
     },
     "5fba8d8d08ae4ec49dd55d14cd73f75b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_0a7f33c80c2445eaadf2b26640d08145",
        "IPY_MODEL_e5df3d8d54744aff8f33f77ddfd10e6c",
        "IPY_MODEL_7c33a5bc44414d9cac3d8692aa5d7b3e"
       ],
       "layout": "IPY_MODEL_334aa12d055e44528e5f778fd1d4d26d",
       "tabbable": null,
       "tooltip": null
      }
     },
     "5fd0c6f55bc74545b604461a037147e9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "604c5c0004fd4feea303dbdcc2ddac6f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_0e51f33e13a244919bf045f3ac7057d9",
       "placeholder": "​",
       "style": "IPY_MODEL_bb343cdd8e20453ea4258d0e5144f0d0",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "620e60b580f94b59b4682f9371b70790": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "6219ad4f5aab441bb63039b82dabf51d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "62fcbbdf8c2b4f3494b44bf5f864bfa7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6386a603ebcd4c95a8230d8dee64ab5c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "656f744c73854b86849602e8826cb426": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_8097bed3e1144bce90f299a0238b9bf1",
        "IPY_MODEL_04782fe01e30412b89101590b9e881e1",
        "IPY_MODEL_cfeb7f97fde74b5a84f34b9513a2650f"
       ],
       "layout": "IPY_MODEL_f611de936f0b48aca5db75321bb662ad",
       "tabbable": null,
       "tooltip": null
      }
     },
     "661d77a556d441e1ba750be544cf0f37": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "69ec8736b6b1474bb2bb524c6e1b19a2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_02f1c47fbe4447ffb5aa3f1f92ad5a3c",
       "placeholder": "​",
       "style": "IPY_MODEL_25c5ab0e56094470895d37ce31cc8ca1",
       "tabbable": null,
       "tooltip": null,
       "value": " 1387/1388 [01:48&lt;00:00,  5.62it/s]"
      }
     },
     "6a33a9a5df024e12a5ab008d6628c12d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "6c14d9296aad455baf31a83891a144ea": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ebdc088879ed4dbf92008bf30969747b",
       "placeholder": "​",
       "style": "IPY_MODEL_cc5dd0c715dd4532adb8f0da67d29f05",
       "tabbable": null,
       "tooltip": null,
       "value": " 2679/2680 [05:06&lt;00:00,  8.65it/s]"
      }
     },
     "6d2b528a56be4901874020108bd55938": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "6d4446063ee54d848b1e05dc16d2d4ab": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a0b1176a87c444de909379141356c014",
       "placeholder": "​",
       "style": "IPY_MODEL_0d7c2c4a1e8d4f7da4560fc6afab5ea9",
       "tabbable": null,
       "tooltip": null,
       "value": " 4/? [00:00&lt;00:00, 19.32it/s]"
      }
     },
     "6e1e8b0e3caa4ac1980023cf10e923c3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "6e85ad965c774adcaf66128dedcbddb1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "6ed1cfb5ce3a4d2089619fefdfe00b22": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6ee2a89700404085a1a6e318ddb8fd4e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6f7539899ddf4dd0a6e692af987ac3da": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7021682db7cb42bca4c482aa3ec2e3c1": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "704f1d521553451a8ad377a0866458d6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_398c8f9802964d3b8a09e6a5007a5a7e",
       "max": 2680.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_a124a310f52d47eca8843f6b70c2194e",
       "tabbable": null,
       "tooltip": null,
       "value": 2680.0
      }
     },
     "729aa6bc66d14bf8a5dd7082ca1edc64": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_bdc304cfad3f484a96916b8e350ead42",
        "IPY_MODEL_046f18073ae6470892177d19d3b9e9a1",
        "IPY_MODEL_5f0c12a92cb44e20a4636b23fe1c9f99"
       ],
       "layout": "IPY_MODEL_5d3cc80200bc45819e027136192252c2",
       "tabbable": null,
       "tooltip": null
      }
     },
     "729bee9224e2430ab393d5e849c8ce72": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7381adbbb6fb46378f66698461aa5d6c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_15720fc3f0094888b76847184fe86438",
       "max": 2680.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_fb45573923f0416084b2ee20fe58e9d4",
       "tabbable": null,
       "tooltip": null,
       "value": 2680.0
      }
     },
     "7436f5e527f34be193e8660dea21e2f4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "747ae7139d454489a6da11596c31f63a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "74c40d7f78ad4485be5b34ee59939aa2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "77585ec8cd5f40ebacb3cd1b30b9875b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "791bb3e55bfb43f5858a2dc428336d6b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_0c82fe113809473fba43f1bba9e1160a",
       "max": 1388.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_192302d41f014dd5bc7a025ae750443e",
       "tabbable": null,
       "tooltip": null,
       "value": 1388.0
      }
     },
     "7c33a5bc44414d9cac3d8692aa5d7b3e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_62fcbbdf8c2b4f3494b44bf5f864bfa7",
       "placeholder": "​",
       "style": "IPY_MODEL_7e548d9fbd2f4d59bcf3b5eaadeedddf",
       "tabbable": null,
       "tooltip": null,
       "value": " 2679/2680 [05:09&lt;00:00,  8.53it/s]"
      }
     },
     "7c50888464ff4702a2aa4e0aeb9c52d9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_c8b3a42be96a40119edb951b0b3a1190",
        "IPY_MODEL_0765ed0a108c46ce9ca26697e6fcb21f",
        "IPY_MODEL_9d8b22d9fb284947820c10bb7781ad3f"
       ],
       "layout": "IPY_MODEL_03c095494a0f4f618a325939d4959406",
       "tabbable": null,
       "tooltip": null
      }
     },
     "7d1f8ae2b9174d84ad6fb202580675a4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7d3c792302c843608c1318dadf59f027": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_08925ead541543fb82e1ed212390ad3b",
       "placeholder": "​",
       "style": "IPY_MODEL_f7648f445b244f9bb5d4a0743666c072",
       "tabbable": null,
       "tooltip": null,
       "value": " 2679/2680 [05:08&lt;00:00,  8.53it/s]"
      }
     },
     "7e2267d80e414e9488e7ca9b184cb32f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_c3b44f5c972443418580574c0d79440b",
        "IPY_MODEL_08733170ca8a43eba9fa9e4f96418c67",
        "IPY_MODEL_081373bd963d4ac9bb5fc099078a6c60"
       ],
       "layout": "IPY_MODEL_8316b1b83f5e46ceb1f84104a05c1463",
       "tabbable": null,
       "tooltip": null
      }
     },
     "7e548d9fbd2f4d59bcf3b5eaadeedddf": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "7e801b57a7614c859c9acb6f62c1275b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "80912c7ac0b64743a67e622ab2197dc0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "8097bed3e1144bce90f299a0238b9bf1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_82045f5f6b9145c3b057498fc3d561d7",
       "placeholder": "​",
       "style": "IPY_MODEL_244ca698c9284488b7541cbd1c50b59c",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "80dfd3f5ea784e27ad1326b0621f3bf3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "814f294043f5403e98ac292964eee424": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "81845da2be9848a0985b824c812fd79b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "81d383221e6f43d794f152ad1a164a71": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_cf046f1559a44dfa8d1b83d0d4fa83bc",
       "placeholder": "​",
       "style": "IPY_MODEL_c29df4b7ef704d9f923ad868616082e8",
       "tabbable": null,
       "tooltip": null,
       "value": " 1388/1388 [01:48&lt;00:00,  8.26it/s]"
      }
     },
     "8203d2395da44eacaf4173f319e216d5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "20px"
      }
     },
     "82045f5f6b9145c3b057498fc3d561d7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "82c381505e874ceea911e1ffdf69f260": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_551b62061cfd4a9983df6b2c55edba9c",
       "max": 1388.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_efa57985d838440fa2b38afb919d99e6",
       "tabbable": null,
       "tooltip": null,
       "value": 1388.0
      }
     },
     "8316b1b83f5e46ceb1f84104a05c1463": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "851fab350e844370a7ef10371b31eb1a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_be9824bbd8984a4e8f3f986aafde8464",
       "placeholder": "​",
       "style": "IPY_MODEL_9ef3526f7511415498a03d767e119ec3",
       "tabbable": null,
       "tooltip": null,
       "value": ""
      }
     },
     "852d4e12c1cc466d8240ce3e9ad064e3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "85ce7d9acca14c3c98bf33da668a81a1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "86f1c31712b64def8041e3376e1933cd": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "8940eca2e42242379898403f20de925c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9d986bd744bf421f9770e32d2cb4a2cb",
       "placeholder": "​",
       "style": "IPY_MODEL_cbc62d4106714483b9ce37900fba933a",
       "tabbable": null,
       "tooltip": null,
       "value": " 1/? [00:00&lt;00:00,  8.70it/s]"
      }
     },
     "8963a1855ba0443d99b3e862fefb967e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "20px"
      }
     },
     "8af267093cc84c08816997d07ce4ff2a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8c19ff0245054239ad3877d618991cd4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_7d1f8ae2b9174d84ad6fb202580675a4",
       "placeholder": "​",
       "style": "IPY_MODEL_304c59db125e458fb82723a367d23f06",
       "tabbable": null,
       "tooltip": null,
       "value": "Generating CM Data: 100%"
      }
     },
     "8c31fbb12df845a4a65d9a3301842e3f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "8cc94a8e89e14126a24ee9bc460f1886": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "8e48c979e275453583dd5800dabf56e1": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "20px"
      }
     },
     "8f3d048114774b60b55a5980faf47fc2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_80dfd3f5ea784e27ad1326b0621f3bf3",
       "placeholder": "​",
       "style": "IPY_MODEL_fe45bc5de51f4dff941de33ff46264c8",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "8ffdf5a3db8b47fda029bbeb70244eba": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "91c047e9d67645c2a6f357a58dd0efdb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "927b0d8da37b459283c7eaf3bed8b7aa": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "92be8d6f55434bc4a4542c0745cc7ceb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "93d82e9e23f046829c60326f5fb4ff39": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "9600b04ccbb74daf93f60a118e73cc85": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "96ca4baa549d4ce79b0d54c8c5c715ca": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "976e327f0f764cb3acc5376edc3f1d1e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "9942ce77b6254dc6b1a8c6da59944378": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "9b2f3cef684e442c9cbd80cb27ef2494": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "9b87e0a8db524c478be7b4047545b3ee": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9d8b22d9fb284947820c10bb7781ad3f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_3bd5e3b4c828437f961d568e0a02bdad",
       "placeholder": "​",
       "style": "IPY_MODEL_9b2f3cef684e442c9cbd80cb27ef2494",
       "tabbable": null,
       "tooltip": null,
       "value": " 2679/2680 [05:08&lt;00:00,  8.60it/s]"
      }
     },
     "9d986bd744bf421f9770e32d2cb4a2cb": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9dcd7bcfce9546259896901962ee85f5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9ef3526f7511415498a03d767e119ec3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "9fa77a0cb18e429a9ad58de51106c1f5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a00671ce4baf491ab15428948879872e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a0b1176a87c444de909379141356c014": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a10747c0088f4295af79cddcb82e8b7a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_e1fd4d96d61f4b7c9be00535015e22ca",
       "placeholder": "​",
       "style": "IPY_MODEL_0c18373c87374967ad822919caacf12a",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "a124a310f52d47eca8843f6b70c2194e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "a4ef6473cc2845c6873d9cb18b52ed92": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6f7539899ddf4dd0a6e692af987ac3da",
       "max": 1388.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_5a9959aee4eb408593bcfac903fe5dca",
       "tabbable": null,
       "tooltip": null,
       "value": 1388.0
      }
     },
     "a61baf111fc543ba901132a5954df377": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a81a93deba274545a44541a0b1d7525e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "a92c34579b624014a4af22f08a8b17f8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "a9a1554b5271457a9f887ec56ecc0714": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_433bdc8bdb594bada3e16f9f29596fa9",
        "IPY_MODEL_cd24d4b43f9548dc9736f18b9433829c",
        "IPY_MODEL_cb4fb6f366764ba2974f6e1d9a8578b8"
       ],
       "layout": "IPY_MODEL_7021682db7cb42bca4c482aa3ec2e3c1",
       "tabbable": null,
       "tooltip": null
      }
     },
     "aba45745499e43c4b35591584e470e2e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "info",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_8203d2395da44eacaf4173f319e216d5",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_976e327f0f764cb3acc5376edc3f1d1e",
       "tabbable": null,
       "tooltip": null,
       "value": 1.0
      }
     },
     "ac89567a504047afaa4c97d4ca22c856": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_77585ec8cd5f40ebacb3cd1b30b9875b",
       "max": 2680.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_6a33a9a5df024e12a5ab008d6628c12d",
       "tabbable": null,
       "tooltip": null,
       "value": 2680.0
      }
     },
     "ad4e904353384e8dbc64c16bfe5a6662": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b0c8ce6b71a44f1088b5af8cff0cd831": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "b0ff5d00129e41319f6983ed988c883a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ebdcd9a4a8714fbf8f674dbe72063b1b",
       "placeholder": "​",
       "style": "IPY_MODEL_cd25cdd79b2640ce8864a9b12fc1e3e2",
       "tabbable": null,
       "tooltip": null,
       "value": " 2679/2680 [05:08&lt;00:00,  8.58it/s]"
      }
     },
     "b1378f19b177472889f96c8ede5923df": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b1f3ae6d99654cf094f7e9327c891c38": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "b5d2033b0d6042759c47db21275986e5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "b8e3d683f3744591a94d996e8294d9ba": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a61baf111fc543ba901132a5954df377",
       "max": 2680.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_1b431705ef21482386fc397cba23857d",
       "tabbable": null,
       "tooltip": null,
       "value": 2680.0
      }
     },
     "b8e877821e6c4a64a8d1d68616a4b2da": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b945b41ae7ee403b9f5a90c27e935faa": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_44fdf3e8c2944e73800f69a49e1b972a",
        "IPY_MODEL_e77630b92e864ca4989850911f3fba66",
        "IPY_MODEL_6d4446063ee54d848b1e05dc16d2d4ab"
       ],
       "layout": "IPY_MODEL_814f294043f5403e98ac292964eee424",
       "tabbable": null,
       "tooltip": null
      }
     },
     "bb343cdd8e20453ea4258d0e5144f0d0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "bb9c52f9141e41af802af052e620b5ad": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_e2359e41e07c4e81ac9c7c0fd04948dc",
       "max": 2680.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_85ce7d9acca14c3c98bf33da668a81a1",
       "tabbable": null,
       "tooltip": null,
       "value": 2680.0
      }
     },
     "bba8386d420c4ac28bdb2c4cb978f8ea": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_3c442f5c861e43f29620edf313e13840",
        "IPY_MODEL_7381adbbb6fb46378f66698461aa5d6c",
        "IPY_MODEL_6c14d9296aad455baf31a83891a144ea"
       ],
       "layout": "IPY_MODEL_561bc08ea6004542b1733b66379811bc",
       "tabbable": null,
       "tooltip": null
      }
     },
     "bdc304cfad3f484a96916b8e350ead42": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_852d4e12c1cc466d8240ce3e9ad064e3",
       "placeholder": "​",
       "style": "IPY_MODEL_fa01e2b9aadc4361a0b1787adf76a65b",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "be7514ed819a45f9a47b4239d4a9f04f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_562f1b24cfcc495c9be4026dc787dffc",
       "placeholder": "​",
       "style": "IPY_MODEL_8c31fbb12df845a4a65d9a3301842e3f",
       "tabbable": null,
       "tooltip": null,
       "value": " 2679/2680 [05:08&lt;00:00,  8.55it/s]"
      }
     },
     "be9824bbd8984a4e8f3f986aafde8464": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c190731ac7134eba8544ab3cb7621698": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_e2880fd6094d4c59917acae544da8d94",
       "placeholder": "​",
       "style": "IPY_MODEL_6e85ad965c774adcaf66128dedcbddb1",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "c1d3a7254f854ea6a51842cccd6fdafb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "c2079bbd8f5d470f893e12f01190926f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2ecaa3185da0490bbb1bc27f4917e966",
       "max": 1388.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_3adb5afd136b4b8a8678eaea1b72d243",
       "tabbable": null,
       "tooltip": null,
       "value": 1388.0
      }
     },
     "c2532a86010b4fa5a833f086cc91e491": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_e47c665d5a5f4356883b479abc4e8d2f",
       "placeholder": "​",
       "style": "IPY_MODEL_a92c34579b624014a4af22f08a8b17f8",
       "tabbable": null,
       "tooltip": null,
       "value": " 1388/1388 [01:48&lt;00:00,  8.11it/s]"
      }
     },
     "c29df4b7ef704d9f923ad868616082e8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "c2ae52e42157492483ddfa65ec768bd8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c2fb891671844781880e28321302ae56": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "c3b44f5c972443418580574c0d79440b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_042cae2c9fd34923b8c8bcb866aa6cdd",
       "placeholder": "​",
       "style": "IPY_MODEL_cc7729e10566454c83db790c8cd50670",
       "tabbable": null,
       "tooltip": null,
       "value": "seq: 100%"
      }
     },
     "c45acb0ede76443381ded7d8502b8c70": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_03db24904d7e4a6b978ff9a9062b067f",
       "placeholder": "​",
       "style": "IPY_MODEL_c1d3a7254f854ea6a51842cccd6fdafb",
       "tabbable": null,
       "tooltip": null,
       "value": " 2679/2680 [05:08&lt;00:00,  8.53it/s]"
      }
     },
     "c4f29b76f7ea42af9cf15d2094511125": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_c190731ac7134eba8544ab3cb7621698",
        "IPY_MODEL_41576ca40f7c4ffd805df4d9ef5faca1",
        "IPY_MODEL_e12b6a9bfa884428984f54959f591aa4"
       ],
       "layout": "IPY_MODEL_dd8bf939280b44a682c45be3e80a65b6",
       "tabbable": null,
       "tooltip": null
      }
     },
     "c64a878e336c45658f0b48c92422bda0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9b87e0a8db524c478be7b4047545b3ee",
       "max": 1388.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_74c40d7f78ad4485be5b34ee59939aa2",
       "tabbable": null,
       "tooltip": null,
       "value": 1388.0
      }
     },
     "c868a13125f74eaf961f1067ae35f80d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_13e5a1cfc7d24737abd1e319e3ba98f2",
       "placeholder": "​",
       "style": "IPY_MODEL_54d85a147e0c4b098e5ffdb3f81275d0",
       "tabbable": null,
       "tooltip": null,
       "value": " 2679/2680 [05:08&lt;00:00,  8.56it/s]"
      }
     },
     "c8b3a42be96a40119edb951b0b3a1190": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_e0581d54c6be4411b8ad1f87dc33b017",
       "placeholder": "​",
       "style": "IPY_MODEL_491432beefdd49e3ad3ec43f31d1a9cd",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "cabcfa0cca534a11ba35900f9a2fd324": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "cb0a36e706b24c96bc71b1ea662425b7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "cb4fb6f366764ba2974f6e1d9a8578b8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6ee2a89700404085a1a6e318ddb8fd4e",
       "placeholder": "​",
       "style": "IPY_MODEL_505d78195fa64712a4e3835af48565e2",
       "tabbable": null,
       "tooltip": null,
       "value": " 1387/1388 [01:49&lt;00:00,  7.26it/s]"
      }
     },
     "cb6e8e2411c94a7c848205ae9b3cc950": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "cbc62d4106714483b9ce37900fba933a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "cc5dd0c715dd4532adb8f0da67d29f05": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "cc7729e10566454c83db790c8cd50670": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "cd24d4b43f9548dc9736f18b9433829c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_b8e877821e6c4a64a8d1d68616a4b2da",
       "max": 1388.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_5ba28bab18f841d288cab140cbf00c5d",
       "tabbable": null,
       "tooltip": null,
       "value": 1388.0
      }
     },
     "cd25cdd79b2640ce8864a9b12fc1e3e2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "cf046f1559a44dfa8d1b83d0d4fa83bc": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "cf5466f81e984b489e1bfcfcca147759": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "cfeb7f97fde74b5a84f34b9513a2650f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_fe936c001b8342a7aeaeab96e4db70f4",
       "placeholder": "​",
       "style": "IPY_MODEL_9600b04ccbb74daf93f60a118e73cc85",
       "tabbable": null,
       "tooltip": null,
       "value": " 1387/1388 [01:48&lt;00:00,  7.35it/s]"
      }
     },
     "d096809df96f47cd915ebed7ce9c35bd": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "d27d228886f949078c4772e0f03a364c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_a10747c0088f4295af79cddcb82e8b7a",
        "IPY_MODEL_073c834c0f1644d39ac5a7ddfefb2e4a",
        "IPY_MODEL_1e12962b751c4426990074e510d20b1d"
       ],
       "layout": "IPY_MODEL_434b703fb52e49c0bcf3dd5d06661d89",
       "tabbable": null,
       "tooltip": null
      }
     },
     "d36ad3fa55bd4b02888c0116ff7dbd96": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "d4503ec96a2c4bd29a228ec60f8ff7cd": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "dacd68657ee24a46ac38ac998f428cfd": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "dd8bf939280b44a682c45be3e80a65b6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "dd8cfd6cb6764f0baf030bbbc8f54a91": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e0581d54c6be4411b8ad1f87dc33b017": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e0af702282224db8bb8f40e92c066c16": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_555a333220f046c8a0bc77a06d8ddc13",
        "IPY_MODEL_18786e05d9f64a33b63bdb0976605dbd",
        "IPY_MODEL_44300295bf1f41d49fd7acc34da85e4f"
       ],
       "layout": "IPY_MODEL_4d42efc108aa458d9abab15f615135c0",
       "tabbable": null,
       "tooltip": null
      }
     },
     "e12b6a9bfa884428984f54959f591aa4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ad4e904353384e8dbc64c16bfe5a6662",
       "placeholder": "​",
       "style": "IPY_MODEL_6219ad4f5aab441bb63039b82dabf51d",
       "tabbable": null,
       "tooltip": null,
       "value": " 1388/1388 [01:48&lt;00:00,  7.87it/s]"
      }
     },
     "e1d08d4167724d1890b5522c78016ec8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2a5e1b2003894e6ca9acffc3c87a325f",
       "max": 1388.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d4503ec96a2c4bd29a228ec60f8ff7cd",
       "tabbable": null,
       "tooltip": null,
       "value": 1388.0
      }
     },
     "e1fd4d96d61f4b7c9be00535015e22ca": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e2359e41e07c4e81ac9c7c0fd04948dc": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e2880fd6094d4c59917acae544da8d94": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e2d514285b8848598951299f372a1dae": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "e3588d96992c48e0879a40aa6b70d974": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "e47c665d5a5f4356883b479abc4e8d2f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e54f76906aac43f3bad2798ff056c44e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_c2ae52e42157492483ddfa65ec768bd8",
       "placeholder": "​",
       "style": "IPY_MODEL_81845da2be9848a0985b824c812fd79b",
       "tabbable": null,
       "tooltip": null,
       "value": " 1388/1388 [01:48&lt;00:00,  8.65it/s]"
      }
     },
     "e5df3d8d54744aff8f33f77ddfd10e6c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_294c472aab314dc2a7c01d73402f008a",
       "max": 2680.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_251aea70dc894760ba36a793a5148bb9",
       "tabbable": null,
       "tooltip": null,
       "value": 2680.0
      }
     },
     "e6ac8eebe11c4400b07376d943ea42db": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e6b30ccc659f430cac798438d89bbc23": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "e77630b92e864ca4989850911f3fba66": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "info",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_8e48c979e275453583dd5800dabf56e1",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_b0c8ce6b71a44f1088b5af8cff0cd831",
       "tabbable": null,
       "tooltip": null,
       "value": 1.0
      }
     },
     "e9cf8b60a1224760ac5df8c002015d90": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_fb32914cd4814075810c1616653869fd",
       "placeholder": "​",
       "style": "IPY_MODEL_ea55d57026cf462798dafafb4f74064f",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "ea55d57026cf462798dafafb4f74064f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "eac87cc2e0fd48a9aa9840977004606f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_661d77a556d441e1ba750be544cf0f37",
       "placeholder": "​",
       "style": "IPY_MODEL_5fd0c6f55bc74545b604461a037147e9",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "eb36b50fc6a242ecb4323889134467ff": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_7e801b57a7614c859c9acb6f62c1275b",
       "placeholder": "​",
       "style": "IPY_MODEL_4195b8d5e85149d791e0214f30b4efb6",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "eb390cbf43ad49afb2a6c4d23116dd32": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_cb6e8e2411c94a7c848205ae9b3cc950",
       "placeholder": "​",
       "style": "IPY_MODEL_e2d514285b8848598951299f372a1dae",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "ebdc088879ed4dbf92008bf30969747b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ebdcd9a4a8714fbf8f674dbe72063b1b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ef2992be56a049ca81a126d97defea61": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ef83b5604c67407f9257e6d51199928d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_dd8cfd6cb6764f0baf030bbbc8f54a91",
       "placeholder": "​",
       "style": "IPY_MODEL_6d2b528a56be4901874020108bd55938",
       "tabbable": null,
       "tooltip": null,
       "value": " 1388/1388 [01:48&lt;00:00,  8.03it/s]"
      }
     },
     "efa57985d838440fa2b38afb919d99e6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "f2c3faae3eaa499f88c7cb3dc75457e2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "f611de936f0b48aca5db75321bb662ad": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "f73abcee95fb4283a9a394f8b69b80e7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f7648f445b244f9bb5d4a0743666c072": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "f768e04ac93c474f9578dee676ab1f9f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "f7acab7b725145a485dd249e60bcb147": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "f872692722ba44f996a556866b5904d6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "f8f07d90d2634d30aac4a09748c1dccd": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "f98f26dc76404120b38f0ddfcb30fb4c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "fa01e2b9aadc4361a0b1787adf76a65b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "fab54a52dafd4d5580cfed391d168036": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "fb32914cd4814075810c1616653869fd": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "fb32d43ec0c24db887e97924ba08d488": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_4cd5ebb93d0f436082e82f63b77acf82",
        "IPY_MODEL_ac89567a504047afaa4c97d4ca22c856",
        "IPY_MODEL_7d3c792302c843608c1318dadf59f027"
       ],
       "layout": "IPY_MODEL_f768e04ac93c474f9578dee676ab1f9f",
       "tabbable": null,
       "tooltip": null
      }
     },
     "fb45573923f0416084b2ee20fe58e9d4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "fc4d10b965ef4ea5822b99fdc7f6f61a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "fd42c76be2a345b7bdb1f246f16b61e4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_e9cf8b60a1224760ac5df8c002015d90",
        "IPY_MODEL_0009c8b03dd44297a79bef5279a83efb",
        "IPY_MODEL_69ec8736b6b1474bb2bb524c6e1b19a2"
       ],
       "layout": "IPY_MODEL_b1f3ae6d99654cf094f7e9327c891c38",
       "tabbable": null,
       "tooltip": null
      }
     },
     "fe45bc5de51f4dff941de33ff46264c8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "fe936c001b8342a7aeaeab96e4db70f4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
