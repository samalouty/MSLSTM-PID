{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8ef44fe0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-01T07:47:09.809941Z",
     "iopub.status.busy": "2025-05-01T07:47:09.809640Z",
     "iopub.status.idle": "2025-05-01T07:47:16.609654Z",
     "shell.execute_reply": "2025-05-01T07:47:16.608490Z"
    },
    "papermill": {
     "duration": 6.811488,
     "end_time": "2025-05-01T07:47:16.611326",
     "exception": false,
     "start_time": "2025-05-01T07:47:09.799838",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cloning into 'PIE'...\r\n",
      "remote: Enumerating objects: 178, done.\u001b[K\r\n",
      "remote: Counting objects: 100% (93/93), done.\u001b[K\r\n",
      "remote: Compressing objects: 100% (74/74), done.\u001b[K\r\n",
      "remote: Total 178 (delta 32), reused 75 (delta 17), pack-reused 85 (from 1)\u001b[K\r\n",
      "Receiving objects: 100% (178/178), 144.63 MiB | 37.40 MiB/s, done.\r\n",
      "Resolving deltas: 100% (73/73), done.\r\n",
      "Updating files: 100% (41/41), done.\r\n",
      "unzip:  cannot find or open /content/PIE/annotations/annotations.zip, /content/PIE/annotations/annotations.zip.zip or /content/PIE/annotations/annotations.zip.ZIP.\r\n",
      "unzip:  cannot find or open /content/PIE/annotations/annotations_vehicle.zip, /content/PIE/annotations/annotations_vehicle.zip.zip or /content/PIE/annotations/annotations_vehicle.zip.ZIP.\r\n"
     ]
    }
   ],
   "source": [
    "!git clone https://github.com/aras62/PIE.git\n",
    "!unzip /content/PIE/annotations/annotations.zip -d /content/PIE\n",
    "!unzip /content/PIE/annotations/annotations_vehicle.zip -d /content/PIE\n",
    "# !git clone https://github.com/hustvl/YOLOP.git\n",
    "!mkdir /kaggle/working/PIE/content"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c07b6040",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-01T07:47:16.630063Z",
     "iopub.status.busy": "2025-05-01T07:47:16.629831Z",
     "iopub.status.idle": "2025-05-01T07:47:21.790577Z",
     "shell.execute_reply": "2025-05-01T07:47:21.789582Z"
    },
    "papermill": {
     "duration": 5.17141,
     "end_time": "2025-05-01T07:47:21.792101",
     "exception": false,
     "start_time": "2025-05-01T07:47:16.620691",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.0/1.0 MB\u001b[0m \u001b[31m26.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25h"
     ]
    }
   ],
   "source": [
    "!pip install -q ultralytics opencv-python-headless "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d7c89780",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-01T07:47:21.812040Z",
     "iopub.status.busy": "2025-05-01T07:47:21.811801Z",
     "iopub.status.idle": "2025-05-01T07:47:21.817265Z",
     "shell.execute_reply": "2025-05-01T07:47:21.816683Z"
    },
    "papermill": {
     "duration": 0.01666,
     "end_time": "2025-05-01T07:47:21.818506",
     "exception": false,
     "start_time": "2025-05-01T07:47:21.801846",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# import os\n",
    "# import pickle\n",
    "# import sys\n",
    "# import numpy as np\n",
    "# from tqdm.notebook import tqdm\n",
    "# import random\n",
    "\n",
    "# print(\"--- PIE Database Cache Verification Script ---\")\n",
    "\n",
    "# # --- Configuration ---\n",
    "# # <<< --- SET THIS TO THE LOCATION OF YOUR GENERATED CACHE --- >>>\n",
    "# PKL_FILE_PATH = \"/kaggle/working/PIE/data_cache/pie_database.pkl\"\n",
    "# # <<< --- END CONFIGURATION --- >>>\n",
    "\n",
    "# # Define expected top-level keys (these are the set IDs)\n",
    "# EXPECTED_SETS = {'set01', 'set02', 'set03', 'set04', 'set05', 'set06'}\n",
    "\n",
    "# # Define expected keys within each video dictionary\n",
    "# EXPECTED_VIDEO_KEYS = {'num_frames', 'width', 'height',\n",
    "#                        'ped_annotations', 'traffic_annotations', 'vehicle_annotations'}\n",
    "\n",
    "# # Define expected keys within each pedestrian annotation dictionary\n",
    "# EXPECTED_PED_KEYS = {'frames', 'bbox', 'occlusion', 'behavior', 'attributes'}\n",
    "# EXPECTED_PED_BEHAVIOR_KEYS = {'gesture', 'look', 'action', 'cross'}\n",
    "# # Attributes can vary, so we won't check all exhaustively here, but check presence\n",
    "\n",
    "# # Define expected keys within vehicle (ego) frame dictionary (sample)\n",
    "# EXPECTED_EGO_FRAME_KEYS = {'OBD_speed', 'GPS_speed', 'accX', 'accY', 'accZ',\n",
    "#                            'gyroX', 'gyroY', 'gyroZ', 'heading_angle', 'latitude',\n",
    "#                            'longitude', 'pitch', 'roll', 'yaw'}\n",
    "\n",
    "\n",
    "# # --- Verification Parameters ---\n",
    "# MAX_FRAMES_TO_CHECK_PER_VIDEO = 50 # Limit checks per video for speed\n",
    "# MAX_PEDS_TO_CHECK_PER_VIDEO = 20  # Limit checks per video for speed\n",
    "# MAX_TRAFFIC_OBJS_TO_CHECK_PER_VIDEO = 20 # Limit checks\n",
    "# PRINT_SAMPLE_COUNT = 3 # How many sample data lines to print\n",
    "\n",
    "# # --- Counters and Flags ---\n",
    "# errors_found = 0\n",
    "# warnings_found = 0\n",
    "# checked_sets = 0\n",
    "# checked_videos = 0\n",
    "# checked_peds = 0\n",
    "# checked_ped_frames = 0\n",
    "# checked_ego_frames = 0\n",
    "\n",
    "# # --- Helper Function for Reporting ---\n",
    "# def report_error(message):\n",
    "#     global errors_found\n",
    "#     print(f\"  ERROR: {message}\")\n",
    "#     errors_found += 1\n",
    "\n",
    "# def report_warning(message):\n",
    "#     global warnings_found\n",
    "#     print(f\"  Warning: {message}\")\n",
    "#     warnings_found += 1\n",
    "\n",
    "# # --- 1. Load the PKL File ---\n",
    "# print(f\"\\n[1] Loading PKL file: {PKL_FILE_PATH}\")\n",
    "# if not os.path.exists(PKL_FILE_PATH):\n",
    "#     print(f\"  ERROR: PKL file not found at the specified path.\")\n",
    "#     exit()\n",
    "\n",
    "# try:\n",
    "#     with open(PKL_FILE_PATH, 'rb') as f:\n",
    "#         pie_database = pickle.load(f)\n",
    "#     print(\"  -> PKL file loaded successfully.\")\n",
    "# except Exception as e:\n",
    "#     print(f\"  ERROR: Failed to load PKL file: {e}\")\n",
    "#     exit()\n",
    "\n",
    "# # --- 2. Basic Structure Checks ---\n",
    "# print(f\"\\n[2] Checking Top-Level Structure...\")\n",
    "# if not isinstance(pie_database, dict):\n",
    "#     report_error(f\"Loaded data is not a dictionary (Type: {type(pie_database)}).\")\n",
    "#     exit()\n",
    "# print(f\"  -> Top level is a dictionary: OK\")\n",
    "\n",
    "# found_sets = set(pie_database.keys())\n",
    "# if found_sets != EXPECTED_SETS:\n",
    "#     report_warning(f\"Set keys mismatch. Found: {found_sets}, Expected: {EXPECTED_SETS}\")\n",
    "# else:\n",
    "#     print(f\"  -> Found expected set keys: OK\")\n",
    "# checked_sets = len(found_sets)\n",
    "\n",
    "# # --- 3. Detailed Content Checks ---\n",
    "# print(f\"\\n[3] Checking Set/Video/Annotation Structures...\")\n",
    "\n",
    "# sample_data_to_print = []\n",
    "\n",
    "# for set_id in tqdm(found_sets, desc=\"Checking Sets\"):\n",
    "#     if not isinstance(pie_database[set_id], dict):\n",
    "#         report_error(f\"Data for set '{set_id}' is not a dictionary.\")\n",
    "#         continue\n",
    "\n",
    "#     video_ids = list(pie_database[set_id].keys())\n",
    "#     checked_videos += len(video_ids)\n",
    "\n",
    "#     for video_id in tqdm(video_ids, desc=f\"Videos in {set_id}\", leave=False):\n",
    "#         video_data = pie_database[set_id][video_id]\n",
    "#         if not isinstance(video_data, dict):\n",
    "#             report_error(f\"Data for video '{set_id}/{video_id}' is not a dictionary.\")\n",
    "#             continue\n",
    "\n",
    "#         # Check video-level keys\n",
    "#         missing_vid_keys = EXPECTED_VIDEO_KEYS - set(video_data.keys())\n",
    "#         if missing_vid_keys:\n",
    "#             report_warning(f\"Video '{set_id}/{video_id}' missing keys: {missing_vid_keys}\")\n",
    "\n",
    "#         # Basic type checks for video keys\n",
    "#         img_width = video_data.get('width', -1)\n",
    "#         img_height = video_data.get('height', -1)\n",
    "#         if not isinstance(video_data.get('num_frames'), int): report_warning(f\"num_frames type mismatch in {set_id}/{video_id}\")\n",
    "#         if not isinstance(img_width, int): report_warning(f\"width type mismatch in {set_id}/{video_id}\")\n",
    "#         if not isinstance(img_height, int): report_warning(f\"height type mismatch in {set_id}/{video_id}\")\n",
    "#         if not isinstance(video_data.get('ped_annotations'), dict): report_error(f\"ped_annotations not a dict in {set_id}/{video_id}\"); continue # Stop checking peds for this video if structure wrong\n",
    "#         if not isinstance(video_data.get('traffic_annotations'), dict): report_warning(f\"traffic_annotations not a dict in {set_id}/{video_id}\")\n",
    "#         if not isinstance(video_data.get('vehicle_annotations'), dict): report_warning(f\"vehicle_annotations not a dict in {set_id}/{video_id}\")\n",
    "\n",
    "\n",
    "#         # --- Check Pedestrian Annotations ---\n",
    "#         ped_annotations = video_data.get('ped_annotations', {})\n",
    "#         ped_ids_to_check = list(ped_annotations.keys())\n",
    "#         random.shuffle(ped_ids_to_check) # Check a random subset\n",
    "\n",
    "#         for i, ped_id in enumerate(ped_ids_to_check):\n",
    "#             if i >= MAX_PEDS_TO_CHECK_PER_VIDEO: break # Limit checks\n",
    "#             checked_peds += 1\n",
    "#             ped_data = ped_annotations[ped_id]\n",
    "#             if not isinstance(ped_data, dict): report_error(f\"Data for ped '{ped_id}' in {set_id}/{video_id} is not a dict.\"); continue\n",
    "\n",
    "#             missing_ped_keys = EXPECTED_PED_KEYS - set(ped_data.keys())\n",
    "#             if missing_ped_keys: report_warning(f\"Ped '{ped_id}' in {set_id}/{video_id} missing keys: {missing_ped_keys}\")\n",
    "\n",
    "#             # Check structure of essential lists/dicts\n",
    "#             frames = ped_data.get('frames', [])\n",
    "#             bboxes = ped_data.get('bbox', [])\n",
    "#             occlusions = ped_data.get('occlusion', [])\n",
    "#             behavior = ped_data.get('behavior', {})\n",
    "#             attributes = ped_data.get('attributes', {})\n",
    "\n",
    "#             if not isinstance(frames, list): report_error(f\"Ped '{ped_id}' frames not a list.\"); continue\n",
    "#             if not isinstance(bboxes, list): report_error(f\"Ped '{ped_id}' bbox not a list.\"); continue\n",
    "#             if not isinstance(occlusions, list): report_error(f\"Ped '{ped_id}' occlusion not a list.\"); continue\n",
    "#             if not isinstance(behavior, dict): report_error(f\"Ped '{ped_id}' behavior not a dict.\"); continue\n",
    "#             if not isinstance(attributes, dict): report_warning(f\"Ped '{ped_id}' attributes not a dict.\"); continue # Attributes might be empty\n",
    "\n",
    "#             # Check list lengths consistency\n",
    "#             n_frames = len(frames)\n",
    "#             if n_frames == 0 and (len(bboxes) > 0 or len(occlusions) > 0): report_warning(f\"Ped '{ped_id}' has bboxes/occlusions but 0 frames listed.\")\n",
    "#             if len(bboxes) != n_frames: report_error(f\"Ped '{ped_id}' bbox length ({len(bboxes)}) != frames length ({n_frames}).\")\n",
    "#             if len(occlusions) != n_frames: report_error(f\"Ped '{ped_id}' occlusion length ({len(occlusions)}) != frames length ({n_frames}).\")\n",
    "\n",
    "#             missing_beh_keys = EXPECTED_PED_BEHAVIOR_KEYS - set(behavior.keys())\n",
    "#             if missing_beh_keys: report_warning(f\"Ped '{ped_id}' behavior missing keys: {missing_beh_keys}\")\n",
    "\n",
    "#             for beh_key, beh_list in behavior.items():\n",
    "#                 if not isinstance(beh_list, list): report_error(f\"Ped '{ped_id}' behavior '{beh_key}' not a list.\"); continue\n",
    "#                 if len(beh_list) != n_frames: report_error(f\"Ped '{ped_id}' behavior '{beh_key}' length ({len(beh_list)}) != frames length ({n_frames}).\")\n",
    "\n",
    "#             # Check sample frame content\n",
    "#             frames_to_check_in_ped = list(range(n_frames))\n",
    "#             random.shuffle(frames_to_check_in_ped)\n",
    "#             for k, frame_idx in enumerate(frames_to_check_in_ped):\n",
    "#                  if k >= MAX_FRAMES_TO_CHECK_PER_VIDEO: break\n",
    "#                  checked_ped_frames +=1\n",
    "#                  # Check frame number type\n",
    "#                  if not isinstance(frames[frame_idx], int): report_warning(f\"Ped '{ped_id}' frame value at index {frame_idx} not int.\")\n",
    "#                  # Check bbox format and range\n",
    "#                  if len(bboxes) > frame_idx:\n",
    "#                       bbox = bboxes[frame_idx]\n",
    "#                       if not isinstance(bbox, list) or len(bbox) != 4: report_error(f\"Ped '{ped_id}' frame {frames[frame_idx]} bbox invalid format: {bbox}\"); continue\n",
    "#                       try:\n",
    "#                            x1,y1,x2,y2 = map(float, bbox)\n",
    "#                            if img_width>0 and img_height>0 and not (0 <= x1 < x2 <= img_width and 0 <= y1 < y2 <= img_height): report_warning(f\"Ped '{ped_id}' frame {frames[frame_idx]} bbox out of bounds: {[int(x) for x in bbox]} vs {img_width}x{img_height}\")\n",
    "#                       except (ValueError, TypeError): report_error(f\"Ped '{ped_id}' frame {frames[frame_idx]} bbox contains non-numeric values: {bbox}\")\n",
    "#                  # Check occlusion value\n",
    "#                  if len(occlusions) > frame_idx:\n",
    "#                       occ = occlusions[frame_idx]\n",
    "#                       if not isinstance(occ, int) or occ not in [0, 1, 2]: report_warning(f\"Ped '{ped_id}' frame {frames[frame_idx]} invalid occlusion value: {occ}\")\n",
    "\n",
    "#                  # Add sample for printing later\n",
    "#                  if len(sample_data_to_print) < PRINT_SAMPLE_COUNT:\n",
    "#                       sample_data_to_print.append(f\" Sample Ped Data: Set={set_id}, Vid={video_id}, Ped={ped_id}, Frame={frames[frame_idx]}, BBox={bboxes[frame_idx] if len(bboxes) > frame_idx else 'N/A'}, Occ={occlusions[frame_idx] if len(occlusions) > frame_idx else 'N/A'}\")\n",
    "\n",
    "#         # --- Check Vehicle Annotations (Ego Data) ---\n",
    "#         vehicle_annotations = video_data.get('vehicle_annotations', {})\n",
    "#         ego_frames_to_check = list(vehicle_annotations.keys())\n",
    "#         random.shuffle(ego_frames_to_check)\n",
    "\n",
    "#         for k, frame_num in enumerate(ego_frames_to_check):\n",
    "#             if k >= MAX_FRAMES_TO_CHECK_PER_VIDEO: break # Limit checks\n",
    "#             checked_ego_frames += 1\n",
    "#             if not isinstance(frame_num, int): report_warning(f\"Ego data frame key '{frame_num}' in {set_id}/{video_id} is not int.\") ; continue\n",
    "#             ego_frame_data = vehicle_annotations[frame_num]\n",
    "#             if not isinstance(ego_frame_data, dict): report_error(f\"Ego data for frame {frame_num} in {set_id}/{video_id} is not dict.\"); continue\n",
    "\n",
    "#             missing_ego_keys = EXPECTED_EGO_FRAME_KEYS - set(ego_frame_data.keys())\n",
    "#             # Don't warn about every missing key, just check a few critical ones\n",
    "#             if 'OBD_speed' not in ego_frame_data and 'GPS_speed' not in ego_frame_data: report_warning(f\"Ego frame {frame_num} in {set_id}/{video_id} missing speed data.\")\n",
    "#             for key in EXPECTED_EGO_FRAME_KEYS:\n",
    "#                 if key in ego_frame_data and not isinstance(ego_frame_data[key], (float, int)): report_warning(f\"Ego frame {frame_num} key '{key}' value is not float/int (type: {type(ego_frame_data[key])})\")\n",
    "\n",
    "#             # Add sample for printing later\n",
    "#             if len(sample_data_to_print) < PRINT_SAMPLE_COUNT * 2 and k < 5: # Print a few ego samples too\n",
    "#                   sample_data_to_print.append(f\" Sample Ego Data: Set={set_id}, Vid={video_id}, Frame={frame_num}, Speed={ego_frame_data.get('OBD_speed', 'N/A'):.2f}, AccX={ego_frame_data.get('accX', 'N/A'):.2f}\")\n",
    "\n",
    "# # --- 4. Print Summary ---\n",
    "# print(f\"\\n[4] Verification Summary ---\")\n",
    "# print(f\"  - Checked {checked_sets} sets.\")\n",
    "# print(f\"  - Checked {checked_videos} videos.\")\n",
    "# print(f\"  - Checked {checked_peds} pedestrian tracks (sampled max {MAX_PEDS_TO_CHECK_PER_VIDEO} per video).\")\n",
    "# print(f\"  - Checked {checked_ped_frames} pedestrian frame entries (sampled max {MAX_FRAMES_TO_CHECK_PER_VIDEO} per ped).\")\n",
    "# print(f\"  - Checked {checked_ego_frames} ego data frame entries (sampled max {MAX_FRAMES_TO_CHECK_PER_VIDEO} per video).\")\n",
    "# print(f\"  - Total Errors Found: {errors_found}\")\n",
    "# print(f\"  - Total Warnings Found: {warnings_found}\")\n",
    "\n",
    "# if errors_found == 0:\n",
    "#     print(\"\\n  >>> Structure and basic content checks PASSED (with potential warnings). <<<\")\n",
    "# else:\n",
    "#     print(\"\\n  >>> ERRORS FOUND during structural/content checks. Review messages above. <<<\")\n",
    "\n",
    "# # --- 5. Print Sample Data ---\n",
    "# if sample_data_to_print:\n",
    "#     print(\"\\n[5] Sample Data Points ---\")\n",
    "#     for line in sample_data_to_print:\n",
    "#         print(line)\n",
    "\n",
    "# print(\"\\n--- Verification Script Finished ---\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4f822d53",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-01T07:47:21.836340Z",
     "iopub.status.busy": "2025-05-01T07:47:21.836083Z",
     "iopub.status.idle": "2025-05-01T07:47:30.085340Z",
     "shell.execute_reply": "2025-05-01T07:47:30.084575Z"
    },
    "papermill": {
     "duration": 8.260079,
     "end_time": "2025-05-01T07:47:30.087079",
     "exception": false,
     "start_time": "2025-05-01T07:47:21.827000",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Creating new Ultralytics Settings v0.0.6 file ✅ \n",
      "View Ultralytics Settings with 'yolo settings' or at '/root/.config/Ultralytics/settings.json'\n",
      "Update Settings with 'yolo settings key=value', i.e. 'yolo settings runs_dir=path/to/dir'. For help see https://docs.ultralytics.com/quickstart/#ultralytics-settings.\n"
     ]
    }
   ],
   "source": [
    "import torch\n",
    "import torch.nn as nn\n",
    "import torch.optim as optim\n",
    "from torch.utils.data import Dataset, DataLoader\n",
    "import xml.etree.ElementTree as ET\n",
    "import os\n",
    "import numpy as np\n",
    "from sklearn.metrics import accuracy_score, precision_recall_fscore_support, roc_auc_score, confusion_matrix, ConfusionMatrixDisplay\n",
    "from tqdm.notebook import tqdm\n",
    "import random\n",
    "import math\n",
    "import zipfile\n",
    "import cv2\n",
    "from ultralytics import YOLO\n",
    "import pandas as pd \n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "31c4269d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-01T07:47:30.107564Z",
     "iopub.status.busy": "2025-05-01T07:47:30.107125Z",
     "iopub.status.idle": "2025-05-01T07:47:31.616941Z",
     "shell.execute_reply": "2025-05-01T07:47:31.615816Z"
    },
    "papermill": {
     "duration": 1.521959,
     "end_time": "2025-05-01T07:47:31.619031",
     "exception": false,
     "start_time": "2025-05-01T07:47:30.097072",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Unzipped successfully.\n"
     ]
    }
   ],
   "source": [
    "zip_path = \"/kaggle/working/PIE/annotations/annotations.zip\"\n",
    "extract_to = \"/kaggle/working/PIE/annotations/\"\n",
    "\n",
    "if os.path.exists(extract_to + 'annotations'):\n",
    "    print(\"Exists already. Not unzipping.\")\n",
    "else:\n",
    "    with zipfile.ZipFile(zip_path, 'r') as zip_ref:\n",
    "        zip_ref.extractall(extract_to)\n",
    "    print(\"Unzipped successfully.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e7235ec2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-01T07:47:31.638688Z",
     "iopub.status.busy": "2025-05-01T07:47:31.638431Z",
     "iopub.status.idle": "2025-05-01T07:47:32.354169Z",
     "shell.execute_reply": "2025-05-01T07:47:32.353164Z"
    },
    "papermill": {
     "duration": 0.72677,
     "end_time": "2025-05-01T07:47:32.355687",
     "exception": false,
     "start_time": "2025-05-01T07:47:31.628917",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Unzipped successfully.\n"
     ]
    }
   ],
   "source": [
    "zip_path = \"/kaggle/working/PIE/annotations/annotations_vehicle.zip\"\n",
    "extract_to = \"/kaggle/working/PIE/annotations/\"\n",
    "\n",
    "if os.path.exists(extract_to + 'annotations_vehicle'):\n",
    "    print(\"Exists already. Not unzipping.\")\n",
    "else:\n",
    "    with zipfile.ZipFile(zip_path, 'r') as zip_ref:\n",
    "        zip_ref.extractall(extract_to)\n",
    "    print(\"Unzipped successfully.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b999a30e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-01T07:47:32.374379Z",
     "iopub.status.busy": "2025-05-01T07:47:32.374094Z",
     "iopub.status.idle": "2025-05-01T07:47:32.385797Z",
     "shell.execute_reply": "2025-05-01T07:47:32.385080Z"
    },
    "papermill": {
     "duration": 0.022132,
     "end_time": "2025-05-01T07:47:32.387005",
     "exception": false,
     "start_time": "2025-05-01T07:47:32.364873",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Unzipped successfully.\n"
     ]
    }
   ],
   "source": [
    "zip_path = \"/kaggle/working/PIE/annotations/annotations_attributes.zip\"\n",
    "extract_to = \"/kaggle/working/PIE/annotations/\"\n",
    "\n",
    "if os.path.exists(extract_to + \"annotations_attributes\"):\n",
    "    print(\"Exists already. Not unzipping.\")\n",
    "else:\n",
    "    with zipfile.ZipFile(zip_path, 'r') as zip_ref:\n",
    "        zip_ref.extractall(extract_to)\n",
    "    print(\"Unzipped successfully.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "37f4183a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-01T07:47:32.406263Z",
     "iopub.status.busy": "2025-05-01T07:47:32.406016Z",
     "iopub.status.idle": "2025-05-01T07:47:32.416746Z",
     "shell.execute_reply": "2025-05-01T07:47:32.416163Z"
    },
    "papermill": {
     "duration": 0.021997,
     "end_time": "2025-05-01T07:47:32.417896",
     "exception": false,
     "start_time": "2025-05-01T07:47:32.395899",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # --- IMPORTS ---\n",
    "# import torch\n",
    "# import torch.nn as nn\n",
    "# import torch.optim as optim\n",
    "# from torch.utils.data import Dataset, DataLoader\n",
    "# import xml.etree.ElementTree as ET\n",
    "# import os\n",
    "# import numpy as np\n",
    "# from sklearn.metrics import accuracy_score, precision_recall_fscore_support, roc_auc_score, confusion_matrix, ConfusionMatrixDisplay\n",
    "# from sklearn.preprocessing import StandardScaler # For standardizing ego features\n",
    "# from tqdm.notebook import tqdm\n",
    "# import random\n",
    "# import math\n",
    "# import zipfile\n",
    "# import cv2\n",
    "# import pandas as pd\n",
    "# import matplotlib.pyplot as plt\n",
    "# import seaborn as sns\n",
    "# import pickle\n",
    "# import time\n",
    "# import sys # For path manipulation if needed\n",
    "\n",
    "# # --- Add PIE utilities path if necessary (adjust path) ---\n",
    "# pie_utilities_path = '/kaggle/working/PIE/utilities'\n",
    "# if pie_utilities_path not in sys.path:\n",
    "#     sys.path.insert(0, pie_utilities_path)\n",
    "# try:\n",
    "#     # We only need PIE class to generate the database if needed\n",
    "#     from pie_data import PIE\n",
    "# except ImportError as e:\n",
    "#     print(f\"Warning: Could not import PIE class from {pie_utilities_path}. Database must already exist. Error: {e}\")\n",
    "#     PIE = None # Define PIE as None if import fails\n",
    "\n",
    "# # --- Configuration ---\n",
    "# PIE_ROOT_PATH = '/kaggle/working/PIE' # Path where PIE repo was cloned/unzipped\n",
    "# VIDEO_INPUT_DIR = '/kaggle/input' # Where pie-setXX video dataset folders are\n",
    "# POSE_DATA_DIR = '/kaggle/input/pose-data/extracted_poses2' # Where setXX subdirs with PKLs are\n",
    "# PIE_DATABASE_CACHE_PATH = '/kaggle/input/pie-database/pie_database.pkl'\n",
    "\n",
    "# # --- Stream Control ---\n",
    "# ACTIVE_STREAMS = [\n",
    "#     'bbox',\n",
    "#     # 'pose',\n",
    "#     # 'ego_speed',\n",
    "#     # 'ego_acc',\n",
    "#     # 'ego_gyro',\n",
    "#     # 'ped_action',\n",
    "#     # 'ped_look',\n",
    "#     # 'ped_occlusion',\n",
    "#     # 'traffic_light',\n",
    "#     # 'static_context'\n",
    "# ]\n",
    "# print(f\"Active Streams: {ACTIVE_STREAMS}\")\n",
    "\n",
    "# # Model Hyperparameters\n",
    "# SEQ_LEN = 30\n",
    "# PRED_LEN = 1\n",
    "# # Input Sizes (Define for ALL potential streams)\n",
    "# INPUT_SIZE_BBOX = 4\n",
    "# INPUT_SIZE_POSE = 34\n",
    "# INPUT_SIZE_EGO_SPEED = 1\n",
    "# INPUT_SIZE_EGO_ACC = 2 # X, Y components\n",
    "# INPUT_SIZE_EGO_GYRO = 1 # Z component (Yaw rate)\n",
    "# INPUT_SIZE_PED_ACTION = 1 # 0:standing, 1:walking\n",
    "# INPUT_SIZE_PED_LOOK = 1 # 0:not-looking, 1:looking\n",
    "# INPUT_SIZE_PED_OCC = 1 # 0:none, 0.5:part, 1:full (normalized)\n",
    "# INPUT_SIZE_TL_STATE = 4 # 0:Undef, 1:Red, 2:Yellow, 3:Green (One-Hot)\n",
    "# # Static Feature Sizes (Matches pie_data.py mappings)\n",
    "# NUM_SIGNALIZED_CATS = 4\n",
    "# NUM_INTERSECTION_CATS = 5\n",
    "# NUM_AGE_CATS = 4\n",
    "# NUM_GENDER_CATS = 3\n",
    "# INPUT_SIZE_STATIC = NUM_SIGNALIZED_CATS + NUM_INTERSECTION_CATS + NUM_AGE_CATS + NUM_GENDER_CATS # = 16\n",
    "\n",
    "# LSTM_HIDDEN_SIZE = 256\n",
    "# NUM_LSTM_LAYERS = 2\n",
    "# DROPOUT_RATE = 0.3\n",
    "# NUM_CLASSES = 2\n",
    "# ATTENTION_DIM = 128\n",
    "\n",
    "# # Training Hyperparameters\n",
    "# LEARNING_RATE = 1e-4 # Possibly lower LR needed after balancing/more features\n",
    "# BATCH_SIZE = 32\n",
    "# NUM_EPOCHS = 10 # Increase epochs slightly for balanced data\n",
    "# DEVICE = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "# print(f\"Using device: {DEVICE}\")\n",
    "\n",
    "# # Dataset Splits (Using PIE default)\n",
    "# TRAIN_SETS_STR = ['set01', 'set02', 'set04']\n",
    "# VAL_SETS_STR = ['set05', 'set06']\n",
    "# TEST_SETS_STR = ['set03'] # Although not used in training loop\n",
    "\n",
    "# # Mappings (Matches pie_data.py)\n",
    "# TL_STATE_MAP = {'__undefined__': 0, 'red': 1, 'yellow': 2, 'green': 3}\n",
    "# NUM_TL_STATES = len(TL_STATE_MAP)\n",
    "# SIGNALIZED_MAP = {'n/a': 0, 'C': 1, 'S': 2, 'CS': 3}\n",
    "# INTERSECTION_MAP = {'midblock': 0, 'T': 1, 'T-left': 2, 'T-right': 3, 'four-way': 4}\n",
    "# AGE_MAP = {'child': 0, 'young': 1, 'adult': 2, 'senior': 3}\n",
    "# GENDER_MAP = {'n/a': 0, 'female': 1, 'male': 2}\n",
    "\n",
    "# # --- Helper: One-Hot Encoding ---\n",
    "# def to_one_hot(index, num_classes):\n",
    "#     vec = np.zeros(num_classes, dtype=np.float32)\n",
    "#     if 0 <= index < num_classes:\n",
    "#         vec[index] = 1.0\n",
    "#     else: # Handle unexpected index\n",
    "#         vec[0] = 1.0 # Default to first class\n",
    "#     return vec\n",
    "\n",
    "# # --- Balancing Function ---\n",
    "# def balance_samples_count(seq_data, label_type, random_seed=42):\n",
    "#     print('---------------------------------------------------------')\n",
    "#     print(f\"Balancing samples based on '{label_type}' key\")\n",
    "#     if label_type not in seq_data:\n",
    "#         raise KeyError(f\"Label type '{label_type}' not found.\")\n",
    "#     try:\n",
    "#         gt_labels = [lbl[0] for lbl in seq_data[label_type]]\n",
    "#     except (IndexError, TypeError):\n",
    "#         raise ValueError(f\"Labels under '{label_type}' not in expected format [[label_val]].\")\n",
    "\n",
    "#     if not all(l in [0, 1] for l in gt_labels):\n",
    "#         print(f\"Warning: Labels for balancing contain values other than 0 or 1.\")\n",
    "\n",
    "#     num_pos_samples = np.count_nonzero(np.array(gt_labels))\n",
    "#     num_neg_samples = len(gt_labels) - num_pos_samples\n",
    "#     new_seq_data = {}\n",
    "\n",
    "#     if num_neg_samples == num_pos_samples:\n",
    "#         print('Samples already balanced.')\n",
    "#         return seq_data.copy()\n",
    "#     else:\n",
    "#         print(f'Unbalanced: Positive (1): {num_pos_samples} | Negative (0): {num_neg_samples}')\n",
    "#         majority_label = 0 if num_neg_samples > num_pos_samples else 1\n",
    "#         minority_count = min(num_neg_samples, num_pos_samples)\n",
    "#         print(f\"Undersampling majority class ({majority_label}) to match count ({minority_count}).\")\n",
    "\n",
    "#         majority_indices = np.where(np.array(gt_labels) == majority_label)[0]\n",
    "#         minority_indices = np.where(np.array(gt_labels) != majority_label)[0]\n",
    "#         np.random.seed(random_seed)\n",
    "#         keep_majority_indices = np.random.choice(majority_indices, size=minority_count, replace=False)\n",
    "#         final_indices = np.concatenate((minority_indices, keep_majority_indices))\n",
    "#         np.random.shuffle(final_indices)\n",
    "\n",
    "#         for k, v_list in seq_data.items():\n",
    "#             if isinstance(v_list, list) and len(v_list) == len(gt_labels):\n",
    "#                  try:\n",
    "#                      # Check if the list contains numpy arrays before converting the whole list\n",
    "#                      if v_list and isinstance(v_list[0], np.ndarray):\n",
    "#                          v_array = np.array(v_list)\n",
    "#                          new_seq_data[k] = list(v_array[final_indices])\n",
    "#                      else: # Assume list of lists or list of scalars\n",
    "#                           new_seq_data[k] = [v_list[i] for i in final_indices]\n",
    "#                  except Exception as e:\n",
    "#                       print(f\"Error processing key '{k}' during balancing: {e}. Skip.\")\n",
    "#                       new_seq_data[k] = []\n",
    "#             else:\n",
    "#                  print(f\"Warn: Skipping key '{k}' in balancing (not list or len mismatch).\")\n",
    "#                  new_seq_data[k] = v_list\n",
    "\n",
    "#         # Check if label key still exists after potential errors\n",
    "#         if label_type in new_seq_data:\n",
    "#              new_gt_labels = [lbl[0] for lbl in new_seq_data[label_type]]\n",
    "#              final_pos = np.count_nonzero(np.array(new_gt_labels))\n",
    "#              final_neg = len(new_gt_labels) - final_pos\n",
    "#              print(f'Balanced:   Positive (1): {final_pos} | Negative (0): {final_neg}')\n",
    "#         else:\n",
    "#              print(\"Error: Label key was lost during balancing process.\")\n",
    "\n",
    "#         print('---------------------------------------------------------')\n",
    "#         return new_seq_data\n",
    "\n",
    "\n",
    "# # --- Dataset Class ---\n",
    "# class PIEDataset(Dataset):\n",
    "#     def __init__(self, pie_database, set_names, pose_data_dir, seq_len, pred_len, scalers=None, active_streams=None):\n",
    "#         self.pie_db = pie_database\n",
    "#         self.set_names = set_names\n",
    "#         self.pose_data_dir = pose_data_dir\n",
    "#         self.seq_len = seq_len\n",
    "#         self.pred_len = pred_len\n",
    "#         self.scalers = scalers or {}\n",
    "#         self.active_streams = active_streams or []\n",
    "#         self.sequences = []\n",
    "#         self.all_pose_data = {}\n",
    "#         # Store input sizes needed for error handling in __getitem__\n",
    "#         self._input_sizes_for_error = self._get_input_sizes_dict()\n",
    "#         self._load_pose_data()\n",
    "#         self._generate_sequence_list()\n",
    "#         if not self.sequences:\n",
    "#             raise ValueError(f\"Dataset init failed: No sequences for {self.set_names}\")\n",
    "\n",
    "#     def _get_input_sizes_dict(self):\n",
    "#         # Helper to create input sizes dict, needed for error fallback in __getitem__\n",
    "#         input_sizes = {}\n",
    "#         for stream in self.active_streams:\n",
    "#             size_constant_name = f'INPUT_SIZE_{stream.upper()}'\n",
    "#             special_cases = {'TRAFFIC_LIGHT': 'TL_STATE', 'STATIC_CONTEXT': 'STATIC', 'EGO_SPEED': 'EGO_SPEED', 'EGO_ACC': 'EGO_ACC', 'EGO_GYRO': 'EGO_GYRO', 'PED_ACTION': 'PED_ACTION', 'PED_LOOK': 'PED_LOOK', 'PED_OCCLUSION': 'PED_OCC'}\n",
    "#             stream_upper_key = stream.upper()\n",
    "#             suffix = special_cases.get(stream_upper_key)\n",
    "#             if suffix:\n",
    "#                  size_constant_name = f'INPUT_SIZE_{suffix}'\n",
    "#             elif stream == 'bbox': size_constant_name = 'INPUT_SIZE_BBOX'\n",
    "#             elif stream == 'pose': size_constant_name = 'INPUT_SIZE_POSE'\n",
    "#             if size_constant_name in globals(): input_sizes[stream] = globals()[size_constant_name]\n",
    "#             else: input_sizes[stream] = 1 # Default size 1 if not found (should not happen ideally)\n",
    "#         return input_sizes\n",
    "\n",
    "#     def _load_pose_data(self):\n",
    "#         print(f\"\\nLoading pose data for sets: {self.set_names} from {self.pose_data_dir}\")\n",
    "#         sets_loaded_count = 0\n",
    "#         for set_id in tqdm(self.set_names, desc=\"Loading Pose Sets\"):\n",
    "#             self.all_pose_data[set_id] = {}\n",
    "#             pose_set_path = os.path.join(self.pose_data_dir, set_id)\n",
    "#             if not os.path.isdir(pose_set_path):\n",
    "#                 print(f\"Warn: Pose dir missing for {set_id} at {pose_set_path}\")\n",
    "#                 continue\n",
    "#             pkl_files_in_set = [f for f in os.listdir(pose_set_path) if f.startswith(f\"{set_id}_\") and f.endswith(\"_poses.pkl\")]\n",
    "#             if not pkl_files_in_set:\n",
    "#                 continue\n",
    "#             loaded_video_count = 0\n",
    "#             for pkl_filename in tqdm(pkl_files_in_set, desc=f\"Loading PKLs for {set_id}\", leave=False):\n",
    "#                 pkl_file_path = os.path.join(pose_set_path, pkl_filename)\n",
    "#                 try:\n",
    "#                     with open(pkl_file_path, 'rb') as f:\n",
    "#                         loaded_pkl_content = pickle.load(f)\n",
    "#                     if len(loaded_pkl_content) != 1:\n",
    "#                         continue\n",
    "#                     unique_video_key, video_data = list(loaded_pkl_content.items())[0]\n",
    "#                     video_id = \"_\".join(unique_video_key.split('_')[1:])\n",
    "#                     self.all_pose_data[set_id][video_id] = video_data\n",
    "#                     loaded_video_count += 1\n",
    "#                 except FileNotFoundError:\n",
    "#                     pass # Expected if some videos failed extraction\n",
    "#                 except Exception as e:\n",
    "#                     print(f\"Error loading pose PKL {pkl_file_path}: {e}\")\n",
    "#             if loaded_video_count > 0:\n",
    "#                 sets_loaded_count += 1\n",
    "#         print(f\"Finished loading pose data for {sets_loaded_count} sets.\")\n",
    "\n",
    "#     def _generate_sequence_list(self):\n",
    "#         print(f\"Generating sequence list from PIE database for sets: {self.set_names}\")\n",
    "#         sequence_count = 0\n",
    "#         ped_count = 0\n",
    "#         for set_id in tqdm(self.set_names, desc=\"Generating Sequences\"):\n",
    "#             if set_id not in self.pie_db:\n",
    "#                 continue\n",
    "#             for video_id, video_data in self.pie_db[set_id].items():\n",
    "#                 if 'ped_annotations' not in video_data:\n",
    "#                     continue\n",
    "#                 for ped_id, ped_data in video_data['ped_annotations'].items():\n",
    "#                     ped_count += 1\n",
    "#                     if 'frames' not in ped_data or len(ped_data['frames']) < self.seq_len + self.pred_len:\n",
    "#                         continue\n",
    "#                     sorted_frames = sorted(ped_data['frames'])\n",
    "#                     for i in range(len(sorted_frames) - self.seq_len - self.pred_len + 1):\n",
    "#                         start_frame = sorted_frames[i]\n",
    "#                         end_frame_observe = sorted_frames[i + self.seq_len - 1]\n",
    "#                         if end_frame_observe - start_frame != self.seq_len - 1:\n",
    "#                             continue\n",
    "#                         target_frame_actual_idx = i + self.seq_len + self.pred_len - 1\n",
    "#                         if target_frame_actual_idx >= len(sorted_frames):\n",
    "#                              continue # Avoid index out of bounds\n",
    "#                         target_frame = sorted_frames[target_frame_actual_idx]\n",
    "#                         if target_frame - end_frame_observe != self.pred_len:\n",
    "#                              continue\n",
    "#                         self.sequences.append((set_id, video_id, ped_id, start_frame))\n",
    "#                         sequence_count += 1\n",
    "#         print(f\"Found {sequence_count} valid sequences from {ped_count} pedestrian tracks.\")\n",
    "\n",
    "#     def __len__(self):\n",
    "#         return len(self.sequences)\n",
    "\n",
    "#     def __getitem__(self, idx):\n",
    "#         set_id, video_id, ped_id, start_frame = self.sequences[idx]\n",
    "#         frame_nums = list(range(start_frame, start_frame + self.seq_len))\n",
    "#         target_frame_num = start_frame + self.seq_len + self.pred_len - 1\n",
    "\n",
    "#         # Get data from the loaded PIE database\n",
    "#         video_db = self.pie_db.get(set_id, {}).get(video_id, {})\n",
    "#         ped_db = video_db.get('ped_annotations', {}).get(ped_id, {})\n",
    "#         ego_db = video_db.get('vehicle_annotations', {}) # Frame -> {sensor: value}\n",
    "#         traffic_db = video_db.get('traffic_annotations', {}) # ObjID -> {frames:[], state:[], ...}\n",
    "#         ped_attributes = ped_db.get('attributes', {})\n",
    "\n",
    "#         # Initialize feature sequences\n",
    "#         feature_sequences = {stream: [] for stream in self.active_streams}\n",
    "\n",
    "#         # Static Features (calculated once)\n",
    "#         static_vec = np.zeros(INPUT_SIZE_STATIC, dtype=np.float32) # Default static\n",
    "#         if 'static_context' in self.active_streams:\n",
    "#             sig_idx = ped_attributes.get('signalized', 0)\n",
    "#             int_idx = ped_attributes.get('intersection', 0)\n",
    "#             age_idx = ped_attributes.get('age', 2) # Default to 'adult'\n",
    "#             gen_idx = ped_attributes.get('gender', 0)\n",
    "#             static_vec = np.concatenate([\n",
    "#                 to_one_hot(sig_idx, NUM_SIGNALIZED_CATS),\n",
    "#                 to_one_hot(int_idx, NUM_INTERSECTION_CATS),\n",
    "#                 to_one_hot(age_idx, NUM_AGE_CATS),\n",
    "#                 to_one_hot(gen_idx, NUM_GENDER_CATS)\n",
    "#             ])\n",
    "#             if static_vec.shape[0] != INPUT_SIZE_STATIC: # Sanity check\n",
    "#                  static_vec = np.zeros(INPUT_SIZE_STATIC, dtype=np.float32)\n",
    "\n",
    "#         # Get Target Label\n",
    "#         label = 0 # Default to not-crossing\n",
    "#         if 'frames' in ped_db and 'behavior' in ped_db and 'cross' in ped_db['behavior']:\n",
    "#              try:\n",
    "#                  target_frame_db_idx = ped_db['frames'].index(target_frame_num)\n",
    "#                  label = ped_db['behavior']['cross'][target_frame_db_idx]\n",
    "#                  if label == -1: label = 0 # Map irrelevant to not-crossing\n",
    "#              except (ValueError, IndexError):\n",
    "#                  pass # Keep default label\n",
    "\n",
    "#         # Iterate through sequence frames\n",
    "#         for frame_num in frame_nums:\n",
    "#             frame_db_idx = -1\n",
    "#             if 'frames' in ped_db:\n",
    "#                  try:\n",
    "#                      frame_db_idx = ped_db['frames'].index(frame_num)\n",
    "#                  except ValueError:\n",
    "#                      pass # Frame not found for this pedestrian in this sequence part\n",
    "#             ego_frame_data = ego_db.get(frame_num, {})\n",
    "\n",
    "#             # --- Extract for ACTIVE streams ---\n",
    "#             if 'bbox' in self.active_streams:\n",
    "#                 bbox_norm = np.zeros(INPUT_SIZE_BBOX, dtype=np.float32) # Default\n",
    "#                 if frame_db_idx != -1 and 'bbox' in ped_db and len(ped_db['bbox']) > frame_db_idx:\n",
    "#                     # --- Start Corrected Try/Except ---\n",
    "#                      try:\n",
    "#                           x1, y1, x2, y2 = ped_db['bbox'][frame_db_idx]\n",
    "#                           img_w = video_db.get('width', 1920) # Use default if missing\n",
    "#                           img_h = video_db.get('height', 1080)\n",
    "#                           if img_w > 0 and img_h > 0: # Check for valid image dimensions\n",
    "#                                cx = ((x1 + x2) / 2) / img_w\n",
    "#                                cy = ((y1 + y2) / 2) / img_h\n",
    "#                                w = (x2 - x1) / img_w\n",
    "#                                h = (y2 - y1) / img_h\n",
    "#                                # Check for valid normalized bbox dimensions\n",
    "#                                if w > 0 and h > 0 and 0 <= cx <= 1 and 0 <= cy <= 1:\n",
    "#                                     bbox_norm = np.array([cx, cy, w, h], dtype=np.float32)\n",
    "#                      except Exception as e:\n",
    "#                           # Keep default zero vector if any error occurs during processing\n",
    "#                           # print(f\"Warning: Error processing bbox F:{frame_num} P:{ped_id} V:{video_id} - {e}\") # Optional warning\n",
    "#                           pass\n",
    "#                     # --- End Corrected Try/Except ---\n",
    "#                 feature_sequences['bbox'].append(bbox_norm)\n",
    "\n",
    "#             # --- (Rest of stream extractions - unchanged logic but ensure proper indentation) ---\n",
    "#             if 'pose' in self.active_streams:\n",
    "#                 pose_vector = np.zeros(INPUT_SIZE_POSE, dtype=np.float32)\n",
    "#                 vid_pose_data = self.all_pose_data.get(set_id, {}).get(video_id, {})\n",
    "#                 frame_pose_data = vid_pose_data.get(frame_num, {})\n",
    "#                 loaded_pose = frame_pose_data.get(ped_id)\n",
    "#                 if loaded_pose is not None and isinstance(loaded_pose, np.ndarray) and loaded_pose.shape == (INPUT_SIZE_POSE,):\n",
    "#                     pose_vector = loaded_pose\n",
    "#                 feature_sequences['pose'].append(pose_vector)\n",
    "\n",
    "#             if 'ego_speed' in self.active_streams:\n",
    "#                 speed = ego_frame_data.get('OBD_speed', 0.0)\n",
    "#                 if speed == 0.0: speed = ego_frame_data.get('GPS_speed', 0.0)\n",
    "#                 speed_scaled = (speed - self.scalers.get('ego_speed_mean', 0.0)) / self.scalers.get('ego_speed_std', 1.0)\n",
    "#                 feature_sequences['ego_speed'].append([speed_scaled])\n",
    "\n",
    "#             if 'ego_acc' in self.active_streams:\n",
    "#                 accX = ego_frame_data.get('accX', 0.0)\n",
    "#                 accY = ego_frame_data.get('accY', 0.0)\n",
    "#                 accX_scaled = (accX - self.scalers.get('accX_mean', 0.0)) / self.scalers.get('accX_std', 1.0)\n",
    "#                 accY_scaled = (accY - self.scalers.get('accY_mean', 0.0)) / self.scalers.get('accY_std', 1.0)\n",
    "#                 feature_sequences['ego_acc'].append([accX_scaled, accY_scaled])\n",
    "\n",
    "#             if 'ego_gyro' in self.active_streams:\n",
    "#                 gyroZ = ego_frame_data.get('gyroZ', 0.0)\n",
    "#                 gyroZ_scaled = (gyroZ - self.scalers.get('gyroZ_mean', 0.0)) / self.scalers.get('gyroZ_std', 1.0)\n",
    "#                 feature_sequences['ego_gyro'].append([gyroZ_scaled])\n",
    "\n",
    "#             if 'ped_action' in self.active_streams:\n",
    "#                 action = 0 # Default standing\n",
    "#                 if frame_db_idx != -1 and 'behavior' in ped_db and 'action' in ped_db['behavior'] and len(ped_db['behavior']['action']) > frame_db_idx:\n",
    "#                      action = ped_db['behavior']['action'][frame_db_idx]\n",
    "#                 feature_sequences['ped_action'].append([float(action)])\n",
    "\n",
    "#             if 'ped_look' in self.active_streams:\n",
    "#                 look = 0 # Default not-looking\n",
    "#                 if frame_db_idx != -1 and 'behavior' in ped_db and 'look' in ped_db['behavior'] and len(ped_db['behavior']['look']) > frame_db_idx:\n",
    "#                      look = ped_db['behavior']['look'][frame_db_idx]\n",
    "#                 feature_sequences['ped_look'].append([float(look)])\n",
    "\n",
    "#             if 'ped_occlusion' in self.active_streams:\n",
    "#                 occ = 0.0 # Default none\n",
    "#                 if frame_db_idx != -1 and 'occlusion' in ped_db and len(ped_db['occlusion']) > frame_db_idx:\n",
    "#                      occ_val = ped_db['occlusion'][frame_db_idx]\n",
    "#                      occ = float(occ_val) / 2.0 # Normalize\n",
    "#                 feature_sequences['ped_occlusion'].append([occ])\n",
    "\n",
    "#             if 'traffic_light' in self.active_streams:\n",
    "#                 state_int = 0\n",
    "#                 for obj_id, obj_data in traffic_db.items():\n",
    "#                      if obj_data.get('obj_class') == 'traffic_light' and 'frames' in obj_data and 'state' in obj_data:\n",
    "#                           try:\n",
    "#                               tl_frame_idx = obj_data['frames'].index(frame_num)\n",
    "#                               state_val = obj_data['state'][tl_frame_idx]\n",
    "#                               if state_val != 0:\n",
    "#                                   state_int = state_val\n",
    "#                                   break # Found first non-undefined state\n",
    "#                           except (ValueError, IndexError):\n",
    "#                               continue\n",
    "#                 feature_sequences['traffic_light'].append(to_one_hot(state_int, NUM_TL_STATES))\n",
    "\n",
    "#             if 'static_context' in self.active_streams:\n",
    "#                 feature_sequences['static_context'].append(static_vec)\n",
    "\n",
    "#         # --- Convert lists to Tensors ---\n",
    "#         features = {}\n",
    "#         try:\n",
    "#             for stream_name in self.active_streams:\n",
    "#                  features[stream_name] = torch.tensor(np.array(feature_sequences[stream_name], dtype=np.float32), dtype=torch.float32)\n",
    "\n",
    "#         except Exception as e:\n",
    "#              print(f\"Error converting features idx {idx}: {e}. Return dummy.\")\n",
    "#              # Use the pre-calculated sizes dictionary for fallback\n",
    "#              features = {\n",
    "#                  name: torch.zeros((self.seq_len, self._input_sizes_for_error.get(name, 1)), dtype=torch.float32)\n",
    "#                  for name in self.active_streams\n",
    "#              }\n",
    "\n",
    "#         return features, torch.tensor(label, dtype=torch.long)\n",
    "\n",
    "# # --- Wrapper Dataset for Balanced Data ---\n",
    "# class BalancedDataset(Dataset):\n",
    "#     def __init__(self, data_dict, active_streams, label_key='label'):\n",
    "#         self.active_streams = active_streams\n",
    "#         self.label_key = label_key\n",
    "#         if self.label_key not in data_dict or not data_dict[self.label_key]:\n",
    "#              raise ValueError(f\"Label key '{self.label_key}' missing/empty.\")\n",
    "#         self.num_samples = len(data_dict[self.label_key])\n",
    "#         if self.num_samples == 0:\n",
    "#             print(\"Warning: BalancedDataset initialized with zero samples.\")\n",
    "\n",
    "#         self.features = {}\n",
    "#         for stream in self.active_streams:\n",
    "#              if stream in data_dict and data_dict[stream]:\n",
    "#                  try:\n",
    "#                      self.features[stream] = torch.tensor(np.array(data_dict[stream]), dtype=torch.float32)\n",
    "#                  except ValueError as e:\n",
    "#                       raise ValueError(f\"Error converting stream '{stream}' data: {e}\")\n",
    "#              else:\n",
    "#                   raise KeyError(f\"Stream '{stream}' missing/empty in balanced data.\")\n",
    "#         try:\n",
    "#             self.labels = torch.tensor([lbl[0] for lbl in data_dict[self.label_key]], dtype=torch.long)\n",
    "#         except (IndexError, TypeError) as e:\n",
    "#              raise ValueError(f\"Error converting labels: {e}\")\n",
    "\n",
    "#         for stream in self.active_streams:\n",
    "#              if len(self.features[stream]) != self.num_samples:\n",
    "#                  raise ValueError(f\"Len mismatch: Stream '{stream}' ({len(self.features[stream])}) vs Labels ({self.num_samples})\")\n",
    "#     def __len__(self):\n",
    "#         return self.num_samples\n",
    "#     def __getitem__(self, idx):\n",
    "#         feature_dict = {stream: self.features[stream][idx] for stream in self.active_streams}\n",
    "#         label = self.labels[idx]\n",
    "#         return feature_dict, label\n",
    "\n",
    "# # --- Model Architecture ---\n",
    "# class Attention(nn.Module):\n",
    "#     def __init__(self, hidden_dim, attention_dim):\n",
    "#         super(Attention, self).__init__()\n",
    "#         self.attention_net = nn.Sequential(\n",
    "#             nn.Linear(hidden_dim, attention_dim),\n",
    "#             nn.Tanh(),\n",
    "#             nn.Linear(attention_dim, 1)\n",
    "#         )\n",
    "#     def forward(self, lstm_output):\n",
    "#         att_scores = self.attention_net(lstm_output).squeeze(2)\n",
    "#         att_weights = torch.softmax(att_scores, dim=1)\n",
    "#         context_vector = torch.sum(lstm_output * att_weights.unsqueeze(2), dim=1)\n",
    "#         return context_vector, att_weights\n",
    "# class MultiStreamAdaptiveLSTM(nn.Module):\n",
    "#     def __init__(self, input_sizes, lstm_hidden_size, num_lstm_layers, num_classes, attention_dim, dropout_rate, stream_names=['bbox', 'pose']):\n",
    "#         super(MultiStreamAdaptiveLSTM, self).__init__()\n",
    "#         if not stream_names: raise ValueError(\"stream_names cannot be empty.\")\n",
    "#         self.stream_names = stream_names\n",
    "#         self.lstms = nn.ModuleDict()\n",
    "#         self.attentions = nn.ModuleDict()\n",
    "#         print(f\"Initializing model with streams: {self.stream_names}\")\n",
    "#         for name in self.stream_names:\n",
    "#             if name not in input_sizes: raise KeyError(f\"Input size for stream '{name}' not provided.\")\n",
    "#             current_input_size = input_sizes[name]\n",
    "#             print(f\"  - Adding stream '{name}' with input size {current_input_size}\")\n",
    "#             self.lstms[name] = nn.LSTM(current_input_size, lstm_hidden_size, num_lstm_layers,\n",
    "#                                        batch_first=True, dropout=dropout_rate if num_lstm_layers > 1 else 0,\n",
    "#                                        bidirectional=True)\n",
    "#             self.attentions[name] = Attention(lstm_hidden_size * 2 , attention_dim)\n",
    "#         num_active_streams = len(self.stream_names)\n",
    "#         combined_feature_dim = lstm_hidden_size * 2 * num_active_streams\n",
    "#         print(f\"  Combined feature dimension: {combined_feature_dim}\")\n",
    "#         self.dropout = nn.Dropout(dropout_rate)\n",
    "#         intermediate_dim = max(num_classes * 4, combined_feature_dim // 2)\n",
    "#         self.fc1 = nn.Linear(combined_feature_dim, intermediate_dim)\n",
    "#         self.relu = nn.ReLU()\n",
    "#         self.fc2 = nn.Linear(intermediate_dim, num_classes)\n",
    "#     def forward(self, x):\n",
    "#         stream_context_vectors = []\n",
    "#         stream_att_weights = {}\n",
    "#         for name in self.stream_names:\n",
    "#             if name not in x: print(f\"Warning: Stream '{name}' expected but not in input data.\"); continue\n",
    "#             lstm_out, _ = self.lstms[name](x[name])\n",
    "#             context_vector, attention_weights = self.attentions[name](lstm_out)\n",
    "#             stream_context_vectors.append(context_vector)\n",
    "#             stream_att_weights[name] = attention_weights\n",
    "#         if not stream_context_vectors: raise RuntimeError(\"No stream outputs generated.\")\n",
    "#         fused_features = torch.cat(stream_context_vectors, dim=1)\n",
    "#         out = self.dropout(fused_features)\n",
    "#         out = self.relu(self.fc1(out))\n",
    "#         out = self.dropout(out)\n",
    "#         logits = self.fc2(out)\n",
    "#         return logits\n",
    "\n",
    "# # --- Training and Evaluation Functions ---\n",
    "# def train_epoch(model, dataloader, optimizer, criterion, device):\n",
    "#     model.train()\n",
    "#     total_loss = 0.0\n",
    "#     all_preds = []\n",
    "#     all_labels = []\n",
    "#     active_streams = model.stream_names\n",
    "#     for features, labels in tqdm(dataloader, desc=\"Training\", leave=False):\n",
    "#         input_features = {name: features[name].to(device) for name in active_streams if name in features}\n",
    "#         labels = labels.to(device)\n",
    "#         optimizer.zero_grad()\n",
    "#         outputs = model(input_features)\n",
    "#         loss = criterion(outputs, labels)\n",
    "#         loss.backward()\n",
    "#         optimizer.step()\n",
    "#         total_loss += loss.item()\n",
    "#         preds = torch.argmax(outputs, dim=1)\n",
    "#         all_preds.extend(preds.cpu().numpy())\n",
    "#         all_labels.extend(labels.cpu().numpy())\n",
    "#     avg_loss = total_loss / len(dataloader)\n",
    "#     accuracy = accuracy_score(all_labels, all_preds)\n",
    "#     return avg_loss, accuracy\n",
    "\n",
    "# def evaluate_epoch(model, dataloader, criterion, device):\n",
    "#     model.eval()\n",
    "#     total_loss = 0.0\n",
    "#     all_labels = []\n",
    "#     all_preds = []\n",
    "#     all_probs = []\n",
    "#     active_streams = model.stream_names\n",
    "#     with torch.no_grad():\n",
    "#         for features, labels in tqdm(dataloader, desc=\"Evaluating\", leave=False):\n",
    "#             input_features = {name: features[name].to(device) for name in active_streams if name in features}\n",
    "#             labels = labels.to(device)\n",
    "#             outputs = model(input_features)\n",
    "#             loss = criterion(outputs, labels)\n",
    "#             total_loss += loss.item()\n",
    "#             probs = torch.softmax(outputs, dim=1)\n",
    "#             preds = torch.argmax(probs, dim=1)\n",
    "#             all_labels.extend(labels.cpu().numpy())\n",
    "#             all_preds.extend(preds.cpu().numpy())\n",
    "#             all_probs.extend(probs.cpu().numpy())\n",
    "#     avg_loss = total_loss / len(dataloader)\n",
    "#     all_probs = np.array(all_probs); all_labels = np.array(all_labels); all_preds = np.array(all_preds)\n",
    "#     accuracy = accuracy_score(all_labels, all_preds)\n",
    "#     precision, recall, f1, _ = precision_recall_fscore_support(all_labels, all_preds, average='binary', pos_label=1, zero_division=0)\n",
    "#     auc = roc_auc_score(all_labels, all_probs[:, 1]) if len(np.unique(all_labels)) > 1 else float('nan')\n",
    "#     return {'loss': avg_loss, 'accuracy': accuracy, 'precision': precision, 'recall': recall, 'f1': f1, 'auc': auc}\n",
    "\n",
    "# def get_predictions_and_labels(model, dataloader, device):\n",
    "#     model.eval(); all_labels = []; all_preds = []\n",
    "#     active_streams = model.stream_names\n",
    "#     with torch.no_grad():\n",
    "#         for features, labels in tqdm(dataloader, desc=\"Generating CM Data\", leave=False):\n",
    "#              input_features = {name: features[name].to(device) for name in active_streams if name in features}\n",
    "#              labels = labels.to(device); outputs = model(input_features); preds = torch.argmax(outputs, dim=1)\n",
    "#              all_labels.extend(labels.cpu().numpy()); all_preds.extend(preds.cpu().numpy())\n",
    "#     return np.array(all_labels), np.array(all_preds)\n",
    "\n",
    "# # --- Main Execution ---\n",
    "# if __name__ == '__main__':\n",
    "\n",
    "#     # --- Generate/Load PIE Database ---\n",
    "#     print(f\"Checking for PIE database cache at: {PIE_DATABASE_CACHE_PATH}\")\n",
    "#     if not os.path.exists(PIE_DATABASE_CACHE_PATH):\n",
    "#         if PIE is None: raise ImportError(\"PIE class not imported, cannot generate database.\")\n",
    "#         print(\"PIE database cache not found. Generating...\");\n",
    "#         pie_dataset_interface = PIE(data_path=PIE_ROOT_PATH, regen_database=True)\n",
    "#         pie_database = pie_dataset_interface.generate_database()\n",
    "#         if not pie_database: raise RuntimeError(\"Failed to generate PIE database.\")\n",
    "#         print(\"PIE database generated successfully.\")\n",
    "#     else:\n",
    "#         print(\"Loading PIE database from cache...\")\n",
    "#         try:\n",
    "#             with open(PIE_DATABASE_CACHE_PATH, 'rb') as f: pie_database = pickle.load(f)\n",
    "#             print(\"PIE database loaded successfully.\")\n",
    "#         except Exception as e: raise RuntimeError(f\"Failed to load PIE database: {e}\")\n",
    "\n",
    "#     # --- Calculate Standardization Parameters ---\n",
    "#     print(\"\\nCalculating standardization parameters from training set...\")\n",
    "#     all_train_ego_speeds = []; all_train_accX = []; all_train_accY = []; all_train_gyroZ = []\n",
    "#     for set_id in TRAIN_SETS_STR:\n",
    "#          if set_id in pie_database:\n",
    "#              for video_id, video_data in pie_database[set_id].items():\n",
    "#                   if 'vehicle_annotations' in video_data:\n",
    "#                        for frame_num, ego_frame_data in video_data['vehicle_annotations'].items():\n",
    "#                            speed = ego_frame_data.get('OBD_speed', 0.0);\n",
    "#                            if speed == 0.0: speed = ego_frame_data.get('GPS_speed', 0.0)\n",
    "#                            all_train_ego_speeds.append(speed); all_train_accX.append(ego_frame_data.get('accX', 0.0));\n",
    "#                            all_train_accY.append(ego_frame_data.get('accY', 0.0)); all_train_gyroZ.append(ego_frame_data.get('gyroZ', 0.0))\n",
    "#     scalers = {}\n",
    "#     if all_train_ego_speeds: scalers['ego_speed_mean'] = np.mean(all_train_ego_speeds); scalers['ego_speed_std'] = np.std(all_train_ego_speeds) if np.std(all_train_ego_speeds) > 1e-6 else 1.0; print(f\"  Ego Speed: Mean={scalers['ego_speed_mean']:.2f}, Std={scalers['ego_speed_std']:.2f}\")\n",
    "#     if all_train_accX: scalers['accX_mean'] = np.mean(all_train_accX); scalers['accX_std'] = np.std(all_train_accX) if np.std(all_train_accX) > 1e-6 else 1.0; scalers['accY_mean'] = np.mean(all_train_accY); scalers['accY_std'] = np.std(all_train_accY) if np.std(all_train_accY) > 1e-6 else 1.0; print(f\"  Ego AccX: Mean={scalers['accX_mean']:.2f}, Std={scalers['accX_std']:.2f}\"); print(f\"  Ego AccY: Mean={scalers['accY_mean']:.2f}, Std={scalers['accY_std']:.2f}\")\n",
    "#     if all_train_gyroZ: scalers['gyroZ_mean'] = np.mean(all_train_gyroZ); scalers['gyroZ_std'] = np.std(all_train_gyroZ) if np.std(all_train_gyroZ) > 1e-6 else 1.0; print(f\"  Ego GyroZ: Mean={scalers['gyroZ_mean']:.2f}, Std={scalers['gyroZ_std']:.2f}\")\n",
    "#     print(\"Standardization parameters calculated.\")\n",
    "\n",
    "#     # --- Initialize FULL Datasets ---\n",
    "#     print(\"\\nInitializing full datasets...\")\n",
    "#     full_train_dataset = PIEDataset(pie_database, TRAIN_SETS_STR, POSE_DATA_DIR, SEQ_LEN, PRED_LEN, scalers, ACTIVE_STREAMS)\n",
    "#     val_dataset = PIEDataset(pie_database, VAL_SETS_STR, POSE_DATA_DIR, SEQ_LEN, PRED_LEN, scalers, ACTIVE_STREAMS)\n",
    "#     if len(full_train_dataset) == 0 or len(val_dataset) == 0: raise ValueError(\"Dataset loading failed.\")\n",
    "\n",
    "#     # --- Prepare and Balance Training Data ---\n",
    "#     print(\"\\nExtracting training data for balancing...\")\n",
    "#     training_data_dict = {stream: [] for stream in ACTIVE_STREAMS}; training_data_dict['label'] = []\n",
    "#     for i in tqdm(range(len(full_train_dataset)), desc=\"Extracting data\"):\n",
    "#          features, label = full_train_dataset[i]\n",
    "#          for stream_name in ACTIVE_STREAMS: training_data_dict[stream_name].append(features[stream_name].numpy())\n",
    "#          training_data_dict['label'].append([label.item()]) # Store label as list containing the item\n",
    "#     print(f\"Original training samples: {len(training_data_dict['label'])}\")\n",
    "#     del full_train_dataset # Free memory\n",
    "\n",
    "#     label_key_for_balancing = 'label' # Key used in training_data_dict\n",
    "#     balanced_train_data_dict = balance_samples_count(training_data_dict, label_type=label_key_for_balancing)\n",
    "#     del training_data_dict # Free up memory\n",
    "\n",
    "#     # --- Create Balanced Training Dataset and DataLoaders ---\n",
    "#     print(\"\\nCreating DataLoaders...\")\n",
    "#     try: balanced_train_dataset = BalancedDataset(balanced_train_data_dict, ACTIVE_STREAMS, label_key=label_key_for_balancing); del balanced_train_data_dict\n",
    "#     except Exception as e: print(f\"Error creating BalancedDataset: {e}\"); raise\n",
    "#     if len(balanced_train_dataset) == 0: raise ValueError(\"Balanced training dataset is empty!\")\n",
    "\n",
    "#     train_loader = DataLoader(balanced_train_dataset, batch_size=BATCH_SIZE, shuffle=True, num_workers=2, pin_memory=True)\n",
    "#     val_loader = DataLoader(val_dataset, batch_size=BATCH_SIZE, shuffle=False, num_workers=2, pin_memory=True)\n",
    "#     print(\"DataLoaders created.\")\n",
    "\n",
    "#     # --- Initialize Model ---\n",
    "#     input_sizes = {}\n",
    "#     for stream in ACTIVE_STREAMS:\n",
    "#         size_constant_name = f'INPUT_SIZE_{stream.upper()}'\n",
    "#         special_cases = {'TRAFFIC_LIGHT': 'TL_STATE', 'STATIC_CONTEXT': 'STATIC', 'EGO_SPEED': 'EGO_SPEED', 'EGO_ACC': 'EGO_ACC', 'EGO_GYRO': 'EGO_GYRO', 'PED_ACTION': 'PED_ACTION', 'PED_LOOK': 'PED_LOOK', 'PED_OCCLUSION': 'PED_OCC'}\n",
    "#         stream_upper_key = stream.upper()\n",
    "#         suffix = special_cases.get(stream_upper_key)\n",
    "#         if suffix: size_constant_name = f'INPUT_SIZE_{suffix}'\n",
    "#         elif stream == 'bbox': size_constant_name = 'INPUT_SIZE_BBOX'\n",
    "#         elif stream == 'pose': size_constant_name = 'INPUT_SIZE_POSE'\n",
    "#         if size_constant_name in globals(): input_sizes[stream] = globals()[size_constant_name]\n",
    "#         else: raise ValueError(f\"Input size constant {size_constant_name} not found for stream {stream}\")\n",
    "\n",
    "#     model = MultiStreamAdaptiveLSTM(\n",
    "#         input_sizes=input_sizes, lstm_hidden_size=LSTM_HIDDEN_SIZE,\n",
    "#         num_lstm_layers=NUM_LSTM_LAYERS, num_classes=NUM_CLASSES, attention_dim=ATTENTION_DIM,\n",
    "#         dropout_rate=DROPOUT_RATE, stream_names=ACTIVE_STREAMS ).to(DEVICE)\n",
    "\n",
    "#     print(\"\\n--- Model Architecture ---\"); print(model); num_params = sum(p.numel() for p in model.parameters() if p.requires_grad); print(f\"Total Trainable Parameters: {num_params:,}\"); print(\"-\" * 30)\n",
    "\n",
    "#     # --- Class Weighting & Optimizer ---\n",
    "#     print(\"\\nCalculating Class Weights for Loss Function...\")\n",
    "#     balanced_train_labels_list = balanced_train_dataset.labels.tolist() # Use balanced list\n",
    "#     count_0 = balanced_train_labels_list.count(0); count_1 = balanced_train_labels_list.count(1)\n",
    "#     total = len(balanced_train_labels_list)\n",
    "#     if total == 0: print(\"Warning: Balanced dataset empty. Use equal weights.\"); weight_0 = 1.0; weight_1 = 1.0\n",
    "#     elif count_0 == 0: print(\"Warning: Class 0 missing. Adjust weights.\"); weight_0 = 0.0; weight_1 = 1.0\n",
    "#     elif count_1 == 0: print(\"Warning: Class 1 missing. Adjust weights.\"); weight_0 = 1.0; weight_1 = 0.0\n",
    "#     else: weight_0 = total / (2.0 * count_0); weight_1 = total / (2.0 * count_1) # Inverse frequency\n",
    "#     class_weights = torch.tensor([weight_0, weight_1], dtype=torch.float32).to(DEVICE)\n",
    "#     print(f\"Using Class Weights for Loss: 0={weight_0:.2f}, 1={weight_1:.2f}\")\n",
    "#     criterion = nn.CrossEntropyLoss(weight=class_weights)\n",
    "#     # criterion = nn.CrossEntropyLoss() # Uncomment to disable class weighting\n",
    "#     optimizer = optim.Adam(model.parameters(), lr=LEARNING_RATE)\n",
    "#     best_val_f1 = -1.0; train_losses, val_losses = [], []; train_accs, val_accs = [], []; val_f1s = []\n",
    "\n",
    "#     # --- Training Loop ---\n",
    "#     print(\"\\n--- Starting Training on Balanced Data---\")\n",
    "#     for epoch in range(NUM_EPOCHS):\n",
    "#         epoch_start_time = time.time()\n",
    "#         train_loss, train_acc = train_epoch(model, train_loader, optimizer, criterion, DEVICE)\n",
    "#         val_metrics = evaluate_epoch(model, val_loader, criterion, DEVICE)\n",
    "#         epoch_duration = time.time() - epoch_start_time\n",
    "#         train_losses.append(train_loss); val_losses.append(val_metrics['loss'])\n",
    "#         train_accs.append(train_acc); val_accs.append(val_metrics['accuracy'])\n",
    "#         val_f1s.append(val_metrics['f1'])\n",
    "#         print(f\"--- Epoch {epoch+1}/{NUM_EPOCHS} ({epoch_duration:.2f} sec) ---\")\n",
    "#         print(f\"  Train Loss: {train_loss:.4f}, Train Acc: {train_acc:.4f}\")\n",
    "#         print(f\"  Val Loss:   {val_metrics['loss']:.4f}, Val Acc:  {val_metrics['accuracy']:.4f}\")\n",
    "#         print(f\"  Val Prec:   {val_metrics['precision']:.4f}, Recall: {val_metrics['recall']:.4f}, F1: {val_metrics['f1']:.4f}\")\n",
    "#         print(f\"  Val AUC:    {val_metrics['auc']:.4f}\")\n",
    "#         if val_metrics['f1'] > best_val_f1:\n",
    "#             best_val_f1 = val_metrics['f1']\n",
    "#             torch.save(model.state_dict(), 'best_model_balanced.pth')\n",
    "#             print(f\"  >> Saved new best model with F1: {best_val_f1:.4f}\")\n",
    "#         print(\"-\" * 30)\n",
    "#     print(\"--- Training Finished ---\")\n",
    "\n",
    "#     # --- Plotting ---\n",
    "#     print(\"\\n--- Plotting Training History ---\")\n",
    "#     fig, axes = plt.subplots(1, 2, figsize=(12, 5))\n",
    "#     axes[0].plot(range(1, NUM_EPOCHS + 1), train_losses, label='Train Loss')\n",
    "#     axes[0].plot(range(1, NUM_EPOCHS + 1), val_losses, label='Val Loss')\n",
    "#     axes[0].set_xlabel('Epoch'); axes[0].set_ylabel('Loss'); axes[0].set_title('Loss Curve'); axes[0].legend(); axes[0].grid(True)\n",
    "#     axes[1].plot(range(1, NUM_EPOCHS + 1), train_accs, label='Train Accuracy')\n",
    "#     axes[1].plot(range(1, NUM_EPOCHS + 1), val_accs, label='Val Accuracy')\n",
    "#     axes[1].plot(range(1, NUM_EPOCHS + 1), val_f1s, label='Val F1-Score', linestyle='--')\n",
    "#     axes[1].set_xlabel('Epoch'); axes[1].set_ylabel('Metric'); axes[1].set_title('Accuracy & F1-Score Curve'); axes[1].legend(); axes[1].grid(True)\n",
    "#     plt.tight_layout(); plt.show()\n",
    "\n",
    "#     # --- Final Evaluation ---\n",
    "#     print(\"\\n--- Final Evaluation on Validation Set using Best Model ---\")\n",
    "#     best_model_path = 'best_model_balanced.pth'\n",
    "#     if os.path.exists(best_model_path):\n",
    "#         print(f\"Loading best saved model '{best_model_path}'\")\n",
    "#         model.load_state_dict(torch.load(best_model_path, map_location=DEVICE))\n",
    "#     else: print(\"Warning: No saved best model found. Evaluating final model.\")\n",
    "#     final_metrics = evaluate_epoch(model, val_loader, criterion, DEVICE)\n",
    "#     true_labels, pred_labels = get_predictions_and_labels(model, val_loader, DEVICE)\n",
    "#     cm = confusion_matrix(true_labels, pred_labels, labels=[0, 1])\n",
    "#     labels_display = ['Not Crossing', 'Crossing']\n",
    "#     print(\"\\n--- Final Performance Metrics ---\")\n",
    "#     print(f\"  Accuracy:  {final_metrics['accuracy']:.4f}\"); print(f\"  Precision: {final_metrics['precision']:.4f}\"); print(f\"  Recall:    {final_metrics['recall']:.4f}\"); print(f\"  F1 Score:  {final_metrics['f1']:.4f}\"); print(f\"  AUC:       {final_metrics['auc']:.4f}\"); print(f\"  Loss:      {final_metrics['loss']:.4f}\")\n",
    "#     print(\"\\n--- Confusion Matrix ---\")\n",
    "#     disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=labels_display); disp.plot(cmap=plt.cm.Blues); plt.title('Confusion Matrix (Validation Set)'); plt.show()\n",
    "\n",
    "#     print(\"\\n--- Script Complete ---\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "c35d39d5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-01T07:47:32.436571Z",
     "iopub.status.busy": "2025-05-01T07:47:32.436352Z",
     "iopub.status.idle": "2025-05-01T07:47:32.444806Z",
     "shell.execute_reply": "2025-05-01T07:47:32.444201Z"
    },
    "papermill": {
     "duration": 0.019202,
     "end_time": "2025-05-01T07:47:32.445881",
     "exception": false,
     "start_time": "2025-05-01T07:47:32.426679",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # --- CELL 1: DATA PREPARATION AND BALANCING (RUN ONCE) ---\n",
    "\n",
    "# import torch\n",
    "# import torch.nn as nn\n",
    "# import torch.optim as optim\n",
    "# from torch.utils.data import Dataset, DataLoader\n",
    "# import xml.etree.ElementTree as ET\n",
    "# import os\n",
    "# import numpy as np\n",
    "# from sklearn.metrics import accuracy_score, precision_recall_fscore_support, roc_auc_score, confusion_matrix, ConfusionMatrixDisplay\n",
    "# from sklearn.preprocessing import StandardScaler  # For standardizing ego features\n",
    "# from tqdm.notebook import tqdm\n",
    "# import random\n",
    "# import math\n",
    "# import zipfile\n",
    "# import cv2\n",
    "# import pandas as pd\n",
    "# import matplotlib.pyplot as plt\n",
    "# import seaborn as sns\n",
    "# import pickle\n",
    "# import time\n",
    "# import sys\n",
    "\n",
    "# # --- Add PIE utilities path if necessary (adjust path) ---\n",
    "# pie_utilities_path = '/kaggle/working/PIE/utilities'\n",
    "# if pie_utilities_path not in sys.path:\n",
    "#     sys.path.insert(0, pie_utilities_path)\n",
    "# try:\n",
    "#     from pie_data import PIE\n",
    "# except ImportError as e:\n",
    "#     print(f\"Warning: Could not import PIE class from {pie_utilities_path}. Database must already exist. Error: {e}\")\n",
    "#     PIE = None\n",
    "\n",
    "# # --- Configuration (Copy relevant parts here) ---\n",
    "# PIE_ROOT_PATH = '/kaggle/working/PIE'\n",
    "# VIDEO_INPUT_DIR = '/kaggle/input'\n",
    "# POSE_DATA_DIR = '/kaggle/input/pose-data/extracted_poses2'\n",
    "# PIE_DATABASE_CACHE_PATH = '/kaggle/input/pie-database/pie_database.pkl'\n",
    "\n",
    "# # --- Define ALL possible streams you might want to experiment with ---\n",
    "# # --- The data extraction will prepare ALL of these ---\n",
    "# ALL_POSSIBLE_STREAMS = [\n",
    "#     'bbox', 'pose', 'ego_speed', 'ego_acc', 'ego_gyro',\n",
    "#     'ped_action', 'ped_look', 'ped_occlusion', 'traffic_light', 'static_context'\n",
    "# ]\n",
    "# print(f\"Data will be prepared for streams: {ALL_POSSIBLE_STREAMS}\")\n",
    "\n",
    "# # --- Model Hyperparameters (Needed for Dataset) ---\n",
    "# SEQ_LEN = 30\n",
    "# PRED_LEN = 1\n",
    "\n",
    "# # --- Input Sizes (Needed for Dataset Error Handling & Definitions) ---\n",
    "# INPUT_SIZE_BBOX = 4\n",
    "# INPUT_SIZE_POSE = 34\n",
    "# INPUT_SIZE_EGO_SPEED = 1\n",
    "# INPUT_SIZE_EGO_ACC = 2\n",
    "# INPUT_SIZE_EGO_GYRO = 1\n",
    "# INPUT_SIZE_PED_ACTION = 1\n",
    "# INPUT_SIZE_PED_LOOK = 1\n",
    "# INPUT_SIZE_PED_OCC = 1\n",
    "# INPUT_SIZE_TL_STATE = 4\n",
    "# NUM_SIGNALIZED_CATS = 4\n",
    "# NUM_INTERSECTION_CATS = 5\n",
    "# NUM_AGE_CATS = 4\n",
    "# NUM_GENDER_CATS = 3\n",
    "# INPUT_SIZE_STATIC = NUM_SIGNALIZED_CATS + NUM_INTERSECTION_CATS + NUM_AGE_CATS + NUM_GENDER_CATS  # = 16\n",
    "\n",
    "# # --- Dataset Splits ---\n",
    "# TRAIN_SETS_STR = ['set01', 'set02', 'set04']\n",
    "# VAL_SETS_STR = ['set05', 'set06']\n",
    "\n",
    "# # --- Mappings ---\n",
    "# TL_STATE_MAP = {'__undefined__': 0, 'red': 1, 'yellow': 2, 'green': 3}\n",
    "# NUM_TL_STATES = len(TL_STATE_MAP)\n",
    "# SIGNALIZED_MAP = {'n/a': 0, 'C': 1, 'S': 2, 'CS': 3}\n",
    "# INTERSECTION_MAP = {'midblock': 0, 'T': 1, 'T-left': 2, 'T-right': 3, 'four-way': 4}\n",
    "# AGE_MAP = {'child': 0, 'young': 1, 'adult': 2, 'senior': 3}\n",
    "# GENDER_MAP = {'n/a': 0, 'female': 1, 'male': 2}\n",
    "\n",
    "# # --- Output Files from this Cell ---\n",
    "# BALANCED_DATA_PKL_PATH = \"/kaggle/working/balanced_train_data.pkl\"\n",
    "# SCALERS_PKL_PATH = \"/kaggle/working/scalers.pkl\"\n",
    "# VAL_SEQUENCES_PKL_PATH = \"/kaggle/working/val_sequences.pkl\"  # Save sequence info for val set\n",
    "\n",
    "# # --- Helper: One-Hot Encoding ---\n",
    "# def to_one_hot(index, num_classes):\n",
    "#     vec = np.zeros(num_classes, dtype=np.float32)\n",
    "#     if 0 <= index < num_classes:\n",
    "#         vec[index] = 1.0\n",
    "#     else:\n",
    "#         vec[0] = 1.0  # Default\n",
    "#     return vec\n",
    "\n",
    "# # --- Balancing Function ---\n",
    "# def balance_samples_count(seq_data, label_type, random_seed=42):\n",
    "#     print('---------------------------------------------------------')\n",
    "#     print(f\"Balancing samples based on '{label_type}' key\")\n",
    "#     if label_type not in seq_data:\n",
    "#         raise KeyError(f\"Label type '{label_type}' not found.\")\n",
    "#     try:\n",
    "#         gt_labels = [lbl[0] for lbl in seq_data[label_type]]\n",
    "#     except (IndexError, TypeError):\n",
    "#         raise ValueError(f\"Labels under '{label_type}' not in expected format [[label_val]].\")\n",
    "#     if not all(l in [0, 1] for l in gt_labels):\n",
    "#         print(f\"Warning: Labels for balancing contain values other than 0 or 1.\")\n",
    "#     num_pos_samples = np.count_nonzero(np.array(gt_labels))\n",
    "#     num_neg_samples = len(gt_labels) - num_pos_samples\n",
    "#     new_seq_data = {}\n",
    "#     if num_neg_samples == num_pos_samples:\n",
    "#         print('Samples already balanced.')\n",
    "#         return seq_data.copy()\n",
    "#     else:\n",
    "#         print(f'Unbalanced: Positive (1): {num_pos_samples} | Negative (0): {num_neg_samples}')\n",
    "#         majority_label = 0 if num_neg_samples > num_pos_samples else 1\n",
    "#         minority_count = min(num_neg_samples, num_pos_samples)\n",
    "#         print(f\"Undersampling majority class ({majority_label}) to match count ({minority_count}).\")\n",
    "#         majority_indices = np.where(np.array(gt_labels) == majority_label)[0]\n",
    "#         minority_indices = np.where(np.array(gt_labels) != majority_label)[0]\n",
    "#         np.random.seed(random_seed)\n",
    "#         keep_majority_indices = np.random.choice(majority_indices, size=minority_count, replace=False)\n",
    "#         final_indices = np.concatenate((minority_indices, keep_majority_indices))\n",
    "#         np.random.shuffle(final_indices)\n",
    "#         for k, v_list in seq_data.items():\n",
    "#             if isinstance(v_list, list) and len(v_list) == len(gt_labels):\n",
    "#                 try:\n",
    "#                     if v_list and isinstance(v_list[0], np.ndarray):\n",
    "#                         v_array = np.array(v_list)\n",
    "#                         new_seq_data[k] = list(v_array[final_indices])\n",
    "#                     else:\n",
    "#                         new_seq_data[k] = [v_list[i] for i in final_indices]\n",
    "#                 except Exception as e:\n",
    "#                     print(f\"Error processing key '{k}' during balancing: {e}. Skip.\")\n",
    "#                     new_seq_data[k] = []\n",
    "#             else:\n",
    "#                 print(f\"Warn: Skipping key '{k}' in balancing.\")\n",
    "#                 new_seq_data[k] = v_list\n",
    "#         if label_type in new_seq_data:\n",
    "#             new_gt_labels = [lbl[0] for lbl in new_seq_data[label_type]]\n",
    "#             final_pos = np.count_nonzero(np.array(new_gt_labels))\n",
    "#             final_neg = len(new_gt_labels) - final_pos\n",
    "#             print(f'Balanced:   Positive (1): {final_pos} | Negative (0): {final_neg}')\n",
    "#         else:\n",
    "#             print(\"Error: Label key lost during balancing.\")\n",
    "#         print('---------------------------------------------------------')\n",
    "#         return new_seq_data\n",
    "\n",
    "# # --- Dataset Class (Needed for initial loading) ---\n",
    "# class PIEDataset(Dataset):\n",
    "#     # --- (Dataset class definition - identical to the previous working version) ---\n",
    "#     # --- (Includes __init__, _load_pose_data, _generate_sequence_list, __len__, __getitem__) ---\n",
    "#     def __init__(self, pie_database, set_names, pose_data_dir, seq_len, pred_len, scalers=None, active_streams=None):\n",
    "#         self.pie_db = pie_database\n",
    "#         self.set_names = set_names\n",
    "#         self.pose_data_dir = pose_data_dir\n",
    "#         self.seq_len = seq_len\n",
    "#         self.pred_len = pred_len\n",
    "#         self.scalers = scalers or {}\n",
    "#         # Store ALL possible streams; __getitem__ will generate data for all streams.\n",
    "#         self.active_streams = ALL_POSSIBLE_STREAMS  # Generate all streams for potential use\n",
    "#         self.sequences = []\n",
    "#         self.all_pose_data = {}\n",
    "#         self._input_sizes_for_error = self._get_input_sizes_dict()  # Get sizes for all streams\n",
    "#         self._load_pose_data()\n",
    "#         self._generate_sequence_list()\n",
    "#         if not self.sequences:\n",
    "#             raise ValueError(f\"Dataset init failed: No sequences for {self.set_names}\")\n",
    "\n",
    "#     def _get_input_sizes_dict(self):\n",
    "#         input_sizes = {}\n",
    "#         special_cases = {\n",
    "#             'TRAFFIC_LIGHT': 'TL_STATE',\n",
    "#             'STATIC_CONTEXT': 'STATIC',\n",
    "#             'EGO_SPEED': 'EGO_SPEED',\n",
    "#             'EGO_ACC': 'EGO_ACC',\n",
    "#             'EGO_GYRO': 'EGO_GYRO',\n",
    "#             'PED_ACTION': 'PED_ACTION',\n",
    "#             'PED_LOOK': 'PED_LOOK',\n",
    "#             'PED_OCCLUSION': 'PED_OCC'\n",
    "#         }\n",
    "#         for stream in self.active_streams:\n",
    "#             stream_upper_key = stream.upper()\n",
    "#             if stream_upper_key in special_cases:\n",
    "#                 size_constant_name = f\"INPUT_SIZE_{special_cases[stream_upper_key]}\"\n",
    "#             elif stream == 'bbox':\n",
    "#                 size_constant_name = 'INPUT_SIZE_BBOX'\n",
    "#             elif stream == 'pose':\n",
    "#                 size_constant_name = 'INPUT_SIZE_POSE'\n",
    "#             else:\n",
    "#                 size_constant_name = f\"INPUT_SIZE_{stream.upper()}\"\n",
    "#             if size_constant_name in globals():\n",
    "#                 input_sizes[stream] = globals()[size_constant_name]\n",
    "#             else:\n",
    "#                 input_sizes[stream] = 1\n",
    "#         return input_sizes\n",
    "\n",
    "#     def _load_pose_data(self):\n",
    "#         print(f\"\\nLoading pose data for sets: {self.set_names} from {self.pose_data_dir}\")\n",
    "#         sets_loaded_count = 0\n",
    "#         for set_id in tqdm(self.set_names, desc=\"Loading Pose Sets\"):\n",
    "#             self.all_pose_data[set_id] = {}\n",
    "#             pose_set_path = os.path.join(self.pose_data_dir, set_id)\n",
    "#             if not os.path.isdir(pose_set_path):\n",
    "#                 print(f\"Warn: Pose dir missing for {set_id} at {pose_set_path}\")\n",
    "#                 continue\n",
    "#             pkl_files_in_set = [f for f in os.listdir(pose_set_path)\n",
    "#                                 if f.startswith(f\"{set_id}_\") and f.endswith(\"_poses.pkl\")]\n",
    "#             if not pkl_files_in_set:\n",
    "#                 continue\n",
    "#             loaded_video_count = 0\n",
    "#             for pkl_filename in tqdm(pkl_files_in_set, desc=f\"Loading PKLs for {set_id}\", leave=False):\n",
    "#                 pkl_file_path = os.path.join(pose_set_path, pkl_filename)\n",
    "#                 try:\n",
    "#                     with open(pkl_file_path, 'rb') as f:\n",
    "#                         loaded_pkl_content = pickle.load(f)\n",
    "#                     if len(loaded_pkl_content) != 1:\n",
    "#                         continue\n",
    "#                     unique_video_key, video_data = list(loaded_pkl_content.items())[0]\n",
    "#                     video_id = \"_\".join(unique_video_key.split('_')[1:])\n",
    "#                     self.all_pose_data[set_id][video_id] = video_data\n",
    "#                     loaded_video_count += 1\n",
    "#                 except FileNotFoundError:\n",
    "#                     pass\n",
    "#                 except Exception as e:\n",
    "#                     print(f\"Error loading pose PKL {pkl_file_path}: {e}\")\n",
    "#             if loaded_video_count > 0:\n",
    "#                 sets_loaded_count += 1\n",
    "#         print(f\"Finished loading pose data for {sets_loaded_count} sets.\")\n",
    "\n",
    "#     def _generate_sequence_list(self):\n",
    "#         print(f\"Generating sequence list from PIE database for sets: {self.set_names}\")\n",
    "#         sequence_count = 0\n",
    "#         ped_count = 0\n",
    "#         for set_id in tqdm(self.set_names, desc=\"Generating Sequences\"):\n",
    "#             if set_id not in self.pie_db:\n",
    "#                 continue\n",
    "#             for video_id, video_data in self.pie_db[set_id].items():\n",
    "#                 if 'ped_annotations' not in video_data:\n",
    "#                     continue\n",
    "#                 for ped_id, ped_data in video_data['ped_annotations'].items():\n",
    "#                     ped_count += 1\n",
    "#                     if 'frames' not in ped_data or len(ped_data['frames']) < self.seq_len + self.pred_len:\n",
    "#                         continue\n",
    "#                     sorted_frames = sorted(ped_data['frames'])\n",
    "#                     for i in range(len(sorted_frames) - self.seq_len - self.pred_len + 1):\n",
    "#                         start_frame = sorted_frames[i]\n",
    "#                         end_frame_observe = sorted_frames[i + self.seq_len - 1]\n",
    "#                         if end_frame_observe - start_frame != self.seq_len - 1:\n",
    "#                             continue\n",
    "#                         target_frame_actual_idx = i + self.seq_len + self.pred_len - 1\n",
    "#                         if target_frame_actual_idx >= len(sorted_frames):\n",
    "#                             continue\n",
    "#                         target_frame = sorted_frames[target_frame_actual_idx]\n",
    "#                         if target_frame - end_frame_observe != self.pred_len:\n",
    "#                             continue\n",
    "#                         self.sequences.append((set_id, video_id, ped_id, start_frame))\n",
    "#                         sequence_count += 1\n",
    "#         print(f\"Found {sequence_count} valid sequences from {ped_count} pedestrian tracks.\")\n",
    "\n",
    "#     def __len__(self):\n",
    "#         return len(self.sequences)\n",
    "\n",
    "#     def __getitem__(self, idx):\n",
    "#         # Get sequence identifiers\n",
    "#         set_id, video_id, ped_id, start_frame = self.sequences[idx]\n",
    "#         frame_nums = list(range(start_frame, start_frame + self.seq_len))\n",
    "#         target_frame_num = start_frame + self.seq_len + self.pred_len - 1\n",
    "\n",
    "#         video_db = self.pie_db.get(set_id, {}).get(video_id, {})\n",
    "#         ped_db = video_db.get('ped_annotations', {}).get(ped_id, {})\n",
    "#         ego_db = video_db.get('vehicle_annotations', {})\n",
    "#         traffic_db = video_db.get('traffic_annotations', {})\n",
    "#         ped_attributes = ped_db.get('attributes', {})\n",
    "\n",
    "#         # Initialize feature sequences and label\n",
    "#         feature_sequences = {stream: [] for stream in self.active_streams}\n",
    "#         label = 0\n",
    "\n",
    "#         # Determine target label (default is 0 if not found)\n",
    "#         if 'frames' in ped_db and 'behavior' in ped_db and 'cross' in ped_db['behavior']:\n",
    "#             try:\n",
    "#                 target_frame_db_idx = ped_db['frames'].index(target_frame_num)\n",
    "#                 label = ped_db['behavior']['cross'][target_frame_db_idx]\n",
    "#                 if label == -1:\n",
    "#                     label = 0\n",
    "#             except (ValueError, IndexError):\n",
    "#                 pass\n",
    "\n",
    "#         # Static features\n",
    "#         static_vec = np.zeros(INPUT_SIZE_STATIC, dtype=np.float32)\n",
    "#         if 'static_context' in self.active_streams:\n",
    "#             sig_idx = ped_attributes.get('signalized', 0)\n",
    "#             int_idx = ped_attributes.get('intersection', 0)\n",
    "#             age_idx = ped_attributes.get('age', 2)\n",
    "#             gen_idx = ped_attributes.get('gender', 0)\n",
    "#             static_vec = np.concatenate([\n",
    "#                 to_one_hot(sig_idx, NUM_SIGNALIZED_CATS),\n",
    "#                 to_one_hot(int_idx, NUM_INTERSECTION_CATS),\n",
    "#                 to_one_hot(age_idx, NUM_AGE_CATS),\n",
    "#                 to_one_hot(gen_idx, NUM_GENDER_CATS)\n",
    "#             ])\n",
    "#             if static_vec.shape[0] != INPUT_SIZE_STATIC:\n",
    "#                 static_vec = np.zeros(INPUT_SIZE_STATIC, dtype=np.float32)\n",
    "\n",
    "#         # Loop over each frame in the sequence\n",
    "#         for frame_num in frame_nums:\n",
    "#             frame_db_idx = -1\n",
    "#             if 'frames' in ped_db:\n",
    "#                 try:\n",
    "#                     frame_db_idx = ped_db['frames'].index(frame_num)\n",
    "#                 except ValueError:\n",
    "#                     pass\n",
    "#             ego_frame_data = ego_db.get(frame_num, {})\n",
    "\n",
    "#             # 'bbox' stream\n",
    "#             if 'bbox' in self.active_streams:\n",
    "#                 bbox_norm = np.zeros(INPUT_SIZE_BBOX, dtype=np.float32)\n",
    "#                 if frame_db_idx != -1 and 'bbox' in ped_db and len(ped_db['bbox']) > frame_db_idx:\n",
    "#                     try:\n",
    "#                         x1, y1, x2, y2 = ped_db['bbox'][frame_db_idx]\n",
    "#                         img_w = video_db.get('width', 1920)\n",
    "#                         img_h = video_db.get('height', 1080)\n",
    "#                         if img_w > 0 and img_h > 0:\n",
    "#                             cx = ((x1 + x2) / 2) / img_w\n",
    "#                             cy = ((y1 + y2) / 2) / img_h\n",
    "#                             w = (x2 - x1) / img_w\n",
    "#                             h = (y2 - y1) / img_h\n",
    "#                             if w > 0 and h > 0 and 0 <= cx <= 1 and 0 <= cy <= 1:\n",
    "#                                 bbox_norm = np.array([cx, cy, w, h], dtype=np.float32)\n",
    "#                     except Exception:\n",
    "#                         pass\n",
    "#                 feature_sequences['bbox'].append(bbox_norm)\n",
    "\n",
    "#             # 'pose' stream\n",
    "#             if 'pose' in self.active_streams:\n",
    "#                 pose_vector = np.zeros(INPUT_SIZE_POSE, dtype=np.float32)\n",
    "#                 vid_pose_data = self.all_pose_data.get(set_id, {}).get(video_id, {})\n",
    "#                 frame_pose_data = vid_pose_data.get(frame_num, {})\n",
    "#                 loaded_pose = frame_pose_data.get(ped_id)\n",
    "#                 if loaded_pose is not None and isinstance(loaded_pose, np.ndarray) and loaded_pose.shape == (INPUT_SIZE_POSE,):\n",
    "#                     pose_vector = loaded_pose\n",
    "#                 feature_sequences['pose'].append(pose_vector)\n",
    "\n",
    "#             # 'ego_speed' stream\n",
    "#             if 'ego_speed' in self.active_streams:\n",
    "#                 speed = ego_frame_data.get('OBD_speed', 0.0)\n",
    "#                 if speed == 0.0:\n",
    "#                     speed = ego_frame_data.get('GPS_speed', 0.0)\n",
    "#                 speed_scaled = (speed - self.scalers.get('ego_speed_mean', 0.0)) / self.scalers.get('ego_speed_std', 1.0)\n",
    "#                 feature_sequences['ego_speed'].append([speed_scaled])\n",
    "\n",
    "#             # 'ego_acc' stream\n",
    "#             if 'ego_acc' in self.active_streams:\n",
    "#                 accX = ego_frame_data.get('accX', 0.0)\n",
    "#                 accY = ego_frame_data.get('accY', 0.0)\n",
    "#                 accX_scaled = (accX - self.scalers.get('accX_mean', 0.0)) / self.scalers.get('accX_std', 1.0)\n",
    "#                 accY_scaled = (accY - self.scalers.get('accY_mean', 0.0)) / self.scalers.get('accY_std', 1.0)\n",
    "#                 feature_sequences['ego_acc'].append([accX_scaled, accY_scaled])\n",
    "\n",
    "#             # 'ego_gyro' stream\n",
    "#             if 'ego_gyro' in self.active_streams:\n",
    "#                 gyroZ = ego_frame_data.get('gyroZ', 0.0)\n",
    "#                 gyroZ_scaled = (gyroZ - self.scalers.get('gyroZ_mean', 0.0)) / self.scalers.get('gyroZ_std', 1.0)\n",
    "#                 feature_sequences['ego_gyro'].append([gyroZ_scaled])\n",
    "\n",
    "#             # 'ped_action' stream\n",
    "#             if 'ped_action' in self.active_streams:\n",
    "#                 action = 0\n",
    "#                 if frame_db_idx != -1 and 'behavior' in ped_db and 'action' in ped_db['behavior'] and len(ped_db['behavior']['action']) > frame_db_idx:\n",
    "#                     action = ped_db['behavior']['action'][frame_db_idx]\n",
    "#                 feature_sequences['ped_action'].append([float(action)])\n",
    "\n",
    "#             # 'ped_look' stream\n",
    "#             if 'ped_look' in self.active_streams:\n",
    "#                 look = 0\n",
    "#                 if frame_db_idx != -1 and 'behavior' in ped_db and 'look' in ped_db['behavior'] and len(ped_db['behavior']['look']) > frame_db_idx:\n",
    "#                     look = ped_db['behavior']['look'][frame_db_idx]\n",
    "#                 feature_sequences['ped_look'].append([float(look)])\n",
    "\n",
    "#             # 'ped_occlusion' stream\n",
    "#             if 'ped_occlusion' in self.active_streams:\n",
    "#                 occ = 0.0\n",
    "#                 if frame_db_idx != -1 and 'occlusion' in ped_db and len(ped_db['occlusion']) > frame_db_idx:\n",
    "#                     occ_val = ped_db['occlusion'][frame_db_idx]\n",
    "#                     occ = float(occ_val) / 2.0\n",
    "#                 feature_sequences['ped_occlusion'].append([occ])\n",
    "\n",
    "#             # 'traffic_light' stream\n",
    "#             if 'traffic_light' in self.active_streams:\n",
    "#                 state_int = 0\n",
    "#                 for obj_id, obj_data in traffic_db.items():\n",
    "#                     if obj_data.get('obj_class') == 'traffic_light' and 'frames' in obj_data and 'state' in obj_data:\n",
    "#                         try:\n",
    "#                             tl_frame_idx = obj_data['frames'].index(frame_num)\n",
    "#                             state_val = obj_data['state'][tl_frame_idx]\n",
    "#                             if state_val != 0:\n",
    "#                                 state_int = state_val\n",
    "#                                 break\n",
    "#                         except (ValueError, IndexError):\n",
    "#                             continue\n",
    "#                 feature_sequences['traffic_light'].append(to_one_hot(state_int, NUM_TL_STATES))\n",
    "\n",
    "#             # 'static_context' stream\n",
    "#             if 'static_context' in self.active_streams:\n",
    "#                 feature_sequences['static_context'].append(static_vec)\n",
    "\n",
    "#         features = {}\n",
    "#         try:\n",
    "#             for stream_name in self.active_streams:\n",
    "#                 features[stream_name] = torch.tensor(\n",
    "#                     np.array(feature_sequences[stream_name], dtype=np.float32),\n",
    "#                     dtype=torch.float32\n",
    "#                 )\n",
    "#         except Exception as e:\n",
    "#             print(f\"Error converting features idx {idx}: {e}. Return dummy.\")\n",
    "#             features = {\n",
    "#                 name: torch.zeros((self.seq_len, self._input_sizes_for_error.get(name, 1)), dtype=torch.float32)\n",
    "#                 for name in self.active_streams\n",
    "#             }\n",
    "#         return features, torch.tensor(label, dtype=torch.long)\n",
    "\n",
    "# # --- Main Data Prep Execution Block ---\n",
    "# if __name__ == '__main__':\n",
    "\n",
    "#     # --- Generate/Load PIE Database ---\n",
    "#     print(f\"Checking for PIE database cache at: {PIE_DATABASE_CACHE_PATH}\")\n",
    "#     if not os.path.exists(PIE_DATABASE_CACHE_PATH):\n",
    "#         if PIE is None:\n",
    "#             raise ImportError(\"PIE class not imported, cannot generate database.\")\n",
    "#         print(\"PIE database cache not found. Generating...\")\n",
    "#         pie_dataset_interface = PIE(data_path=PIE_ROOT_PATH, regen_database=True)\n",
    "#         pie_database = pie_dataset_interface.generate_database()\n",
    "#         if not pie_database:\n",
    "#             raise RuntimeError(\"Failed to generate PIE database.\")\n",
    "#         print(\"PIE database generated successfully.\")\n",
    "#     else:\n",
    "#         print(\"Loading PIE database from cache...\")\n",
    "#         try:\n",
    "#             with open(PIE_DATABASE_CACHE_PATH, 'rb') as f:\n",
    "#                 pie_database = pickle.load(f)\n",
    "#             print(\"PIE database loaded successfully.\")\n",
    "#         except Exception as e:\n",
    "#             raise RuntimeError(f\"Failed to load PIE database: {e}\")\n",
    "\n",
    "#     # --- Calculate Standardization Parameters ---\n",
    "#     print(\"\\nCalculating standardization parameters from training set...\")\n",
    "#     all_train_ego_speeds = []\n",
    "#     all_train_accX = []\n",
    "#     all_train_accY = []\n",
    "#     all_train_gyroZ = []\n",
    "#     for set_id in TRAIN_SETS_STR:\n",
    "#         if set_id in pie_database:\n",
    "#             for video_id, video_data in pie_database[set_id].items():\n",
    "#                 if 'vehicle_annotations' in video_data:\n",
    "#                     for frame_num, ego_frame_data in video_data['vehicle_annotations'].items():\n",
    "#                         speed = ego_frame_data.get('OBD_speed', 0.0)\n",
    "#                         if speed == 0.0:\n",
    "#                             speed = ego_frame_data.get('GPS_speed', 0.0)\n",
    "#                         all_train_ego_speeds.append(speed)\n",
    "#                         all_train_accX.append(ego_frame_data.get('accX', 0.0))\n",
    "#                         all_train_accY.append(ego_frame_data.get('accY', 0.0))\n",
    "#                         all_train_gyroZ.append(ego_frame_data.get('gyroZ', 0.0))\n",
    "#     scalers = {}\n",
    "#     if all_train_ego_speeds:\n",
    "#         scalers['ego_speed_mean'] = np.mean(all_train_ego_speeds)\n",
    "#         scalers['ego_speed_std'] = np.std(all_train_ego_speeds) if np.std(all_train_ego_speeds) > 1e-6 else 1.0\n",
    "#         print(f\"  Ego Speed: Mean={scalers['ego_speed_mean']:.2f}, Std={scalers['ego_speed_std']:.2f}\")\n",
    "#     if all_train_accX:\n",
    "#         scalers['accX_mean'] = np.mean(all_train_accX)\n",
    "#         scalers['accX_std'] = np.std(all_train_accX) if np.std(all_train_accX) > 1e-6 else 1.0\n",
    "#         scalers['accY_mean'] = np.mean(all_train_accY)\n",
    "#         scalers['accY_std'] = np.std(all_train_accY) if np.std(all_train_accY) > 1e-6 else 1.0\n",
    "#         print(f\"  Ego AccX: Mean={scalers['accX_mean']:.2f}, Std={scalers['accX_std']:.2f}\")\n",
    "#         print(f\"  Ego AccY: Mean={scalers['accY_mean']:.2f}, Std={scalers['accY_std']:.2f}\")\n",
    "#     if all_train_gyroZ:\n",
    "#         scalers['gyroZ_mean'] = np.mean(all_train_gyroZ)\n",
    "#         scalers['gyroZ_std'] = np.std(all_train_gyroZ) if np.std(all_train_gyroZ) > 1e-6 else 1.0\n",
    "#         print(f\"  Ego GyroZ: Mean={scalers['gyroZ_mean']:.2f}, Std={scalers['gyroZ_std']:.2f}\")\n",
    "#     print(\"Standardization parameters calculated.\")\n",
    "\n",
    "#     # --- Initialize FULL Training Dataset ---\n",
    "#     print(\"\\nInitializing full training dataset (for extraction)...\")\n",
    "#     full_train_dataset = PIEDataset(\n",
    "#         pie_database,\n",
    "#         TRAIN_SETS_STR,\n",
    "#         POSE_DATA_DIR,\n",
    "#         SEQ_LEN,\n",
    "#         PRED_LEN,\n",
    "#         scalers,\n",
    "#         ALL_POSSIBLE_STREAMS\n",
    "#     )\n",
    "#     if len(full_train_dataset) == 0:\n",
    "#         raise ValueError(\"Full Train Dataset loading failed.\")\n",
    "\n",
    "#     # --- Prepare and Balance Training Data ---\n",
    "#     print(\"\\nExtracting ALL stream data from training set for balancing...\")\n",
    "#     training_data_dict = {stream: [] for stream in ALL_POSSIBLE_STREAMS}\n",
    "#     training_data_dict['label'] = []\n",
    "#     for i in tqdm(range(len(full_train_dataset)), desc=\"Extracting data\"):\n",
    "#         features, label = full_train_dataset[i]\n",
    "#         for stream_name in ALL_POSSIBLE_STREAMS:\n",
    "#             if stream_name in features:\n",
    "#                 training_data_dict[stream_name].append(features[stream_name].numpy())\n",
    "#             else:\n",
    "#                 print(f\"Warning: Stream {stream_name} missing from dataset output index {i}.\")\n",
    "#                 # Append zeros of correct shape as placeholder\n",
    "#                 size_const = f\"INPUT_SIZE_{stream_name.upper()}\"\n",
    "#                 special_cases = {\n",
    "#                     'TRAFFIC_LIGHT': 'TL_STATE',\n",
    "#                     'STATIC_CONTEXT': 'STATIC',\n",
    "#                     'EGO_SPEED': 'EGO_SPEED',\n",
    "#                     'EGO_ACC': 'EGO_ACC',\n",
    "#                     'EGO_GYRO': 'EGO_GYRO',\n",
    "#                     'PED_ACTION': 'PED_ACTION',\n",
    "#                     'PED_LOOK': 'PED_LOOK',\n",
    "#                     'PED_OCCLUSION': 'PED_OCC'\n",
    "#                 }\n",
    "#                 if stream_name.upper() in special_cases:\n",
    "#                     size_const = f\"INPUT_SIZE_{special_cases[stream_name.upper()]}\"\n",
    "#                 elif stream_name == 'bbox':\n",
    "#                     size_const = 'INPUT_SIZE_BBOX'\n",
    "#                 elif stream_name == 'pose':\n",
    "#                     size_const = 'INPUT_SIZE_POSE'\n",
    "#                 stream_size = globals().get(size_const, 1)\n",
    "#                 training_data_dict[stream_name].append(np.zeros((SEQ_LEN, stream_size), dtype=np.float32))\n",
    "#         training_data_dict['label'].append([label.item()])\n",
    "#     print(f\"Original training samples: {len(training_data_dict['label'])}\")\n",
    "#     del full_train_dataset  # Free memory\n",
    "\n",
    "#     label_key_for_balancing = 'label'\n",
    "#     balanced_train_data_dict = balance_samples_count(training_data_dict, label_type=label_key_for_balancing)\n",
    "#     del training_data_dict  # Free up memory\n",
    "\n",
    "#     # --- Save Balanced Data and Scalers ---\n",
    "#     print(f\"\\nSaving balanced training data to: {BALANCED_DATA_PKL_PATH}\")\n",
    "#     try:\n",
    "#         with open(BALANCED_DATA_PKL_PATH, 'wb') as f:\n",
    "#             pickle.dump(balanced_train_data_dict, f, pickle.HIGHEST_PROTOCOL)\n",
    "#         print(\" -> Balanced data saved.\")\n",
    "#     except Exception as e:\n",
    "#         print(f\"  Error saving balanced data: {e}\")\n",
    "\n",
    "#     print(f\"\\nSaving scalers to: {SCALERS_PKL_PATH}\")\n",
    "#     try:\n",
    "#         with open(SCALERS_PKL_PATH, 'wb') as f:\n",
    "#             pickle.dump(scalers, f, pickle.HIGHEST_PROTOCOL)\n",
    "#         print(\" -> Scalers saved.\")\n",
    "#     except Exception as e:\n",
    "#         print(f\"  Error saving scalers: {e}\")\n",
    "\n",
    "#     # --- Prepare and Save Validation Sequence Info ---\n",
    "#     print(\"\\nInitializing validation dataset (for sequence info)...\")\n",
    "#     # Pass an empty list for streams if only sequence identifiers are needed.\n",
    "#     val_dataset = PIEDataset(pie_database, VAL_SETS_STR, POSE_DATA_DIR, SEQ_LEN, PRED_LEN, scalers, [])\n",
    "#     val_sequences_info = val_dataset.sequences\n",
    "#     del val_dataset\n",
    "\n",
    "#     print(f\"Saving validation sequence info ({len(val_sequences_info)} sequences) to: {VAL_SEQUENCES_PKL_PATH}\")\n",
    "#     try:\n",
    "#         with open(VAL_SEQUENCES_PKL_PATH, 'wb') as f:\n",
    "#             pickle.dump(val_sequences_info, f, pickle.HIGHEST_PROTOCOL)\n",
    "#         print(\" -> Validation sequence info saved.\")\n",
    "#     except Exception as e:\n",
    "#         print(f\" Error saving validation sequence info: {e}\")\n",
    "\n",
    "#     print(\"\\n--- Data Preparation and Balancing Cell Finished ---\")\n",
    "#     print(\"You can now run the next cell for training and evaluation.\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "40a4bf1b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-01T07:47:32.464044Z",
     "iopub.status.busy": "2025-05-01T07:47:32.463843Z",
     "iopub.status.idle": "2025-05-01T07:47:32.468361Z",
     "shell.execute_reply": "2025-05-01T07:47:32.467776Z"
    },
    "papermill": {
     "duration": 0.014987,
     "end_time": "2025-05-01T07:47:32.469543",
     "exception": false,
     "start_time": "2025-05-01T07:47:32.454556",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # --- CELL 2: ABLATION STUDY - MODEL TRAINING AND EVALUATION ---\n",
    "\n",
    "# import torch\n",
    "# import torch.nn as nn\n",
    "# import torch.optim as optim\n",
    "# from torch.utils.data import Dataset, DataLoader\n",
    "# import os\n",
    "# import sys\n",
    "# import numpy as np\n",
    "# import pandas as pd\n",
    "# import pickle\n",
    "# import time\n",
    "# from tqdm.notebook import tqdm\n",
    "# from sklearn.metrics import (\n",
    "#     accuracy_score,\n",
    "#     precision_recall_fscore_support,\n",
    "#     roc_auc_score,\n",
    "#     confusion_matrix,\n",
    "#     ConfusionMatrixDisplay\n",
    "# )\n",
    "# import matplotlib.pyplot as plt\n",
    "# import seaborn as sns\n",
    "\n",
    "# # --- Add PIE utilities path if necessary ---\n",
    "# pie_utilities_path = '/kaggle/working/PIE/utilities'\n",
    "# if pie_utilities_path not in sys.path:\n",
    "#     sys.path.insert(0, pie_utilities_path)\n",
    "\n",
    "# try:\n",
    "#     from pie_data import PIE\n",
    "# except ImportError as e:\n",
    "#     print(f\"Warn: Could not import PIE class: {e}\")\n",
    "#     PIE = None\n",
    "\n",
    "# # --- Configuration ---\n",
    "# PIE_DATABASE_CACHE_PATH = '/kaggle/input/pie-database/pie_database.pkl'\n",
    "# POSE_DATA_DIR = '/kaggle/input/pose-data/extracted_poses2'\n",
    "# VAL_SETS_STR = ['set05', 'set06']\n",
    "\n",
    "# # --- Experiment settings ---\n",
    "# ALL_POSSIBLE_STREAMS = [\n",
    "#     'bbox', 'pose', 'ego_speed', 'ego_acc', 'ego_gyro',\n",
    "#     'ped_action', 'ped_look', 'ped_occlusion', 'traffic_light', 'static_context'\n",
    "# ]\n",
    "\n",
    "# STREAM_COMBINATIONS_TO_TEST = [\n",
    "#     ['bbox'],\n",
    "#     ['bbox', 'ped_action'],\n",
    "#     ['bbox', 'ped_look'],\n",
    "#     ['bbox', 'ego_speed'],\n",
    "#     ['bbox', 'ego_acc'],\n",
    "#     ['bbox', 'ped_action', 'ped_look'],\n",
    "#     ['bbox', 'ego_speed', 'ego_acc'],\n",
    "#     ['bbox', 'ped_action', 'ped_look', 'ego_speed', 'ego_acc'],\n",
    "#     ['bbox', 'ped_action', 'ped_look', 'ego_speed', 'ego_acc', 'traffic_light', 'static_context']\n",
    "# ]\n",
    "\n",
    "# # --- Hyperparameters ---\n",
    "# SEQ_LEN = 30\n",
    "# PRED_LEN = 1\n",
    "\n",
    "# INPUT_SIZE_BBOX = 4\n",
    "# INPUT_SIZE_POSE = 34\n",
    "# INPUT_SIZE_EGO_SPEED = 1\n",
    "# INPUT_SIZE_EGO_ACC = 2\n",
    "# INPUT_SIZE_EGO_GYRO = 1\n",
    "# INPUT_SIZE_PED_ACTION = 1\n",
    "# INPUT_SIZE_PED_LOOK = 1\n",
    "# INPUT_SIZE_PED_OCC = 1\n",
    "# INPUT_SIZE_TL_STATE = 4\n",
    "\n",
    "# NUM_SIGNALIZED_CATS = 4\n",
    "# NUM_INTERSECTION_CATS = 5\n",
    "# NUM_AGE_CATS = 4\n",
    "# NUM_GENDER_CATS = 3\n",
    "# NUM_TRAFFIC_DIR_CATS = 2\n",
    "# LANE_CATEGORIES = {1:0,2:1,3:2,4:3,5:4,6:4,7:4,8:4}\n",
    "# NUM_LANE_CATS = len(set(LANE_CATEGORIES.values()))\n",
    "\n",
    "# INPUT_SIZE_STATIC = (\n",
    "#     NUM_SIGNALIZED_CATS +\n",
    "#     NUM_INTERSECTION_CATS +\n",
    "#     NUM_AGE_CATS +\n",
    "#     NUM_GENDER_CATS +\n",
    "#     NUM_TRAFFIC_DIR_CATS +\n",
    "#     NUM_LANE_CATS\n",
    "# )\n",
    "\n",
    "# LSTM_HIDDEN_SIZE = 256\n",
    "# NUM_LSTM_LAYERS = 2\n",
    "# DROPOUT_RATE = 0.3\n",
    "# NUM_CLASSES = 2\n",
    "# ATTENTION_DIM = 128\n",
    "\n",
    "# LEARNING_RATE = 1e-4\n",
    "# BATCH_SIZE = 32\n",
    "# NUM_EPOCHS = 10\n",
    "# DEVICE = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "\n",
    "# print(f\"Using device: {DEVICE}\")\n",
    "\n",
    "# # --- Paths for data ---\n",
    "# BALANCED_DATA_PKL_PATH = \"/kaggle/working/balanced_train_data.pkl\"\n",
    "# SCALERS_PKL_PATH = \"/kaggle/working/scalers.pkl\"\n",
    "\n",
    "# # --- Helpers, Dataset & Model definitions ---\n",
    "# # (Use the fully corrected versions from Cell 1 and Cell 2 above,\n",
    "# # ensuring no inline semicolons remain and each block is properly indented.)\n",
    "\n",
    "# def to_one_hot(index, num_classes):\n",
    "#     vec = np.zeros(num_classes, dtype=np.float32)\n",
    "#     idx = int(np.clip(index, 0, num_classes - 1))\n",
    "#     vec[idx] = 1.0\n",
    "#     return vec\n",
    "\n",
    "# # ... Paste full corrected definitions for:\n",
    "# #   PIEDataset, BalancedDataset,\n",
    "# #   Attention, MultiStreamAdaptiveLSTM,\n",
    "# #   train_epoch, evaluate_epoch, get_predictions_and_labels ...\n",
    "\n",
    "# # --- Main Ablation Loop ---\n",
    "# if __name__ == '__main__':\n",
    "#     # Load balanced training data and scalers\n",
    "#     try:\n",
    "#         with open(BALANCED_DATA_PKL_PATH, 'rb') as f:\n",
    "#             balanced_train_data_dict = pickle.load(f)\n",
    "#         with open(SCALERS_PKL_PATH, 'rb') as f:\n",
    "#             scalers = pickle.load(f)\n",
    "#     except Exception as e:\n",
    "#         print(f\"Error loading pre-processed data: {e}\")\n",
    "#         sys.exit(1)\n",
    "\n",
    "#     # Load PIE database\n",
    "#     if not os.path.exists(PIE_DATABASE_CACHE_PATH):\n",
    "#         raise FileNotFoundError(\"PIE database cache not found.\")\n",
    "#     with open(PIE_DATABASE_CACHE_PATH, 'rb') as f:\n",
    "#         pie_database = pickle.load(f)\n",
    "\n",
    "#     # Prepare validation dataset once\n",
    "#     val_dataset = PIEDataset(\n",
    "#         pie_database, VAL_SETS_STR, POSE_DATA_DIR,\n",
    "#         SEQ_LEN, PRED_LEN, scalers,\n",
    "#         ALL_POSSIBLE_STREAMS\n",
    "#     )\n",
    "#     val_loader = DataLoader(\n",
    "#         val_dataset, batch_size=BATCH_SIZE,\n",
    "#         shuffle=False, num_workers=2, pin_memory=True\n",
    "#     )\n",
    "\n",
    "#     results_summary = {}\n",
    "\n",
    "#     for streams in STREAM_COMBINATIONS_TO_TEST:\n",
    "#         print(f\"\\n=== Streams: {streams} ===\")\n",
    "#         # Create train dataset for this combo\n",
    "#         train_ds = BalancedDataset(\n",
    "#             balanced_train_data_dict, streams, label_key='label'\n",
    "#         )\n",
    "#         train_loader = DataLoader(\n",
    "#             train_ds, batch_size=BATCH_SIZE,\n",
    "#             shuffle=True, num_workers=2, pin_memory=True\n",
    "#         )\n",
    "\n",
    "#         # Model, optimizer, loss\n",
    "#         input_sizes = {\n",
    "#             s: globals()[f\"INPUT_SIZE_{s.upper()}\"] for s in streams\n",
    "#         }\n",
    "#         model = MultiStreamAdaptiveLSTM(\n",
    "#             input_sizes, LSTM_HIDDEN_SIZE, NUM_LSTM_LAYERS,\n",
    "#             NUM_CLASSES, ATTENTION_DIM, DROPOUT_RATE, streams\n",
    "#         ).to(DEVICE)\n",
    "\n",
    "#         # Class weights\n",
    "#         labels = train_ds.labels.tolist()\n",
    "#         c0 = labels.count(0)\n",
    "#         c1 = labels.count(1)\n",
    "#         tot = len(labels)\n",
    "#         if tot > 0 and c0 and c1:\n",
    "#             w0 = tot / (2*c0)\n",
    "#             w1 = tot / (2*c1)\n",
    "#         else:\n",
    "#             w0 = w1 = 1.0\n",
    "#         criterion = nn.CrossEntropyLoss(weight=torch.tensor([w0,w1]).to(DEVICE))\n",
    "#         optimizer = optim.Adam(model.parameters(), lr=LEARNING_RATE)\n",
    "\n",
    "#         best_val_f1 = -1.0\n",
    "#         best_model_path = None\n",
    "\n",
    "#         for ep in range(NUM_EPOCHS):\n",
    "#             train_epoch(model, train_loader, optimizer, criterion, DEVICE)\n",
    "#             m = evaluate_epoch(model, val_loader, criterion, DEVICE)\n",
    "#             if m['f1'] > best_val_f1:\n",
    "#                 best_val_f1 = m['f1']\n",
    "#                 best_model_path = f\"best_{'_'.join(streams)}_ep{ep+1}.pth\"\n",
    "#                 torch.save(model.state_dict(), best_model_path)\n",
    "\n",
    "#         if best_model_path:\n",
    "#             model.load_state_dict(torch.load(best_model_path, map_location=DEVICE))\n",
    "#         final_m = evaluate_epoch(model, val_loader, criterion, DEVICE)\n",
    "#         results_summary[tuple(streams)] = final_m\n",
    "\n",
    "#     # Print summary\n",
    "#     df = pd.DataFrame.from_dict(results_summary, orient='index')\n",
    "#     df.index = ['+'.join(k) for k in df.index]\n",
    "#     df = df.sort_values('f1', ascending=False)\n",
    "#     print(\"\\nAblation Results:\")\n",
    "#     print(df.to_markdown(floatfmt=\".4f\"))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "42d3f8e9",
   "metadata": {
    "_kg_hide-input": true,
    "execution": {
     "iopub.execute_input": "2025-05-01T07:47:32.488487Z",
     "iopub.status.busy": "2025-05-01T07:47:32.488273Z",
     "iopub.status.idle": "2025-05-01T07:47:32.500480Z",
     "shell.execute_reply": "2025-05-01T07:47:32.499836Z"
    },
    "papermill": {
     "duration": 0.023431,
     "end_time": "2025-05-01T07:47:32.501614",
     "exception": false,
     "start_time": "2025-05-01T07:47:32.478183",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # --- IMPORTS ---\n",
    "# import torch\n",
    "# import torch.nn as nn\n",
    "# import torch.optim as optim\n",
    "# from torch.utils.data import Dataset, DataLoader\n",
    "# import xml.etree.ElementTree as ET\n",
    "# import os\n",
    "# import numpy as np\n",
    "# from sklearn.metrics import (\n",
    "#     accuracy_score,\n",
    "#     precision_recall_fscore_support,\n",
    "#     roc_auc_score,\n",
    "#     confusion_matrix,\n",
    "#     ConfusionMatrixDisplay,\n",
    "# )\n",
    "# from sklearn.preprocessing import StandardScaler\n",
    "# from tqdm.notebook import tqdm\n",
    "# import random\n",
    "# import math\n",
    "# import zipfile\n",
    "# import cv2\n",
    "# import pandas as pd\n",
    "# import matplotlib.pyplot as plt\n",
    "# import seaborn as sns\n",
    "# import pickle\n",
    "# import time\n",
    "# import sys\n",
    "# import gc  # garbage collector for cleanup calls\n",
    "\n",
    "# # --- Add PIE utilities path if necessary (adjust path) ---\n",
    "# pie_utilities_path = '/kaggle/working/PIE/utilities'\n",
    "# if pie_utilities_path not in sys.path:\n",
    "#     sys.path.insert(0, pie_utilities_path)\n",
    "# try:\n",
    "#     from pie_data import PIE\n",
    "# except ImportError as e:\n",
    "#     print(f\"Warning: Could not import PIE class from {pie_utilities_path}. Database must already exist. Error: {e}\")\n",
    "#     PIE = None\n",
    "\n",
    "# # --- Configuration ---\n",
    "# PIE_ROOT_PATH = '/kaggle/working/PIE'\n",
    "# VIDEO_INPUT_DIR = '/kaggle/input'\n",
    "# POSE_DATA_DIR = '/kaggle/input/pose-data/extracted_poses2'\n",
    "# PIE_DATABASE_CACHE_PATH = '/kaggle/input/pie-database/pie_database.pkl'\n",
    "\n",
    "# # --- Define ALL possible streams (used by Dataset class) ---\n",
    "# ALL_POSSIBLE_STREAMS = [\n",
    "#     'bbox', 'pose', 'ego_speed', 'ego_acc', 'ego_gyro',\n",
    "#     'ped_action', 'ped_look', 'ped_occlusion', 'traffic_light', 'static_context'\n",
    "# ]\n",
    "# print(f\"All possible streams: {ALL_POSSIBLE_STREAMS}\")\n",
    "\n",
    "# # --- STREAM COMBINATIONS TO TEST FOR ABLATION STUDY ---\n",
    "\n",
    "# STREAM_COMBINATIONS_TO_TEST = [\n",
    "#     ['bbox', 'ped_action', 'ped_look', 'ego_speed', 'ego_acc'], \n",
    "#     ['traffic_light', 'bbox', 'pose', 'ped_action'],\n",
    "#     ['bbox', 'ped_action', 'ped_look', 'ego_speed', 'ego_acc', 'traffic_light'],\n",
    "#     ['bbox', 'ped_action', 'ped_look', 'ego_speed', 'ego_acc', 'static_context'],\n",
    "#     ['bbox', 'ped_action', 'ped_look', 'ego_speed', 'ego_acc', 'ego_gyro'],\n",
    "#     ['bbox', 'ped_action', 'ped_look', 'ego_speed', 'ego_acc', 'ped_occlusion'],\n",
    "#     ['bbox', 'ped_action', 'ped_look', 'ego_speed', 'ego_acc', 'pose'],\n",
    "#     ['bbox', 'ped_action', 'ped_look', 'ego_speed', 'ego_acc', 'traffic_light', 'static_context'],\n",
    "#     ['bbox', 'ped_action', 'ped_look'], \n",
    "# ]\n",
    "\n",
    "# print(f\"Stream combinations to test: {STREAM_COMBINATIONS_TO_TEST}\")\n",
    "\n",
    "# # --- Model Hyperparameters ---\n",
    "# SEQ_LEN = 30\n",
    "# PRED_LEN = 1\n",
    "\n",
    "# # --- Input Sizes ---\n",
    "# INPUT_SIZE_BBOX = 4\n",
    "# INPUT_SIZE_POSE = 34\n",
    "# INPUT_SIZE_EGO_SPEED = 1\n",
    "# INPUT_SIZE_EGO_ACC = 2\n",
    "# INPUT_SIZE_EGO_GYRO = 1\n",
    "# INPUT_SIZE_PED_ACTION = 1\n",
    "# INPUT_SIZE_PED_LOOK = 1\n",
    "# INPUT_SIZE_PED_OCC = 1\n",
    "# INPUT_SIZE_TL_STATE = 4\n",
    "# NUM_SIGNALIZED_CATS = 4\n",
    "# NUM_INTERSECTION_CATS = 5\n",
    "# NUM_AGE_CATS = 4\n",
    "# NUM_GENDER_CATS = 3\n",
    "# NUM_TRAFFIC_DIR_CATS = 2\n",
    "# LANE_CATEGORIES = {1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 4, 7: 4, 8: 4}\n",
    "# NUM_LANE_CATS = len(set(LANE_CATEGORIES.values()))\n",
    "# INPUT_SIZE_STATIC = (\n",
    "#     NUM_SIGNALIZED_CATS\n",
    "#     + NUM_INTERSECTION_CATS\n",
    "#     + NUM_AGE_CATS\n",
    "#     + NUM_GENDER_CATS\n",
    "#     + NUM_TRAFFIC_DIR_CATS\n",
    "#     + NUM_LANE_CATS\n",
    "# )\n",
    "\n",
    "# LSTM_HIDDEN_SIZE = 256\n",
    "# NUM_LSTM_LAYERS = 2\n",
    "# DROPOUT_RATE = 0.3\n",
    "# NUM_CLASSES = 2\n",
    "# ATTENTION_DIM = 128\n",
    "\n",
    "# # --- Training Hyperparameters ---\n",
    "# LEARNING_RATE = 1e-4\n",
    "# BATCH_SIZE = 32\n",
    "# NUM_EPOCHS = 10\n",
    "# DEVICE = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "# print(f\"Using device: {DEVICE}\")\n",
    "\n",
    "# # --- Dataset Splits ---\n",
    "# TRAIN_SETS_STR = ['set01', 'set02', 'set04']\n",
    "# VAL_SETS_STR = ['set05', 'set06']\n",
    "\n",
    "# # --- Mappings ---\n",
    "# TL_STATE_MAP = {'__undefined__': 0, 'red': 1, 'yellow': 2, 'green': 3}\n",
    "# NUM_TL_STATES = len(TL_STATE_MAP)\n",
    "# SIGNALIZED_MAP = {'n/a': 0, 'C': 1, 'S': 2, 'CS': 3}\n",
    "# INTERSECTION_MAP = {'midblock': 0, 'T': 1, 'T-left': 2, 'T-right': 3, 'four-way': 4}\n",
    "# AGE_MAP = {'child': 0, 'young': 1, 'adult': 2, 'senior': 3}\n",
    "# GENDER_MAP = {'n/a': 0, 'female': 1, 'male': 2}\n",
    "# TRAFFIC_DIR_MAP = {'OW': 0, 'TW': 1}\n",
    "\n",
    "# # --- Output Files (for intermediate balanced data/scalers) ---\n",
    "# BALANCED_DATA_PKL_PATH = \"/kaggle/working/balanced_train_data.pkl\"\n",
    "# SCALERS_PKL_PATH = \"/kaggle/working/scalers.pkl\"\n",
    "\n",
    "\n",
    "# # --- Helper: One-Hot Encoding ---\n",
    "# def to_one_hot(index, num_classes):\n",
    "#     vec = np.zeros(num_classes, dtype=np.float32)\n",
    "#     safe_index = int(np.clip(index, 0, num_classes - 1))\n",
    "#     vec[safe_index] = 1.0\n",
    "#     return vec\n",
    "\n",
    "\n",
    "# # --- Balancing Function ---\n",
    "# def balance_samples_count(seq_data, label_type, random_seed=42):\n",
    "#     print('---------------------------------------------------------')\n",
    "#     print(f\"Balancing samples based on '{label_type}' key\")\n",
    "#     if label_type not in seq_data:\n",
    "#         raise KeyError(f\"Label type '{label_type}' not found.\")\n",
    "#     try:\n",
    "#         gt_labels = [lbl[0] for lbl in seq_data[label_type]]\n",
    "#     except (IndexError, TypeError):\n",
    "#         raise ValueError(f\"Labels under '{label_type}' not in expected format [[label_val]].\")\n",
    "\n",
    "#     if not all(l in [0, 1] for l in gt_labels):\n",
    "#         print(f\"Warning: Labels for balancing contain values other than 0 or 1.\")\n",
    "\n",
    "#     num_pos_samples = np.count_nonzero(np.array(gt_labels))\n",
    "#     num_neg_samples = len(gt_labels) - num_pos_samples\n",
    "#     new_seq_data = {}\n",
    "\n",
    "#     if num_neg_samples == num_pos_samples:\n",
    "#         print('Samples already balanced.')\n",
    "#         return seq_data.copy()\n",
    "#     else:\n",
    "#         print(f'Unbalanced: Positive (1): {num_pos_samples} | Negative (0): {num_neg_samples}')\n",
    "#         majority_label = 0 if num_neg_samples > num_pos_samples else 1\n",
    "#         minority_count = min(num_neg_samples, num_pos_samples)\n",
    "#         print(f\"Undersampling majority class ({majority_label}) to match count ({minority_count}).\")\n",
    "\n",
    "#         majority_indices = np.where(np.array(gt_labels) == majority_label)[0]\n",
    "#         minority_indices = np.where(np.array(gt_labels) != majority_label)[0]\n",
    "#         np.random.seed(random_seed)\n",
    "#         keep_majority_indices = np.random.choice(\n",
    "#             majority_indices, size=minority_count, replace=False\n",
    "#         )\n",
    "#         final_indices = np.concatenate((minority_indices, keep_majority_indices))\n",
    "#         np.random.shuffle(final_indices)\n",
    "\n",
    "#         for k, v_list in seq_data.items():\n",
    "#             if isinstance(v_list, list) and len(v_list) == len(gt_labels):\n",
    "#                 try:\n",
    "#                     if v_list and isinstance(v_list[0], np.ndarray):\n",
    "#                         v_array = np.array(v_list)\n",
    "#                         new_seq_data[k] = list(v_array[final_indices])\n",
    "#                     else:\n",
    "#                         new_seq_data[k] = [v_list[i] for i in final_indices]\n",
    "#                 except Exception as e:\n",
    "#                     print(f\"Error processing key '{k}' during balancing: {e}. Skip.\")\n",
    "#                     new_seq_data[k] = []\n",
    "#             else:\n",
    "#                 print(f\"Warn: Skipping key '{k}' in balancing (not list or len mismatch).\")\n",
    "#                 new_seq_data[k] = v_list\n",
    "\n",
    "#         if label_type in new_seq_data:\n",
    "#             new_gt_labels = [lbl[0] for lbl in new_seq_data[label_type]]\n",
    "#             final_pos = np.count_nonzero(np.array(new_gt_labels))\n",
    "#             final_neg = len(new_gt_labels) - final_pos\n",
    "#             print(f'Balanced:   Positive (1): {final_pos} | Negative (0): {final_neg}')\n",
    "#         else:\n",
    "#             print(\"Error: Label key was lost during balancing process.\")\n",
    "\n",
    "#         print('---------------------------------------------------------')\n",
    "#         return new_seq_data\n",
    "\n",
    "\n",
    "# # --- Dataset Class ---\n",
    "# class PIEDataset(Dataset):\n",
    "#     def __init__(\n",
    "#         self,\n",
    "#         pie_database,\n",
    "#         set_names,\n",
    "#         pose_data_dir,\n",
    "#         seq_len,\n",
    "#         pred_len,\n",
    "#         scalers=None,\n",
    "#         streams_to_generate=None,\n",
    "#     ):\n",
    "#         self.pie_db = pie_database\n",
    "#         self.set_names = set_names\n",
    "#         self.pose_data_dir = pose_data_dir\n",
    "#         self.seq_len = seq_len\n",
    "#         self.pred_len = pred_len\n",
    "#         self.scalers = scalers or {}\n",
    "#         self.streams_to_generate = (\n",
    "#             streams_to_generate or ALL_POSSIBLE_STREAMS\n",
    "#         )  # Streams this instance CAN generate\n",
    "#         self.sequences = []\n",
    "#         self.all_pose_data = {}\n",
    "#         self._input_sizes_for_error = self._get_input_sizes_dict()\n",
    "#         if 'pose' in self.streams_to_generate:\n",
    "#             self._load_pose_data()\n",
    "#         self._generate_sequence_list()\n",
    "#         if not self.sequences:\n",
    "#             raise ValueError(f\"Dataset init failed: No sequences for {self.set_names}\")\n",
    "\n",
    "#     def _get_input_sizes_dict(self):\n",
    "#         input_sizes = {}\n",
    "#         special_cases = {\n",
    "#             'TRAFFIC_LIGHT': 'TL_STATE',\n",
    "#             'STATIC_CONTEXT': 'STATIC',\n",
    "#             'EGO_SPEED': 'EGO_SPEED',\n",
    "#             'EGO_ACC': 'EGO_ACC',\n",
    "#             'EGO_GYRO': 'EGO_GYRO',\n",
    "#             'PED_ACTION': 'PED_ACTION',\n",
    "#             'PED_LOOK': 'PED_LOOK',\n",
    "#             'PED_OCCLUSION': 'PED_OCC',\n",
    "#         }\n",
    "#         for stream in ALL_POSSIBLE_STREAMS:\n",
    "#             size_constant_name = f'INPUT_SIZE_{stream.upper()}'\n",
    "#             stream_upper_key = stream.upper()\n",
    "#             suffix = special_cases.get(stream_upper_key)\n",
    "#             if suffix:\n",
    "#                 size_constant_name = f'INPUT_SIZE_{suffix}'\n",
    "#             elif stream == 'bbox':\n",
    "#                 size_constant_name = 'INPUT_SIZE_BBOX'\n",
    "#             elif stream == 'pose':\n",
    "#                 size_constant_name = 'INPUT_SIZE_POSE'\n",
    "\n",
    "#             input_sizes[stream] = globals().get(size_constant_name, 1)\n",
    "#         return input_sizes\n",
    "\n",
    "#     def _load_pose_data(self):\n",
    "#         print(f\"\\nLoading pose data for sets: {self.set_names} from {self.pose_data_dir}\")\n",
    "#         sets_loaded_count = 0\n",
    "#         for set_id in self.set_names:\n",
    "#             self.all_pose_data[set_id] = {}\n",
    "#             pose_set_path = os.path.join(self.pose_data_dir, set_id)\n",
    "#             if not os.path.isdir(pose_set_path):\n",
    "#                 continue\n",
    "#             pkl_files_in_set = [\n",
    "#                 f\n",
    "#                 for f in os.listdir(pose_set_path)\n",
    "#                 if f.startswith(f\"{set_id}_\") and f.endswith(\"_poses.pkl\")\n",
    "#             ]\n",
    "#             if not pkl_files_in_set:\n",
    "#                 continue\n",
    "#             loaded_video_count = 0\n",
    "#             for pkl_filename in pkl_files_in_set:\n",
    "#                 pkl_file_path = os.path.join(pose_set_path, pkl_filename)\n",
    "#                 try:\n",
    "#                     with open(pkl_file_path, 'rb') as f:\n",
    "#                         loaded_pkl_content = pickle.load(f)\n",
    "#                     if len(loaded_pkl_content) != 1:\n",
    "#                         continue\n",
    "#                     unique_video_key, video_data = list(loaded_pkl_content.items())[0]\n",
    "#                     video_id = \"_\".join(unique_video_key.split(\"_\")[1:])\n",
    "#                     if video_id in self.pie_db.get(set_id, {}):\n",
    "#                         self.all_pose_data[set_id][video_id] = video_data\n",
    "#                         loaded_video_count += 1\n",
    "#                 except FileNotFoundError:\n",
    "#                     pass\n",
    "#                 except Exception as e:\n",
    "#                     print(f\"Error loading pose PKL {pkl_file_path}: {e}\")\n",
    "#             if loaded_video_count > 0:\n",
    "#                 sets_loaded_count += 1\n",
    "#         print(f\"Finished loading pose data for {sets_loaded_count} sets for this Dataset instance.\")\n",
    "\n",
    "#     def _generate_sequence_list(self):\n",
    "#         sequence_count = 0\n",
    "#         for set_id in self.set_names:\n",
    "#             if set_id not in self.pie_db:\n",
    "#                 continue\n",
    "#             for video_id, video_data in self.pie_db[set_id].items():\n",
    "#                 if \"ped_annotations\" not in video_data:\n",
    "#                     continue\n",
    "#                 for ped_id, ped_data in video_data[\"ped_annotations\"].items():\n",
    "#                     if \"frames\" not in ped_data or len(ped_data[\"frames\"]) < self.seq_len + self.pred_len:\n",
    "#                         continue\n",
    "#                     sorted_frames = sorted(ped_data[\"frames\"])\n",
    "#                     for i in range(len(sorted_frames) - self.seq_len - self.pred_len + 1):\n",
    "#                         start_frame = sorted_frames[i]\n",
    "#                         end_frame_observe = sorted_frames[i + self.seq_len - 1]\n",
    "#                         if end_frame_observe - start_frame != self.seq_len - 1:\n",
    "#                             continue\n",
    "#                         target_frame_actual_idx = i + self.seq_len + self.pred_len - 1\n",
    "#                         if target_frame_actual_idx >= len(sorted_frames):\n",
    "#                             continue\n",
    "#                         target_frame = sorted_frames[target_frame_actual_idx]\n",
    "#                         if target_frame - end_frame_observe != self.pred_len:\n",
    "#                             continue\n",
    "#                         self.sequences.append((set_id, video_id, ped_id, start_frame))\n",
    "#                         sequence_count += 1\n",
    "#         print(f\"Dataset initialized with {sequence_count} sequences for sets {self.set_names}.\")\n",
    "\n",
    "#     def __len__(self):\n",
    "#         return len(self.sequences)\n",
    "\n",
    "#     def __getitem__(self, idx):\n",
    "#         set_id, video_id, ped_id, start_frame = self.sequences[idx]\n",
    "#         frame_nums = list(range(start_frame, start_frame + self.seq_len))\n",
    "#         target_frame_num = start_frame + self.seq_len + self.pred_len - 1\n",
    "\n",
    "#         video_db = self.pie_db.get(set_id, {}).get(video_id, {})\n",
    "#         ped_db = video_db.get(\"ped_annotations\", {}).get(ped_id, {})\n",
    "#         ego_db = video_db.get(\"vehicle_annotations\", {})\n",
    "#         traffic_db = video_db.get(\"traffic_annotations\", {})\n",
    "#         ped_attributes = ped_db.get(\"attributes\", {})\n",
    "\n",
    "#         feature_sequences = {s: [] for s in self.streams_to_generate}\n",
    "#         label = 0\n",
    "#         if \"frames\" in ped_db and \"behavior\" in ped_db and \"cross\" in ped_db[\"behavior\"]:\n",
    "#             try:\n",
    "#                 tf_idx = ped_db[\"frames\"].index(target_frame_num)\n",
    "#                 label = ped_db[\"behavior\"][\"cross\"][tf_idx]\n",
    "#                 if label == -1:\n",
    "#                     label = 0\n",
    "#             except (ValueError, IndexError):\n",
    "#                 pass\n",
    "\n",
    "#         static_vec = None\n",
    "#         if \"static_context\" in self.streams_to_generate:\n",
    "#             sig = ped_attributes.get(\"signalized\", 0)\n",
    "#             inter = ped_attributes.get(\"intersection\", 0)\n",
    "#             age = ped_attributes.get(\"age\", 2)\n",
    "#             gen = ped_attributes.get(\"gender\", 0)\n",
    "#             td = int(ped_attributes.get(\"traffic_direction\", 0))\n",
    "#             nl = ped_attributes.get(\"num_lanes\", 2)\n",
    "#             nl_idx = LANE_CATEGORIES.get(nl, list(LANE_CATEGORIES.values())[-1])\n",
    "#             static_features = [\n",
    "#                 to_one_hot(sig, NUM_SIGNALIZED_CATS),\n",
    "#                 to_one_hot(inter, NUM_INTERSECTION_CATS),\n",
    "#                 to_one_hot(age, NUM_AGE_CATS),\n",
    "#                 to_one_hot(gen, NUM_GENDER_CATS),\n",
    "#                 to_one_hot(td, NUM_TRAFFIC_DIR_CATS),\n",
    "#                 to_one_hot(nl_idx, NUM_LANE_CATS),\n",
    "#             ]\n",
    "#             static_vec = np.concatenate(static_features)\n",
    "#             if static_vec.shape[0] != INPUT_SIZE_STATIC:\n",
    "#                 static_vec = np.zeros(INPUT_SIZE_STATIC, dtype=np.float32)\n",
    "\n",
    "#         for frame_num in frame_nums:\n",
    "#             idx_in = -1\n",
    "#             if \"frames\" in ped_db:\n",
    "#                 try:\n",
    "#                     idx_in = ped_db[\"frames\"].index(frame_num)\n",
    "#                 except ValueError:\n",
    "#                     pass\n",
    "#             ego_f = ego_db.get(frame_num, {})\n",
    "\n",
    "#             if \"bbox\" in self.streams_to_generate:\n",
    "#                 bbox_norm = np.zeros(INPUT_SIZE_BBOX, dtype=np.float32)\n",
    "#                 if idx_in != -1 and \"bbox\" in ped_db and len(ped_db[\"bbox\"]) > idx_in:\n",
    "#                     try:\n",
    "#                         x1, y1, x2, y2 = ped_db[\"bbox\"][idx_in]\n",
    "#                         w_img = video_db.get(\"width\", 1920)\n",
    "#                         h_img = video_db.get(\"height\", 1080)\n",
    "#                         if w_img > 0 and h_img > 0:\n",
    "#                             cx = ((x1 + x2) / 2) / w_img\n",
    "#                             cy = ((y1 + y2) / 2) / h_img\n",
    "#                             w = (x2 - x1) / w_img\n",
    "#                             h = (y2 - y1) / h_img\n",
    "#                             if 0 <= cx <= 1 and 0 <= cy <= 1 and w > 0 and h > 0:\n",
    "#                                 bbox_norm = np.array([cx, cy, w, h], dtype=np.float32)\n",
    "#                     except Exception:\n",
    "#                         pass\n",
    "#                 feature_sequences[\"bbox\"].append(bbox_norm)\n",
    "\n",
    "#             if \"pose\" in self.streams_to_generate:\n",
    "#                 pose_v = np.zeros(INPUT_SIZE_POSE, dtype=np.float32)\n",
    "#                 if set_id in self.all_pose_data and video_id in self.all_pose_data[set_id]:\n",
    "#                     pdict = self.all_pose_data[set_id][video_id].get(frame_num, {})\n",
    "#                     lp = pdict.get(ped_id)\n",
    "#                     if isinstance(lp, np.ndarray) and lp.shape == (INPUT_SIZE_POSE,):\n",
    "#                         pose_v = lp\n",
    "#                 feature_sequences[\"pose\"].append(pose_v)\n",
    "\n",
    "#             if \"ego_speed\" in self.streams_to_generate:\n",
    "#                 sp = ego_f.get(\"OBD_speed\", 0.0) or ego_f.get(\"GPS_speed\", 0.0) or 0.0\n",
    "#                 sp_s = (sp - self.scalers.get(\"ego_speed_mean\", 0.0)) / self.scalers.get(\"ego_speed_std\", 1.0)\n",
    "#                 feature_sequences[\"ego_speed\"].append([sp_s])\n",
    "\n",
    "#             if \"ego_acc\" in self.streams_to_generate:\n",
    "#                 ax = ego_f.get(\"accX\", 0.0)\n",
    "#                 ay = ego_f.get(\"accY\", 0.0)\n",
    "#                 ax_s = (ax - self.scalers.get(\"accX_mean\", 0.0)) / self.scalers.get(\"accX_std\", 1.0)\n",
    "#                 ay_s = (ay - self.scalers.get(\"accY_mean\", 0.0)) / self.scalers.get(\"accY_std\", 1.0)\n",
    "#                 feature_sequences[\"ego_acc\"].append([ax_s, ay_s])\n",
    "\n",
    "#             if \"ego_gyro\" in self.streams_to_generate:\n",
    "#                 gz = ego_f.get(\"gyroZ\", 0.0)\n",
    "#                 gz_s = (gz - self.scalers.get(\"gyroZ_mean\", 0.0)) / self.scalers.get(\"gyroZ_std\", 1.0)\n",
    "#                 feature_sequences[\"ego_gyro\"].append([gz_s])\n",
    "\n",
    "#             if \"ped_action\" in self.streams_to_generate:\n",
    "#                 ac = 0\n",
    "#                 if idx_in != -1 and \"behavior\" in ped_db and \"action\" in ped_db[\"behavior\"]:\n",
    "#                     arr = ped_db[\"behavior\"][\"action\"]\n",
    "#                     if len(arr) > idx_in:\n",
    "#                         ac = arr[idx_in]\n",
    "#                 feature_sequences[\"ped_action\"].append([float(ac)])\n",
    "\n",
    "#             if \"ped_look\" in self.streams_to_generate:\n",
    "#                 lk = 0\n",
    "#                 if idx_in != -1 and \"behavior\" in ped_db and \"look\" in ped_db[\"behavior\"]:\n",
    "#                     arr = ped_db[\"behavior\"][\"look\"]\n",
    "#                     if len(arr) > idx_in:\n",
    "#                         lk = arr[idx_in]\n",
    "#                 feature_sequences[\"ped_look\"].append([float(lk)])\n",
    "\n",
    "#             if \"ped_occlusion\" in self.streams_to_generate:\n",
    "#                 oc = 0.0\n",
    "#                 if idx_in != -1 and \"occlusion\" in ped_db:\n",
    "#                     arr = ped_db[\"occlusion\"]\n",
    "#                     if len(arr) > idx_in:\n",
    "#                         oc = float(arr[idx_in]) / 2.0\n",
    "#                 feature_sequences[\"ped_occlusion\"].append([oc])\n",
    "\n",
    "#             if \"traffic_light\" in self.streams_to_generate:\n",
    "#                 st = 0\n",
    "#                 for obj_id, od in traffic_db.items():\n",
    "#                     if od.get(\"obj_class\") == \"traffic_light\" and \"frames\" in od and \"state\" in od:\n",
    "#                         try:\n",
    "#                             fi = od[\"frames\"].index(frame_num)\n",
    "#                             sv = od[\"state\"][fi]\n",
    "#                             if sv != 0:\n",
    "#                                 st = sv\n",
    "#                                 break\n",
    "#                         except (ValueError, IndexError):\n",
    "#                             continue\n",
    "#                 feature_sequences[\"traffic_light\"].append(to_one_hot(st, NUM_TL_STATES))\n",
    "\n",
    "#             if \"static_context\" in self.streams_to_generate:\n",
    "#                 feature_sequences[\"static_context\"].append(\n",
    "#                     static_vec\n",
    "#                     if static_vec is not None\n",
    "#                     else np.zeros(INPUT_SIZE_STATIC, dtype=np.float32)\n",
    "#                 )\n",
    "\n",
    "#         # Convert lists to tensors\n",
    "#         features = {}\n",
    "#         try:\n",
    "#             for sn in self.streams_to_generate:\n",
    "#                 arr = np.array(feature_sequences[sn], dtype=np.float32)\n",
    "#                 features[sn] = torch.tensor(arr, dtype=torch.float32)\n",
    "#         except Exception as e:\n",
    "#             print(f\"Error converting features idx {idx}: {e}. Return dummy.\")\n",
    "#             features = {\n",
    "#                 name: torch.zeros(\n",
    "#                     (self.seq_len, self._input_sizes_for_error.get(name, 1)),\n",
    "#                     dtype=torch.float32,\n",
    "#                 )\n",
    "#                 for name in self.streams_to_generate\n",
    "#             }\n",
    "\n",
    "#         return features, torch.tensor(label, dtype=torch.long)\n",
    "\n",
    "\n",
    "# # --- Wrapper Dataset for Balanced Data ---\n",
    "# class BalancedDataset(Dataset):\n",
    "#     def __init__(self, data_dict, active_streams, label_key='label'):\n",
    "#         self.active_streams = active_streams\n",
    "#         self.label_key = label_key\n",
    "#         if label_key not in data_dict or not data_dict[label_key]:\n",
    "#             raise ValueError(f\"Label key '{label_key}' missing/empty.\")\n",
    "#         self.num_samples = len(data_dict[label_key])\n",
    "#         if self.num_samples == 0:\n",
    "#             print(\"Warning: BalancedDataset initialized with zero samples.\")\n",
    "#         self.features = {}\n",
    "#         for s in active_streams:\n",
    "#             if s in data_dict and data_dict[s]:\n",
    "#                 self.features[s] = torch.tensor(\n",
    "#                     np.array(data_dict[s]), dtype=torch.float32\n",
    "#                 )\n",
    "#             else:\n",
    "#                 raise KeyError(f\"Stream '{s}' requested but missing/empty in balanced data.\")\n",
    "#         try:\n",
    "#             self.labels = torch.tensor(\n",
    "#                 [lbl[0] for lbl in data_dict[label_key]], dtype=torch.long\n",
    "#             )\n",
    "#         except (IndexError, TypeError) as e:\n",
    "#             raise ValueError(f\"Error converting labels: {e}\")\n",
    "#         for s in active_streams:\n",
    "#             if len(self.features[s]) != self.num_samples:\n",
    "#                 raise ValueError(f\"Len mismatch: Stream '{s}' vs Labels\")\n",
    "\n",
    "#     def __len__(self):\n",
    "#         return self.num_samples\n",
    "\n",
    "#     def __getitem__(self, idx):\n",
    "#         fd = {s: self.features[s][idx] for s in self.active_streams}\n",
    "#         return fd, self.labels[idx]\n",
    "\n",
    "\n",
    "# # --- Model Architecture ---\n",
    "# class Attention(nn.Module):\n",
    "#     def __init__(self, hidden_dim, attention_dim):\n",
    "#         super(Attention, self).__init__()\n",
    "#         self.attention_net = nn.Sequential(\n",
    "#             nn.Linear(hidden_dim, attention_dim),\n",
    "#             nn.Tanh(),\n",
    "#             nn.Linear(attention_dim, 1),\n",
    "#         )\n",
    "\n",
    "#     def forward(self, lstm_output):\n",
    "#         scores = self.attention_net(lstm_output).squeeze(2)\n",
    "#         weights = torch.softmax(scores, dim=1)\n",
    "#         context = torch.sum(lstm_output * weights.unsqueeze(2), dim=1)\n",
    "#         return context, weights\n",
    "\n",
    "\n",
    "# class MultiStreamAdaptiveLSTM(nn.Module):\n",
    "#     def __init__(\n",
    "#         self,\n",
    "#         input_sizes,\n",
    "#         lstm_hidden_size,\n",
    "#         num_lstm_layers,\n",
    "#         num_classes,\n",
    "#         attention_dim,\n",
    "#         dropout_rate,\n",
    "#         stream_names=['bbox', 'pose'],\n",
    "#     ):\n",
    "#         super(MultiStreamAdaptiveLSTM, self).__init__()\n",
    "#         if not stream_names:\n",
    "#             raise ValueError(\"stream_names cannot be empty.\")\n",
    "#         self.stream_names = stream_names\n",
    "#         self.lstms = nn.ModuleDict()\n",
    "#         self.attentions = nn.ModuleDict()\n",
    "#         print(f\"Initializing model with streams: {self.stream_names}\")\n",
    "#         for name in stream_names:\n",
    "#             if name not in input_sizes:\n",
    "#                 raise KeyError(f\"Input size for stream '{name}' not provided.\")\n",
    "#             insize = input_sizes[name]\n",
    "#             print(f\"  - Adding stream '{name}' with input size {insize}\")\n",
    "#             self.lstms[name] = nn.LSTM(\n",
    "#                 insize,\n",
    "#                 lstm_hidden_size,\n",
    "#                 num_lstm_layers,\n",
    "#                 batch_first=True,\n",
    "#                 dropout=dropout_rate if num_lstm_layers > 1 else 0,\n",
    "#                 bidirectional=True,\n",
    "#             )\n",
    "#             self.attentions[name] = Attention(lstm_hidden_size * 2, attention_dim)\n",
    "#         nf = lstm_hidden_size * 2 * len(stream_names)\n",
    "#         print(f\"  Combined feature dimension: {nf}\")\n",
    "#         self.dropout = nn.Dropout(dropout_rate)\n",
    "#         interm = max(num_classes * 4, nf // 2)\n",
    "#         self.fc1 = nn.Linear(nf, interm)\n",
    "#         self.relu = nn.ReLU()\n",
    "#         self.fc2 = nn.Linear(interm, num_classes)\n",
    "\n",
    "#     def forward(self, x):\n",
    "#         ctxs = []\n",
    "#         for name in self.stream_names:\n",
    "#             if name not in x:\n",
    "#                 print(f\"Warning: Stream '{name}' expected but missing.\")\n",
    "#                 continue\n",
    "#             out, _ = self.lstms[name](x[name])\n",
    "#             ctx, _ = self.attentions[name](out)\n",
    "#             ctxs.append(ctx)\n",
    "#         if not ctxs:\n",
    "#             raise RuntimeError(\"No stream outputs generated.\")\n",
    "#         f = torch.cat(ctxs, dim=1)\n",
    "#         y = self.dropout(f)\n",
    "#         y = self.relu(self.fc1(y))\n",
    "#         y = self.dropout(y)\n",
    "#         return self.fc2(y)\n",
    "\n",
    "\n",
    "# # --- Training and Evaluation Functions ---\n",
    "# def train_epoch(model, loader, optim, crit, device):\n",
    "#     model.train()\n",
    "#     total, allp, allg = 0.0, [], []\n",
    "#     for feats, labs in tqdm(loader, desc=\"Training\", leave=False):\n",
    "#         inp = {n: feats[n].to(device) for n in model.stream_names if n in feats}\n",
    "#         labs = labs.to(device)\n",
    "#         optim.zero_grad()\n",
    "#         out = model(inp)\n",
    "#         loss = crit(out, labs)\n",
    "#         loss.backward()\n",
    "#         optim.step()\n",
    "#         total += loss.item()\n",
    "#         preds = out.argmax(1).cpu().numpy()\n",
    "#         allp.extend(preds)\n",
    "#         allg.extend(labs.cpu().numpy())\n",
    "#     return total / max(1, len(loader)), accuracy_score(allg, allp)\n",
    "\n",
    "\n",
    "# def evaluate_epoch(model, loader, crit, device):\n",
    "#     model.eval()\n",
    "#     total, allg, allp, allpr = 0.0, [], [], []\n",
    "#     with torch.no_grad():\n",
    "#         for feats, labs in tqdm(loader, desc=\"Evaluating\", leave=False):\n",
    "#             inp = {n: feats[n].to(device) for n in model.stream_names if n in feats}\n",
    "#             labs = labs.to(device)\n",
    "#             out = model(inp)\n",
    "#             loss = crit(out, labs)\n",
    "#             total += loss.item()\n",
    "#             probs = torch.softmax(out, 1).cpu().numpy()\n",
    "#             preds = probs.argmax(1)\n",
    "#             allg.extend(labs.cpu().numpy())\n",
    "#             allp.extend(preds)\n",
    "#             allpr.extend(probs)\n",
    "#     allg = np.array(allg)\n",
    "#     allp = np.array(allp)\n",
    "#     allpr = np.array(allpr)\n",
    "#     acc = accuracy_score(allg, allp)\n",
    "#     prec, rec, f1, _ = precision_recall_fscore_support(\n",
    "#         allg, allp, average='binary', pos_label=1, zero_division=0\n",
    "#     )\n",
    "#     auc = roc_auc_score(allg, allpr[:, 1]) if len(np.unique(allg)) > 1 else float('nan')\n",
    "#     return {'loss': total / max(1, len(loader)), 'accuracy': acc,\n",
    "#             'precision': prec, 'recall': rec, 'f1': f1, 'auc': auc}\n",
    "\n",
    "\n",
    "# def get_predictions_and_labels(model, loader, device):\n",
    "#     model.eval()\n",
    "#     allg, allp = [], []\n",
    "#     with torch.no_grad():\n",
    "#         for feats, labs in tqdm(loader, desc=\"Generating CM Data\", leave=False):\n",
    "#             inp = {n: feats[n].to(device) for n in model.stream_names if n in feats}\n",
    "#             labs = labs.to(device)\n",
    "#             out = model(inp)\n",
    "#             preds = out.argmax(1)\n",
    "#             allg.extend(labs.cpu().numpy())\n",
    "#             allp.extend(preds.cpu().numpy())\n",
    "#     return np.array(allg), np.array(allp)\n",
    "\n",
    "\n",
    "# # --- Main Execution Block ---\n",
    "# if __name__ == '__main__':\n",
    "#     # --- Step 1: Data Preparation ---\n",
    "#     print(\"--- Running Data Preparation ---\")\n",
    "#     print(f\"Checking for PIE database cache at: {PIE_DATABASE_CACHE_PATH}\")\n",
    "#     if not os.path.exists(PIE_DATABASE_CACHE_PATH):\n",
    "#         if PIE is None:\n",
    "#             raise ImportError(\"PIE class not imported, cannot generate database.\")\n",
    "#         print(\"PIE database cache not found. Generating...\")\n",
    "#         pie_interface = PIE(data_path=PIE_ROOT_PATH, regen_database=True)\n",
    "#         pie_database = pie_interface.generate_database()\n",
    "#         if not pie_database:\n",
    "#             raise RuntimeError(\"Failed to generate PIE database.\")\n",
    "#         print(\"PIE database generated successfully.\")\n",
    "#     else:\n",
    "#         print(\"Loading PIE database from cache...\")\n",
    "#         try:\n",
    "#             with open(PIE_DATABASE_CACHE_PATH, 'rb') as f:\n",
    "#                 pie_database = pickle.load(f)\n",
    "#             print(\"PIE database loaded successfully.\")\n",
    "#         except Exception as e:\n",
    "#             raise RuntimeError(f\"Failed to load PIE database: {e}\")\n",
    "\n",
    "#     # --- Calculate Standardization Parameters ---\n",
    "#     print(\"\\nCalculating standardization parameters from training set...\")\n",
    "#     all_train_ego_speeds, all_train_accX, all_train_accY, all_train_gyroZ = [], [], [], []\n",
    "#     for sid in TRAIN_SETS_STR:\n",
    "#         if sid in pie_database:\n",
    "#             for vid, vdata in pie_database[sid].items():\n",
    "#                 va = vdata.get('vehicle_annotations', {})\n",
    "#                 for fn, ed in va.items():\n",
    "#                     sp = ed.get('OBD_speed', 0.0) or ed.get('GPS_speed', 0.0) or 0.0\n",
    "#                     all_train_ego_speeds.append(sp)\n",
    "#                     all_train_accX.append(ed.get('accX', 0.0))\n",
    "#                     all_train_accY.append(ed.get('accY', 0.0))\n",
    "#                     all_train_gyroZ.append(ed.get('gyroZ', 0.0))\n",
    "#     scalers = {}\n",
    "#     if all_train_ego_speeds:\n",
    "#         scalers['ego_speed_mean'] = np.mean(all_train_ego_speeds)\n",
    "#         scalers['ego_speed_std'] = np.std(all_train_ego_speeds) or 1.0\n",
    "#         print(f\"  Ego Speed: Mean={scalers['ego_speed_mean']:.2f}, Std={scalers['ego_speed_std']:.2f}\")\n",
    "#     if all_train_accX:\n",
    "#         scalers['accX_mean'] = np.mean(all_train_accX)\n",
    "#         scalers['accX_std'] = np.std(all_train_accX) or 1.0\n",
    "#         scalers['accY_mean'] = np.mean(all_train_accY)\n",
    "#         scalers['accY_std'] = np.std(all_train_accY) or 1.0\n",
    "#         print(f\"  Ego AccX: Mean={scalers['accX_mean']:.2f}, Std={scalers['accX_std']:.2f}\")\n",
    "#         print(f\"  Ego AccY: Mean={scalers['accY_mean']:.2f}, Std={scalers['accY_std']:.2f}\")\n",
    "#     if all_train_gyroZ:\n",
    "#         scalers['gyroZ_mean'] = np.mean(all_train_gyroZ)\n",
    "#         scalers['gyroZ_std'] = np.std(all_train_gyroZ) or 1.0\n",
    "#         print(f\"  Ego GyroZ: Mean={scalers['gyroZ_mean']:.2f}, Std={scalers['gyroZ_std']:.2f}\")\n",
    "#     print(\"Standardization parameters calculated.\")\n",
    "\n",
    "#     # --- Initialize FULL Training Dataset ---\n",
    "#     print(\"\\nInitializing full training dataset (for extraction)...\")\n",
    "#     full_train_dataset = PIEDataset(\n",
    "#         pie_database, TRAIN_SETS_STR, POSE_DATA_DIR, SEQ_LEN, PRED_LEN, scalers, ALL_POSSIBLE_STREAMS\n",
    "#     )\n",
    "#     if len(full_train_dataset) == 0:\n",
    "#         raise ValueError(\"Full Train Dataset loading failed.\")\n",
    "\n",
    "#     # --- Prepare and Balance Training Data ---\n",
    "#     print(\"\\nExtracting ALL stream data from training set for balancing...\")\n",
    "#     training_data_dict = {s: [] for s in ALL_POSSIBLE_STREAMS}\n",
    "#     training_data_dict['label'] = []\n",
    "#     for i in tqdm(range(len(full_train_dataset)), desc=\"Extracting data\"):\n",
    "#         feats, lab = full_train_dataset[i]\n",
    "#         for s in ALL_POSSIBLE_STREAMS:\n",
    "#             arr = feats.get(s)\n",
    "#             if arr is not None:\n",
    "#                 training_data_dict[s].append(arr.numpy())\n",
    "#             else:\n",
    "#                 size = full_train_dataset._input_sizes_for_error.get(s, 1)\n",
    "#                 training_data_dict[s].append(np.zeros((SEQ_LEN, size), dtype=np.float32))\n",
    "#         training_data_dict['label'].append([lab.item()])\n",
    "#     print(f\"Original training samples: {len(training_data_dict['label'])}\")\n",
    "#     del full_train_dataset\n",
    "#     gc.collect()\n",
    "\n",
    "#     balanced_train_data_dict = balance_samples_count(\n",
    "#         training_data_dict, label_type='label'\n",
    "#     )\n",
    "#     del training_data_dict\n",
    "#     gc.collect()\n",
    "\n",
    "#     print(f\"\\nSaving balanced training data to: {BALANCED_DATA_PKL_PATH}\")\n",
    "#     with open(BALANCED_DATA_PKL_PATH, 'wb') as f:\n",
    "#         pickle.dump(balanced_train_data_dict, f, pickle.HIGHEST_PROTOCOL)\n",
    "#     print(\" -> Balanced data saved.\")\n",
    "\n",
    "#     print(f\"\\nSaving scalers to: {SCALERS_PKL_PATH}\")\n",
    "#     with open(SCALERS_PKL_PATH, 'wb') as f:\n",
    "#         pickle.dump(scalers, f, pickle.HIGHEST_PROTOCOL)\n",
    "#     print(\" -> Scalers saved.\")\n",
    "\n",
    "#     # --- Clean up and start Step 2 ---\n",
    "#     del pie_database\n",
    "#     gc.collect()\n",
    "\n",
    "#     print(\"\\n--- Data Preparation and Balancing Completed ---\")\n",
    "#     print(\"--- Ablation Study Starting Below ---\")\n",
    "#     print(\"-\" * 70)\n",
    "\n",
    "#     # --- Step 2: Ablation Study ---\n",
    "#     print(f\"\\nLoading balanced training data from: {BALANCED_DATA_PKL_PATH}\")\n",
    "#     print(f\"Loading scalers from: {SCALERS_PKL_PATH}\")\n",
    "#     with open(BALANCED_DATA_PKL_PATH, 'rb') as f:\n",
    "#         balanced_train_data_dict = pickle.load(f)\n",
    "#     with open(SCALERS_PKL_PATH, 'rb') as f:\n",
    "#         scalers = pickle.load(f)\n",
    "#     print(\" -> Pre-processed data loaded successfully.\")\n",
    "\n",
    "#     print(\"\\nLoading PIE database cache for Validation...\")\n",
    "#     with open(PIE_DATABASE_CACHE_PATH, 'rb') as f:\n",
    "#         pie_database = pickle.load(f)\n",
    "#     print(\" -> PIE database loaded successfully.\")\n",
    "\n",
    "#     print(\"\\nInitializing validation dataset...\")\n",
    "#     val_dataset = PIEDataset(\n",
    "#         pie_database, VAL_SETS_STR, POSE_DATA_DIR, SEQ_LEN, PRED_LEN, scalers, ALL_POSSIBLE_STREAMS\n",
    "#     )\n",
    "#     val_loader = DataLoader(\n",
    "#         val_dataset, batch_size=BATCH_SIZE, shuffle=False, num_workers=2, pin_memory=True\n",
    "#     )\n",
    "#     print(\"Validation dataset and loader created.\")\n",
    "#     del pie_database\n",
    "#     gc.collect()\n",
    "\n",
    "#     # --- Ablation Study Loop ---\n",
    "#     results_summary = {}\n",
    "\n",
    "#     for streams in STREAM_COMBINATIONS_TO_TEST:\n",
    "#         key = tuple(sorted(streams))\n",
    "#         print(f\"\\n===== Experiment: Active Streams: {streams} =====\")\n",
    "\n",
    "#         try:\n",
    "#             curr_ds = BalancedDataset(balanced_train_data_dict, streams, label_key='label')\n",
    "#         except Exception as e:\n",
    "#             print(f\"Error creating BalancedDataset: {e}. Skipping.\")\n",
    "#             continue\n",
    "#         train_loader = DataLoader(\n",
    "#             curr_ds, batch_size=BATCH_SIZE, shuffle=True, num_workers=2, pin_memory=True\n",
    "#         )\n",
    "\n",
    "#         print(\"Initializing model...\")\n",
    "#         curr_ins = {}\n",
    "#         special = {\n",
    "#             'TRAFFIC_LIGHT': 'TL_STATE',\n",
    "#             'STATIC_CONTEXT': 'STATIC',\n",
    "#             'EGO_SPEED': 'EGO_SPEED',\n",
    "#             'EGO_ACC': 'EGO_ACC',\n",
    "#             'EGO_GYRO': 'EGO_GYRO',\n",
    "#             'PED_ACTION': 'PED_ACTION',\n",
    "#             'PED_LOOK': 'PED_LOOK',\n",
    "#             'PED_OCCLUSION': 'PED_OCC',\n",
    "#         }\n",
    "#         for s in streams:\n",
    "#             name = f'INPUT_SIZE_{s.upper()}'\n",
    "#             suf = special.get(s.upper(), None)\n",
    "#             if suf:\n",
    "#                 name = f'INPUT_SIZE_{suf}'\n",
    "#             elif s == 'bbox':\n",
    "#                 name = 'INPUT_SIZE_BBOX'\n",
    "#             elif s == 'pose':\n",
    "#                 name = 'INPUT_SIZE_POSE'\n",
    "#             curr_ins[s] = globals()[name]\n",
    "\n",
    "#         model = MultiStreamAdaptiveLSTM(\n",
    "#             input_sizes=curr_ins,\n",
    "#             lstm_hidden_size=LSTM_HIDDEN_SIZE,\n",
    "#             num_lstm_layers=NUM_LSTM_LAYERS,\n",
    "#             num_classes=NUM_CLASSES,\n",
    "#             attention_dim=ATTENTION_DIM,\n",
    "#             dropout_rate=DROPOUT_RATE,\n",
    "#             stream_names=streams,\n",
    "#         ).to(DEVICE)\n",
    "#         print(\n",
    "#             f\"Model Initialized. Trainable Parameters: \"\n",
    "#             f\"{sum(p.numel() for p in model.parameters() if p.requires_grad):,}\"\n",
    "#         )\n",
    "\n",
    "#         labs = curr_ds.labels.tolist()\n",
    "#         c0, c1 = labs.count(0), labs.count(1)\n",
    "#         tot = len(labs)\n",
    "#         if tot == 0:\n",
    "#             w0 = w1 = 1.0\n",
    "#         elif c0 == 0:\n",
    "#             w0, w1 = 0.0, 1.0\n",
    "#         elif c1 == 0:\n",
    "#             w0, w1 = 1.0, 0.0\n",
    "#         else:\n",
    "#             w0, w1 = tot / (2 * c0), tot / (2 * c1)\n",
    "#         cw = torch.tensor([w0, w1], dtype=torch.float32).to(DEVICE)\n",
    "#         crit = nn.CrossEntropyLoss(weight=cw)\n",
    "#         opt = optim.Adam(model.parameters(), lr=LEARNING_RATE)\n",
    "\n",
    "#         best_f1 = -1.0\n",
    "#         best_path = None\n",
    "\n",
    "#         for ep in range(NUM_EPOCHS):\n",
    "#             t_loss, t_acc = train_epoch(model, train_loader, opt, crit, DEVICE)\n",
    "#             vmet = evaluate_epoch(model, val_loader, crit, DEVICE)\n",
    "#             print(\n",
    "#                 f\"Epoch {ep+1}/{NUM_EPOCHS}: \"\n",
    "#                 f\"Train Loss={t_loss:.4f}, Train Acc={t_acc:.4f} | \"\n",
    "#                 f\"Val Loss={vmet['loss']:.4f}, Val Acc={vmet['accuracy']:.4f}, F1={vmet['f1']:.4f}\"\n",
    "#             )\n",
    "#             if vmet['f1'] > best_f1:\n",
    "#                 best_f1 = vmet['f1']\n",
    "#                 path = f\"best_model_{'_'.join(sorted(streams))}_ep{ep+1}.pth\"\n",
    "#                 torch.save(model.state_dict(), path)\n",
    "#                 best_path = path\n",
    "#                 print(f\"  → New best F1, saved to {path}\")\n",
    "\n",
    "#         # final eval\n",
    "#         if best_path:\n",
    "#             model.load_state_dict(torch.load(best_path, map_location=DEVICE))\n",
    "#             final_met = evaluate_epoch(model, val_loader, crit, DEVICE)\n",
    "#         else:\n",
    "#             final_met = vmet\n",
    "\n",
    "#         results_summary[key] = {\n",
    "#             'Best Val F1': best_f1,\n",
    "#             'Final F1': final_met['f1'],\n",
    "#             'Final Precision': final_met['precision'],\n",
    "#             'Final Recall': final_met['recall'],\n",
    "#             'Final Accuracy': final_met['accuracy'],\n",
    "#             'Final AUC': final_met['auc'],\n",
    "#             'Final Loss': final_met['loss'],\n",
    "#         }\n",
    "#         print(f\"Results for {streams}: {results_summary[key]}\")\n",
    "\n",
    "#         del model, opt, crit, train_loader, curr_ds\n",
    "#         gc.collect()\n",
    "#         torch.cuda.empty_cache()\n",
    "#         time.sleep(1)\n",
    "\n",
    "#     # --- Print Summary Table ---\n",
    "#     print(\"\\n--- Ablation Study Summary ---\")\n",
    "#     if results_summary:\n",
    "#         # Filter out keys that are not tuples before creating DataFrame\n",
    "#         valid_results = {k: v for k, v in results_summary.items() if isinstance(k, tuple)}\n",
    "#         if not valid_results:\n",
    "#              print(\"No valid experiment results found in summary dictionary.\")\n",
    "#         else:\n",
    "#             summary_df = pd.DataFrame.from_dict(valid_results, orient='index')\n",
    "#             # Format index - ensure keys are tuples of strings before joining\n",
    "#             summary_df.index = [\", \".join(map(str, k)) for k in summary_df.index]\n",
    "#             cols_order = ['Best Val F1', 'Final F1', 'Final Recall', 'Final Precision', 'Final Accuracy', 'Final AUC', 'Final Loss']\n",
    "#             summary_df = summary_df[[col for col in cols_order if col in summary_df.columns]]\n",
    "#             summary_df = summary_df.sort_values(by='Best Val F1', ascending=False)\n",
    "#             print(summary_df.to_markdown(floatfmt=\".4f\"))\n",
    "#     else:\n",
    "#         print(\"No experiments were completed successfully.\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "c283c0e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-01T07:47:32.520379Z",
     "iopub.status.busy": "2025-05-01T07:47:32.520100Z",
     "iopub.status.idle": "2025-05-01T07:47:32.530011Z",
     "shell.execute_reply": "2025-05-01T07:47:32.529450Z"
    },
    "papermill": {
     "duration": 0.020882,
     "end_time": "2025-05-01T07:47:32.531168",
     "exception": false,
     "start_time": "2025-05-01T07:47:32.510286",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # --- IMPORTS ---------------------------------------------------------------\n",
    "# import torch\n",
    "# import torch.nn as nn\n",
    "# import torch.optim as optim\n",
    "# from torch.utils.data import Dataset, DataLoader        # keep DataLoader around\n",
    "# import xml.etree.ElementTree as ET\n",
    "# import os\n",
    "# import numpy as np\n",
    "# from tqdm.notebook import tqdm                         # progress-bar\n",
    "# import random, math, zipfile, cv2, pandas as pd\n",
    "# import matplotlib.pyplot as plt, seaborn as sns\n",
    "# import pickle, time, sys, gc\n",
    "\n",
    "# # ---------------------------------------------------------------------------\n",
    "# # Optional PIE utilities path (not required for visualisation-only script)\n",
    "# # pie_utilities_path = '/kaggle/working/PIE/utilities'\n",
    "# # if pie_utilities_path not in sys.path:\n",
    "# #     sys.path.insert(0, pie_utilities_path)\n",
    "# # try:\n",
    "# #     from pie_data import PIE\n",
    "# # except ImportError:\n",
    "# #     PIE = None\n",
    "# # ---------------------------------------------------------------------------\n",
    "\n",
    "# # ------------------------------- Configuration -----------------------------\n",
    "# VIDEO_ID_TO_PROCESS = \"video_0001\"\n",
    "# SET_ID_TO_PROCESS   = \"set01\"\n",
    "\n",
    "# # ------------------------------- Paths ------------------------------------\n",
    "# IMAGE_FRAME_DIR         = \"/kaggle/input/sample-images2/Frames\"\n",
    "# PIE_DATABASE_CACHE_PATH = \"/kaggle/input/pie-database/pie_database.pkl\"\n",
    "# SCALERS_PKL_PATH        = \"/kaggle/working/scalers.pkl\"\n",
    "# MODEL_PATH              = (\"/kaggle/input/best_model_ablation/pytorch/default/1/\"\n",
    "#                            \"best_model_bbox_ego_acc_ego_speed_ped_action_ped_look_static_context_ep1.pth\")\n",
    "# OUTPUT_VIDEO_PATH       = f\"/kaggle/working/{SET_ID_TO_PROCESS}_{VIDEO_ID_TO_PROCESS}_predictions.mp4\"\n",
    "\n",
    "# POSE_DATA_DIR = \"/kaggle/input/sample-poses\"   # <-- NEW: required for pose loading\n",
    "# # ---------------------------------------------------------------------------\n",
    "\n",
    "# # *** Define the streams this specific model was trained with ***\n",
    "# MODEL_ACTIVE_STREAMS = [\n",
    "#     \"bbox\",\n",
    "#     \"ego_speed\",\n",
    "#     \"ego_acc\",\n",
    "#     \"ped_action\",\n",
    "#     \"ped_look\",\n",
    "#     \"static_context\",\n",
    "# ]\n",
    "# print(f\"Model uses Active Streams: {MODEL_ACTIVE_STREAMS}\")\n",
    "\n",
    "# # -------------------- Model & dataset hyper-parameters --------------------\n",
    "# SEQ_LEN = 30\n",
    "# PRED_LEN = 1          # prediction at end of sequence\n",
    "\n",
    "# INPUT_SIZE_BBOX       = 4\n",
    "# INPUT_SIZE_POSE       = 34\n",
    "# INPUT_SIZE_EGO_SPEED  = 1\n",
    "# INPUT_SIZE_EGO_ACC    = 2\n",
    "# INPUT_SIZE_EGO_GYRO   = 1\n",
    "# INPUT_SIZE_PED_ACTION = 1\n",
    "# INPUT_SIZE_PED_LOOK   = 1\n",
    "# INPUT_SIZE_PED_OCC    = 1\n",
    "# INPUT_SIZE_TL_STATE   = 4\n",
    "\n",
    "# NUM_SIGNALIZED_CATS   = 4\n",
    "# NUM_INTERSECTION_CATS = 5\n",
    "# NUM_AGE_CATS          = 4\n",
    "# NUM_GENDER_CATS       = 3\n",
    "# NUM_TRAFFIC_DIR_CATS  = 2\n",
    "# LANE_CATEGORIES       = {1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 4, 7: 4, 8: 4}\n",
    "# NUM_LANE_CATS         = len(set(LANE_CATEGORIES.values()))\n",
    "# INPUT_SIZE_STATIC     = (NUM_SIGNALIZED_CATS + NUM_INTERSECTION_CATS + NUM_AGE_CATS\n",
    "#                          + NUM_GENDER_CATS + NUM_TRAFFIC_DIR_CATS + NUM_LANE_CATS)\n",
    "\n",
    "# LSTM_HIDDEN_SIZE = 256\n",
    "# NUM_LSTM_LAYERS  = 2\n",
    "# DROPOUT_RATE     = 0.3\n",
    "# NUM_CLASSES      = 2\n",
    "# ATTENTION_DIM    = 128\n",
    "\n",
    "# DEVICE = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "# print(f\"Using device: {DEVICE}\")\n",
    "\n",
    "# # ----------------------------- label maps ---------------------------------\n",
    "# TL_STATE_MAP    = {\"__undefined__\": 0, \"red\": 1, \"yellow\": 2, \"green\": 3}\n",
    "# NUM_TL_STATES   = len(TL_STATE_MAP)\n",
    "# SIGNALIZED_MAP  = {\"n/a\": 0, \"C\": 1, \"S\": 2, \"CS\": 3}\n",
    "# INTERSECTION_MAP= {\"midblock\": 0, \"T\": 1, \"T-left\": 2, \"T-right\": 3, \"four-way\": 4}\n",
    "# AGE_MAP         = {\"child\": 0, \"young\": 1, \"adult\": 2, \"senior\": 3}\n",
    "# GENDER_MAP      = {\"n/a\": 0, \"female\": 1, \"male\": 2}\n",
    "# TRAFFIC_DIR_MAP = {\"OW\": 0, \"TW\": 1}\n",
    "\n",
    "# # ----------------------------- utilities ----------------------------------\n",
    "# def to_one_hot(index: int, num_classes: int) -> np.ndarray:\n",
    "#     vec = np.zeros(num_classes, dtype=np.float32)\n",
    "#     vec[int(np.clip(index, 0, num_classes - 1))] = 1.0\n",
    "#     return vec\n",
    "\n",
    "# ALL_POSSIBLE_STREAMS = [\n",
    "#     \"bbox\", \"pose\", \"ego_speed\", \"ego_acc\", \"ego_gyro\",\n",
    "#     \"ped_action\", \"ped_look\", \"ped_occlusion\", \"traffic_light\", \"static_context\",\n",
    "# ]\n",
    "\n",
    "# # ==========================================================================#\n",
    "# #                                DATASET                                    #\n",
    "# # ==========================================================================#\n",
    "# class PIEDatasetInference:\n",
    "#     def __init__(self, pie_database: dict, set_names: list[str],\n",
    "#                  pose_data_dir: str, scalers: dict | None = None):\n",
    "#         self.pie_db    = pie_database\n",
    "#         self.set_names = set_names\n",
    "#         self.pose_data_dir = pose_data_dir\n",
    "#         self.scalers   = scalers or {}\n",
    "#         self.all_pose_data = {}\n",
    "#         self._input_sizes_for_error = self._get_input_sizes_dict()\n",
    "#         self._load_pose_data()\n",
    "\n",
    "#     # ----------------------------------------------------------------------\n",
    "#     def _get_input_sizes_dict(self) -> dict[str, int]:\n",
    "#         input_sizes, special = {}, {\n",
    "#             \"TRAFFIC_LIGHT\": \"TL_STATE\",\n",
    "#             \"STATIC_CONTEXT\": \"STATIC\",\n",
    "#             \"EGO_SPEED\": \"EGO_SPEED\",\n",
    "#             \"EGO_ACC\": \"EGO_ACC\",\n",
    "#             \"EGO_GYRO\": \"EGO_GYRO\",\n",
    "#             \"PED_ACTION\": \"PED_ACTION\",\n",
    "#             \"PED_LOOK\": \"PED_LOOK\",\n",
    "#             \"PED_OCCLUSION\": \"PED_OCC\",\n",
    "#         }\n",
    "#         for stream in ALL_POSSIBLE_STREAMS:\n",
    "#             const_name = f\"INPUT_SIZE_{stream.upper()}\"\n",
    "#             suffix     = special.get(stream.upper())\n",
    "#             if suffix:\n",
    "#                 const_name = f\"INPUT_SIZE_{suffix}\"\n",
    "#             elif stream == \"bbox\":\n",
    "#                 const_name = \"INPUT_SIZE_BBOX\"\n",
    "#             elif stream == \"pose\":\n",
    "#                 const_name = \"INPUT_SIZE_POSE\"\n",
    "#             input_sizes[stream] = globals().get(const_name, 1)\n",
    "#         return input_sizes\n",
    "\n",
    "#     # ----------------------------------------------------------------------\n",
    "#     def _load_pose_data(self):\n",
    "#         print(\"Loading pose data (if available)...\")\n",
    "#         sets_loaded = 0\n",
    "#         for set_id in self.set_names:\n",
    "#             self.all_pose_data[set_id] = {}\n",
    "#             pose_set_path = os.path.join(self.pose_data_dir, set_id)\n",
    "#             if not os.path.isdir(pose_set_path):\n",
    "#                 continue\n",
    "\n",
    "#             pkl_files = [f for f in os.listdir(pose_set_path)\n",
    "#                          if f.startswith(f\"{set_id}_\") and f.endswith(\"_poses.pkl\")]\n",
    "\n",
    "#             loaded = 0\n",
    "#             for pkl_name in pkl_files:\n",
    "#                 pkl_path = os.path.join(pose_set_path, pkl_name)\n",
    "#                 try:\n",
    "#                     with open(pkl_path, \"rb\") as f:\n",
    "#                         loaded_pkl = pickle.load(f)\n",
    "#                     if len(loaded_pkl) != 1:\n",
    "#                         continue\n",
    "#                     video_key, video_data = list(loaded_pkl.items())[0]\n",
    "#                     video_id = \"_\".join(video_key.split(\"_\")[1:])\n",
    "#                     if video_id in self.pie_db.get(set_id, {}):\n",
    "#                         self.all_pose_data[set_id][video_id] = video_data\n",
    "#                         loaded += 1\n",
    "#                 except Exception as e:\n",
    "#                     print(f\"Pose load error {pkl_path}: {e}\")\n",
    "#             if loaded:\n",
    "#                 sets_loaded += 1\n",
    "#         print(f\"Finished loading pose data for {sets_loaded} set(s).\")\n",
    "\n",
    "#     # ----------------------------------------------------------------------\n",
    "#     def get_feature_sequence(\n",
    "#         self,\n",
    "#         set_id: str,\n",
    "#         video_id: str,\n",
    "#         ped_id: str,\n",
    "#         end_frame_num: int,\n",
    "#         seq_len: int,\n",
    "#         streams_needed: list[str],\n",
    "#     ):\n",
    "#         \"\"\"Return {stream: tensor[1, seq_len, dim]} or None if invalid.\"\"\"\n",
    "#         frames = list(range(end_frame_num - seq_len + 1, end_frame_num + 1))\n",
    "#         if frames[0] < 0:\n",
    "#             return None\n",
    "\n",
    "#         video_db   = self.pie_db.get(set_id, {}).get(video_id, {})\n",
    "#         ped_db     = video_db.get(\"ped_annotations\", {}).get(ped_id, {})\n",
    "#         ego_db     = video_db.get(\"vehicle_annotations\", {})\n",
    "#         traffic_db = video_db.get(\"traffic_annotations\", {})\n",
    "#         ped_attr   = ped_db.get(\"attributes\", {})\n",
    "\n",
    "#         feats = {s: [] for s in streams_needed}\n",
    "#         valid = True\n",
    "\n",
    "#         # static-context vector (once per sequence)\n",
    "#         static_vec = None\n",
    "#         if \"static_context\" in streams_needed:\n",
    "#             sig_idx = ped_attr.get(\"signalized\", 0)\n",
    "#             int_idx = ped_attr.get(\"intersection\", 0)\n",
    "#             age_idx = ped_attr.get(\"age\", 2)\n",
    "#             gen_idx = ped_attr.get(\"gender\", 0)\n",
    "#             td_idx  = int(ped_attr.get(\"traffic_direction\", 0))\n",
    "#             nl_cat  = LANE_CATEGORIES.get(\n",
    "#                 ped_attr.get(\"num_lanes\", 2),\n",
    "#                 LANE_CATEGORIES[max(LANE_CATEGORIES)],\n",
    "#             )\n",
    "#             static_vec = np.concatenate([\n",
    "#                 to_one_hot(sig_idx, NUM_SIGNALIZED_CATS),\n",
    "#                 to_one_hot(int_idx, NUM_INTERSECTION_CATS),\n",
    "#                 to_one_hot(age_idx, NUM_AGE_CATS),\n",
    "#                 to_one_hot(gen_idx, NUM_GENDER_CATS),\n",
    "#                 to_one_hot(td_idx, NUM_TRAFFIC_DIR_CATS),\n",
    "#                 to_one_hot(nl_cat, NUM_LANE_CATS),\n",
    "#             ])\n",
    "#             if static_vec.size != INPUT_SIZE_STATIC:\n",
    "#                 static_vec = np.zeros(INPUT_SIZE_STATIC, dtype=np.float32)\n",
    "\n",
    "#         # ----------------------- per-frame extraction ----------------------\n",
    "#         for f in frames:\n",
    "#             # index of this frame in pedestrian’s annotation list\n",
    "#             if \"frames\" in ped_db:\n",
    "#                 try:\n",
    "#                     frame_db_idx = ped_db[\"frames\"].index(f)\n",
    "#                 except ValueError:\n",
    "#                     valid = False\n",
    "#                     break\n",
    "#             else:\n",
    "#                 valid = False\n",
    "#                 break\n",
    "\n",
    "#             ego_frame = ego_db.get(f)\n",
    "\n",
    "#             if ego_frame is None and any(s in streams_needed\n",
    "#                                          for s in (\"ego_speed\", \"ego_acc\", \"ego_gyro\")):\n",
    "#                 valid = False\n",
    "#                 break\n",
    "\n",
    "#             # ---------- bbox ----------\n",
    "#             if \"bbox\" in streams_needed:\n",
    "#                 bbox_norm = np.zeros(INPUT_SIZE_BBOX, dtype=np.float32)\n",
    "#                 if \"bbox\" in ped_db and len(ped_db[\"bbox\"]) > frame_db_idx:\n",
    "#                     try:\n",
    "#                         x1, y1, x2, y2 = ped_db[\"bbox\"][frame_db_idx]\n",
    "#                         img_w = video_db.get(\"width\", 1920)\n",
    "#                         img_h = video_db.get(\"height\", 1080)\n",
    "#                         if img_w > 0 and img_h > 0:\n",
    "#                             cx = (x1 + x2) / 2 / img_w\n",
    "#                             cy = (y1 + y2) / 2 / img_h\n",
    "#                             w  = (x2 - x1) / img_w\n",
    "#                             h  = (y2 - y1) / img_h\n",
    "#                             if (\n",
    "#                                 w > 0\n",
    "#                                 and h > 0\n",
    "#                                 and 0 <= cx <= 1\n",
    "#                                 and 0 <= cy <= 1\n",
    "#                             ):\n",
    "#                                 bbox_norm = np.array([cx, cy, w, h], np.float32)\n",
    "#                     except Exception:\n",
    "#                         pass\n",
    "#                 feats[\"bbox\"].append(bbox_norm)\n",
    "\n",
    "#             # ---------- pose ----------\n",
    "#             if \"pose\" in streams_needed:\n",
    "#                 pose_vec = np.zeros(INPUT_SIZE_POSE, dtype=np.float32)\n",
    "#                 vid_pose = self.all_pose_data.get(set_id, {}).get(video_id, {})\n",
    "#                 frame_pose = vid_pose.get(f, {})\n",
    "#                 loaded_pose = frame_pose.get(ped_id)\n",
    "#                 if (loaded_pose is not None\n",
    "#                         and isinstance(loaded_pose, np.ndarray)\n",
    "#                         and loaded_pose.shape == (INPUT_SIZE_POSE,)):\n",
    "#                     pose_vec = loaded_pose\n",
    "#                 feats[\"pose\"].append(pose_vec)\n",
    "\n",
    "#             # ---------- ego streams ----------\n",
    "#             if \"ego_speed\" in streams_needed:\n",
    "#                 speed = ego_frame.get(\"OBD_speed\", 0.0)\n",
    "#                 if speed == 0.0:\n",
    "#                     speed = ego_frame.get(\"GPS_speed\", 0.0)\n",
    "#                 speed_scaled = ((speed - self.scalers.get(\"ego_speed_mean\", 0.0))\n",
    "#                                 / self.scalers.get(\"ego_speed_std\", 1.0))\n",
    "#                 feats[\"ego_speed\"].append([speed_scaled])\n",
    "\n",
    "#             if \"ego_acc\" in streams_needed:\n",
    "#                 acc_x = ego_frame.get(\"accX\", 0.0)\n",
    "#                 acc_y = ego_frame.get(\"accY\", 0.0)\n",
    "#                 feats[\"ego_acc\"].append([\n",
    "#                     (acc_x - self.scalers.get(\"accX_mean\", 0.0))\n",
    "#                     / self.scalers.get(\"accX_std\", 1.0),\n",
    "#                     (acc_y - self.scalers.get(\"accY_mean\", 0.0))\n",
    "#                     / self.scalers.get(\"accY_std\", 1.0),\n",
    "#                 ])\n",
    "\n",
    "#             if \"ego_gyro\" in streams_needed:\n",
    "#                 gyro_z = ego_frame.get(\"gyroZ\", 0.0)\n",
    "#                 gyro_z_scaled = ((gyro_z - self.scalers.get(\"gyroZ_mean\", 0.0))\n",
    "#                                  / self.scalers.get(\"gyroZ_std\", 1.0))\n",
    "#                 feats[\"ego_gyro\"].append([gyro_z_scaled])\n",
    "\n",
    "#             # ---------- pedestrian behaviour ----------\n",
    "#             if \"ped_action\" in streams_needed:\n",
    "#                 action_val = 0\n",
    "#                 if (\n",
    "#                     \"behavior\" in ped_db\n",
    "#                     and \"action\" in ped_db[\"behavior\"]\n",
    "#                     and len(ped_db[\"behavior\"][\"action\"]) > frame_db_idx\n",
    "#                 ):\n",
    "#                     action_val = ped_db[\"behavior\"][\"action\"][frame_db_idx]\n",
    "#                 feats[\"ped_action\"].append([float(action_val)])\n",
    "\n",
    "#             if \"ped_look\" in streams_needed:\n",
    "#                 look_val = 0\n",
    "#                 if (\n",
    "#                     \"behavior\" in ped_db\n",
    "#                     and \"look\" in ped_db[\"behavior\"]\n",
    "#                     and len(ped_db[\"behavior\"][\"look\"]) > frame_db_idx\n",
    "#                 ):\n",
    "#                     look_val = ped_db[\"behavior\"][\"look\"][frame_db_idx]\n",
    "#                 feats[\"ped_look\"].append([float(look_val)])\n",
    "\n",
    "#             if \"ped_occlusion\" in streams_needed:\n",
    "#                 occ = 0.0\n",
    "#                 if \"occlusion\" in ped_db and len(ped_db[\"occlusion\"]) > frame_db_idx:\n",
    "#                     occ_val = ped_db[\"occlusion\"][frame_db_idx]\n",
    "#                     occ = float(occ_val) / 2.0\n",
    "#                 feats[\"ped_occlusion\"].append([occ])\n",
    "\n",
    "#             # ---------- traffic light ----------\n",
    "#             if \"traffic_light\" in streams_needed:\n",
    "#                 state_int = 0\n",
    "#                 for obj_id, obj_data in traffic_db.items():\n",
    "#                     if (\n",
    "#                         obj_data.get(\"obj_class\") == \"traffic_light\"\n",
    "#                         and \"frames\" in obj_data\n",
    "#                         and \"state\" in obj_data\n",
    "#                     ):\n",
    "#                         try:\n",
    "#                             tl_idx   = obj_data[\"frames\"].index(f)\n",
    "#                             state_val = obj_data[\"state\"][tl_idx]\n",
    "#                             if state_val != 0:\n",
    "#                                 state_int = state_val\n",
    "#                                 break\n",
    "#                         except (ValueError, IndexError):\n",
    "#                             continue\n",
    "#                 feats[\"traffic_light\"].append(to_one_hot(state_int, NUM_TL_STATES))\n",
    "\n",
    "#             # ---------- static context ----------\n",
    "#             if \"static_context\" in streams_needed:\n",
    "#                 feats[\"static_context\"].append(\n",
    "#                     static_vec if static_vec is not None\n",
    "#                     else np.zeros(INPUT_SIZE_STATIC, dtype=np.float32)\n",
    "#                 )\n",
    "\n",
    "#         # ------------------------------------------------------------------\n",
    "#         if not valid:\n",
    "#             return None\n",
    "\n",
    "#         try:\n",
    "#             out = {}\n",
    "#             for name in streams_needed:\n",
    "#                 tensor = torch.tensor(\n",
    "#                     np.array(feats[name], dtype=np.float32),\n",
    "#                     dtype=torch.float32,\n",
    "#                 ).unsqueeze(0)                           # add batch dim\n",
    "#                 exp_shape = (1, seq_len,\n",
    "#                              self._input_sizes_for_error.get(name, 1))\n",
    "#                 if tensor.shape != exp_shape:\n",
    "#                     print(f\"Shape mismatch {name}: {tensor.shape} vs {exp_shape}\")\n",
    "#                     return None\n",
    "#                 out[name] = tensor\n",
    "#             return out\n",
    "#         except Exception as e:\n",
    "#             print(f\"Sequence→tensor error: {e}\")\n",
    "#             return None\n",
    "\n",
    "# # ==========================================================================#\n",
    "# #                          MODEL ARCHITECTURE                               #\n",
    "# # ==========================================================================#\n",
    "# class Attention(nn.Module):\n",
    "#     def __init__(self, hidden_dim: int, att_dim: int):\n",
    "#         super().__init__()\n",
    "#         # must be called attention_net so the saved keys match:\n",
    "#         self.attention_net = nn.Sequential(\n",
    "#             nn.Linear(hidden_dim, att_dim),\n",
    "#             nn.Tanh(),\n",
    "#             nn.Linear(att_dim, 1),\n",
    "#         )\n",
    "\n",
    "#     def forward(self, lstm_out: torch.Tensor):\n",
    "#         # lstm_out: [B, T, 2H]\n",
    "#         att_scores  = self.attention_net(lstm_out).squeeze(2)   # [B, T]\n",
    "#         att_weights = torch.softmax(att_scores, dim=1)          # [B, T]\n",
    "#         ctx         = torch.sum(lstm_out * att_weights.unsqueeze(2), dim=1)\n",
    "#         return ctx, att_weights\n",
    "\n",
    "\n",
    "# class MultiStreamAdaptiveLSTM(nn.Module):\n",
    "#     def __init__(\n",
    "#         self,\n",
    "#         input_sizes: dict[str, int],\n",
    "#         lstm_hidden_size: int,\n",
    "#         num_lstm_layers: int,\n",
    "#         num_classes: int,\n",
    "#         attention_dim: int,\n",
    "#         dropout_rate: float,\n",
    "#         stream_names: list[str] | None = None,\n",
    "#     ):\n",
    "#         super().__init__()\n",
    "#         if not stream_names:\n",
    "#             raise ValueError(\"stream_names cannot be empty\")\n",
    "\n",
    "#         self.stream_names = list(stream_names)\n",
    "#         self.lstms       = nn.ModuleDict()\n",
    "#         self.attentions  = nn.ModuleDict()\n",
    "\n",
    "#         for name in self.stream_names:\n",
    "#             if name not in input_sizes:\n",
    "#                 raise KeyError(f\"Missing input size for stream '{name}'\")\n",
    "#             self.lstms[name] = nn.LSTM(\n",
    "#                 input_sizes[name],\n",
    "#                 lstm_hidden_size,\n",
    "#                 num_lstm_layers,\n",
    "#                 batch_first=True,\n",
    "#                 dropout=dropout_rate if num_lstm_layers > 1 else 0.0,\n",
    "#                 bidirectional=True,\n",
    "#             )\n",
    "#             self.attentions[name] = Attention(lstm_hidden_size * 2, attention_dim)\n",
    "\n",
    "#         combined_dim = lstm_hidden_size * 2 * len(self.stream_names)\n",
    "#         inter_dim    = max(num_classes * 4, combined_dim // 2)\n",
    "\n",
    "#         self.dropout = nn.Dropout(dropout_rate)\n",
    "#         self.fc1     = nn.Linear(combined_dim, inter_dim)\n",
    "#         self.relu    = nn.ReLU()\n",
    "#         self.fc2     = nn.Linear(inter_dim, num_classes)\n",
    "\n",
    "#     def forward(self, x_dict: dict[str, torch.Tensor]):\n",
    "#         ctx_list = []\n",
    "#         for name in self.stream_names:\n",
    "#             if name not in x_dict:\n",
    "#                 print(f\"Warning: missing stream '{name}' in forward()\")\n",
    "#                 continue\n",
    "#             lstm_out, _ = self.lstms[name](x_dict[name])\n",
    "#             ctx, _      = self.attentions[name](lstm_out)\n",
    "#             ctx_list.append(ctx)\n",
    "\n",
    "#         if not ctx_list:\n",
    "#             raise RuntimeError(\"No stream outputs generated\")\n",
    "\n",
    "#         fused = torch.cat(ctx_list, dim=1)\n",
    "#         out   = self.dropout(fused)\n",
    "#         out   = self.relu(self.fc1(out))\n",
    "#         out   = self.dropout(out)\n",
    "#         logits= self.fc2(out)\n",
    "#         return logits\n",
    "\n",
    "# # ==========================================================================#\n",
    "# #                              MAIN SCRIPT                                  #\n",
    "# # ==========================================================================#\n",
    "# if __name__ == \"__main__\":\n",
    "\n",
    "#     # --------------------- load PIE database ------------------------------\n",
    "#     print(\"\\nLoading PIE database cache …\")\n",
    "#     if not os.path.exists(PIE_DATABASE_CACHE_PATH):\n",
    "#         raise FileNotFoundError(\"PIE database cache not found.\")\n",
    "#     with open(PIE_DATABASE_CACHE_PATH, \"rb\") as f:\n",
    "#         pie_database = pickle.load(f)\n",
    "#     print(\" -> database loaded.\")\n",
    "\n",
    "#     # --------------------- load scalers -----------------------------------\n",
    "#     print(f\"\\nLoading scalers from {SCALERS_PKL_PATH}\")\n",
    "#     try:\n",
    "#         with open(SCALERS_PKL_PATH, \"rb\") as f:\n",
    "#             scalers = pickle.load(f)\n",
    "#         print(\" -> scalers loaded.\")\n",
    "#     except FileNotFoundError:\n",
    "#         sys.exit(f\"ERROR: Scalers file not found at {SCALERS_PKL_PATH}\")\n",
    "\n",
    "#     # --------------------- helper dataset ---------------------------------\n",
    "#     print(\"\\nInitialising dataset helper …\")\n",
    "#     dataset_helper = PIEDatasetInference(\n",
    "#         pie_database, [SET_ID_TO_PROCESS], POSE_DATA_DIR, scalers\n",
    "#     )\n",
    "#     print(\"Helper dataset ready.\")\n",
    "\n",
    "#     # --------------------- build model ------------------------------------\n",
    "#     print(\"\\nBuilding model …\")\n",
    "#     input_sizes = {}\n",
    "#     special = {\n",
    "#         \"TRAFFIC_LIGHT\": \"TL_STATE\",\n",
    "#         \"STATIC_CONTEXT\": \"STATIC\",\n",
    "#         \"EGO_SPEED\": \"EGO_SPEED\",\n",
    "#         \"EGO_ACC\": \"EGO_ACC\",\n",
    "#         \"EGO_GYRO\": \"EGO_GYRO\",\n",
    "#         \"PED_ACTION\": \"PED_ACTION\",\n",
    "#         \"PED_LOOK\": \"PED_LOOK\",\n",
    "#         \"PED_OCCLUSION\": \"PED_OCC\",\n",
    "#     }\n",
    "#     for s in MODEL_ACTIVE_STREAMS:\n",
    "#         cname = f\"INPUT_SIZE_{s.upper()}\"\n",
    "#         suff  = special.get(s.upper())\n",
    "#         if suff:\n",
    "#             cname = f\"INPUT_SIZE_{suff}\"\n",
    "#         elif s == \"bbox\":\n",
    "#             cname = \"INPUT_SIZE_BBOX\"\n",
    "#         elif s == \"pose\":\n",
    "#             cname = \"INPUT_SIZE_POSE\"\n",
    "#         if cname not in globals():\n",
    "#             raise ValueError(f\"Missing constant {cname}\")\n",
    "#         input_sizes[s] = globals()[cname]\n",
    "\n",
    "#     model = MultiStreamAdaptiveLSTM(\n",
    "#         input_sizes,\n",
    "#         LSTM_HIDDEN_SIZE,\n",
    "#         NUM_LSTM_LAYERS,\n",
    "#         NUM_CLASSES,\n",
    "#         ATTENTION_DIM,\n",
    "#         DROPOUT_RATE,\n",
    "#         MODEL_ACTIVE_STREAMS,\n",
    "#     ).to(DEVICE)\n",
    "\n",
    "#     # --------------------- load weights -----------------------------------\n",
    "#     print(f\"\\nLoading weights from {MODEL_PATH}\")\n",
    "#     if not os.path.exists(MODEL_PATH):\n",
    "#         raise FileNotFoundError(f\"Model file not found: {MODEL_PATH}\")\n",
    "#     model.load_state_dict(torch.load(MODEL_PATH, map_location=DEVICE))\n",
    "#     model.eval()\n",
    "#     print(\" -> model ready.\")\n",
    "\n",
    "#     # --------------------- collect annotated frames -----------------------\n",
    "#     print(f\"\\nScanning annotations for {SET_ID_TO_PROCESS}/{VIDEO_ID_TO_PROCESS} …\")\n",
    "#     ped_ann = (pie_database\n",
    "#                .get(SET_ID_TO_PROCESS, {})\n",
    "#                .get(VIDEO_ID_TO_PROCESS, {})\n",
    "#                .get(\"ped_annotations\", {}))\n",
    "#     if not ped_ann:\n",
    "#         raise ValueError(\"No pedestrian annotations found.\")\n",
    "\n",
    "#     annotated = set()\n",
    "#     for ped_data in ped_ann.values():\n",
    "#         annotated.update(ped_data.get(\"frames\", []))\n",
    "#     frames_sorted = sorted(annotated)\n",
    "#     if not frames_sorted:\n",
    "#         raise ValueError(\"No annotated frames found.\")\n",
    "#     print(f\" -> found {len(frames_sorted)} frames.\")\n",
    "\n",
    "#     # --------------------- inference --------------------------------------\n",
    "#     print(\"\\nRunning inference on annotated frames …\")\n",
    "#     preds_per_frame, error_frames = {}, 0\n",
    "\n",
    "#     with torch.no_grad():\n",
    "#         for fnum in tqdm(frames_sorted, desc=\"Predicting\"):\n",
    "#             preds_per_frame[fnum] = {}\n",
    "#             peds_here = [\n",
    "#                 pid for pid, pdata in ped_ann.items()\n",
    "#                 if fnum in pdata.get(\"frames\", [])\n",
    "#             ]\n",
    "#             for pid in peds_here:\n",
    "#                 seq = dataset_helper.get_feature_sequence(\n",
    "#                     SET_ID_TO_PROCESS,\n",
    "#                     VIDEO_ID_TO_PROCESS,\n",
    "#                     pid,\n",
    "#                     fnum,\n",
    "#                     SEQ_LEN,\n",
    "#                     MODEL_ACTIVE_STREAMS,\n",
    "#                 )\n",
    "#                 if seq is None:\n",
    "#                     preds_per_frame[fnum][pid] = -1\n",
    "#                     continue\n",
    "#                 try:\n",
    "#                     seq = {k: v.to(DEVICE) for k, v in seq.items()}\n",
    "#                     logits = model(seq)\n",
    "#                     prob   = torch.softmax(logits, dim=1)\n",
    "#                     pred   = torch.argmax(prob, dim=1).item()\n",
    "#                     preds_per_frame[fnum][pid] = pred\n",
    "#                 except Exception as e:\n",
    "#                     print(f\"Inference error F{fnum} P{pid}: {e}\")\n",
    "#                     preds_per_frame[fnum][pid] = -1\n",
    "#                     error_frames += 1\n",
    "\n",
    "#     print(f\"Predictions complete. Errors on {error_frames} instances.\")\n",
    "\n",
    "# # -------------------------------------------------------------------------\n",
    "# # ------- Create & write the *annotated-only* video  -----------------------\n",
    "# print(f\"\\nCreating video with annotated frames only → {OUTPUT_VIDEO_PATH}\")\n",
    "\n",
    "# # Use the first annotated frame to get size\n",
    "# first_annotated_idx = frames_sorted[0] - 1        # convert 1-based → 0-based file index\n",
    "# first_frame_path    = os.path.join(\n",
    "#     IMAGE_FRAME_DIR, f\"frame_{first_annotated_idx:05d}.jpg\"\n",
    "# )\n",
    "# sample_img = cv2.imread(first_frame_path)\n",
    "# if sample_img is None:\n",
    "#     raise IOError(f\"Could not read first annotated frame: {first_frame_path}\")\n",
    "# height, width, _ = sample_img.shape\n",
    "# print(f\" -> video size {width}×{height}, total annotated frames {len(frames_sorted)}\")\n",
    "\n",
    "# fourcc = cv2.VideoWriter_fourcc(*\"mp4v\")\n",
    "# fps    = 30                                   # keep whatever FPS you prefer\n",
    "# writer = cv2.VideoWriter(OUTPUT_VIDEO_PATH, fourcc, fps, (width, height))\n",
    "# if not writer.isOpened():\n",
    "#     raise IOError(\"Could not open cv2 VideoWriter\")\n",
    "\n",
    "# # colours\n",
    "# col_nc, col_cr, col_un = (0,255,0), (0,0,255), (255,255,0)\n",
    "\n",
    "# for lookup in tqdm(frames_sorted, desc=\"Writing video\"):\n",
    "#     idx = lookup - 1                          # image file index (0-based)\n",
    "#     img_path = os.path.join(IMAGE_FRAME_DIR, f\"frame_{idx:05d}.jpg\")\n",
    "\n",
    "#     frame = cv2.imread(img_path)\n",
    "#     if frame is None:\n",
    "#         frame = np.zeros((height, width, 3), np.uint8)\n",
    "\n",
    "#     # draw predictions\n",
    "#     preds_here = preds_per_frame.get(lookup, {})\n",
    "#     for pid, bbox in [\n",
    "#         (pid, pdata[\"bbox\"][pdata[\"frames\"].index(lookup)])\n",
    "#         for pid, pdata in ped_ann.items()\n",
    "#         if lookup in pdata.get(\"frames\", [])\n",
    "#     ]:\n",
    "#         pred = preds_here.get(pid, -1)\n",
    "#         colour, label = (col_un, \"Unknown\")\n",
    "#         if pred == 0:\n",
    "#             colour, label = (col_nc, \"Not Crossing\")\n",
    "#         elif pred == 1:\n",
    "#             colour, label = (col_cr, \"Crossing\")\n",
    "\n",
    "#         try:\n",
    "#             x1, y1, x2, y2 = map(int, bbox)\n",
    "#             cv2.rectangle(frame, (x1, y1), (x2, y2), colour, 2)\n",
    "#             cv2.putText(frame, label, (x1, y1 - 10),\n",
    "#                         cv2.FONT_HERSHEY_SIMPLEX, 0.6, colour, 2)\n",
    "#         except Exception:\n",
    "#             pass\n",
    "\n",
    "#     writer.write(frame)\n",
    "\n",
    "# writer.release()\n",
    "# print(f\"\\nAnnotated-only video saved to: {OUTPUT_VIDEO_PATH}\")\n",
    "# # -------------------------------------------------------------------------\n",
    "\n",
    "# print(\"\\n--- Visualisation script finished ---\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "d8dbc6cc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-01T07:47:32.549896Z",
     "iopub.status.busy": "2025-05-01T07:47:32.549690Z",
     "iopub.status.idle": "2025-05-01T08:01:00.109049Z",
     "shell.execute_reply": "2025-05-01T08:01:00.108080Z"
    },
    "papermill": {
     "duration": 807.570214,
     "end_time": "2025-05-01T08:01:00.110400",
     "exception": false,
     "start_time": "2025-05-01T07:47:32.540186",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "--- DATA PREPARATION ---\n",
      "Loading PIE database cache …\n",
      "✓ PIE DB loaded.\n",
      "\n",
      "Computing scalers …\n",
      "Scalers: {'ego_speed_mean': 13.428368358531902, 'ego_speed_std': 13.306451814881573, 'accX_mean': -0.028068299916188515, 'accX_std': 0.07827638994593288, 'accY_mean': -0.5235171297788667, 'accY_std': 0.8514409917161664, 'gyroZ_mean': -0.037905654051963104, 'gyroZ_std': 4.475510697376237}\n",
      "\n",
      "Extracting training sequences (all streams) …\n",
      "Loading pose PKLs …\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "4bcdac5b6f9145c5804439a65b2af505",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "0it [00:00, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "28b53d71e164455982f23fc83ca72360",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "0it [00:00, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "4c89a6a7e14b49e5b592d4b92a8869cb",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "0it [00:00, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enumerating sequences …\n",
      "Total sequences: 333454\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "af5e00aa2c1343efbc0e1f399833619c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "seq:   0%|          | 0/333454 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Raw training samples: 333454\n",
      "Balanced: 1s=54967 | 0s=54967\n",
      "\n",
      "Saving balanced data …\n",
      "✓ /kaggle/working/balanced_train_data.pkl\n",
      "Saving scalers …\n",
      "✓ /kaggle/working/scalers.pkl\n",
      "\n",
      "--- DATA PREPARATION COMPLETE ---\n"
     ]
    }
   ],
   "source": [
    "# -----------------------------------------------------------------------------\n",
    "# CELL 1: DATA PREPARATION & BALANCING  (run once before training)\n",
    "# -----------------------------------------------------------------------------\n",
    "#  This cell:\n",
    "#    1. Loads (or regenerates) the PIE database\n",
    "#    2. Computes per-signal standardisation scalers\n",
    "#    3. Extracts ALL training sequences for every stream\n",
    "#    4. Balances the dataset 50 / 50 on the crossing label\n",
    "#    5. Writes two pickles:\n",
    "#         - /kaggle/working/balanced_train_data.pkl\n",
    "#         - /kaggle/working/scalers.pkl\n",
    "# -----------------------------------------------------------------------------\n",
    "\n",
    "import os\n",
    "import sys\n",
    "import time\n",
    "import pickle\n",
    "import gc\n",
    "from pathlib import Path\n",
    "\n",
    "import cv2                               # used internally by PIE utilities\n",
    "import numpy as np\n",
    "import torch\n",
    "from torch.utils.data import Dataset\n",
    "from tqdm.notebook import tqdm\n",
    "\n",
    "# -----------------------------------------------------------------------------#\n",
    "#                                PIE utilities                                 #\n",
    "# -----------------------------------------------------------------------------#\n",
    "pie_utilities_path = \"/kaggle/working/PIE/utilities\"\n",
    "if pie_utilities_path not in sys.path:\n",
    "    sys.path.insert(0, pie_utilities_path)\n",
    "\n",
    "try:\n",
    "    from pie_data import PIE\n",
    "except ImportError as e:\n",
    "    print(\n",
    "        f\"[WARN] Could not import PIE from {pie_utilities_path}. \"\n",
    "        f\"If the DB cache already exists this is fine.\\n→ {e}\"\n",
    "    )\n",
    "    PIE = None\n",
    "\n",
    "# -----------------------------------------------------------------------------#\n",
    "#                              configuration                                   #\n",
    "# -----------------------------------------------------------------------------#\n",
    "PIE_ROOT_PATH           = \"/kaggle/working/PIE\"\n",
    "POSE_DATA_DIR           = \"/kaggle/input/pose-data/extracted_poses2\"\n",
    "PIE_DATABASE_CACHE_PATH = \"/kaggle/input/pie-database/pie_database.pkl\"\n",
    "\n",
    "TRAIN_SETS_STR = [\"set01\", \"set02\", \"set04\"]\n",
    "\n",
    "BALANCED_DATA_PKL_PATH  = \"/kaggle/working/balanced_train_data.pkl\"\n",
    "SCALERS_PKL_PATH        = \"/kaggle/working/scalers.pkl\"\n",
    "\n",
    "# Streams used throughout the project ----------------------------------------\n",
    "ALL_POSSIBLE_STREAMS = [\n",
    "    \"bbox\",\n",
    "    \"pose\",\n",
    "    \"ego_speed\",\n",
    "    \"ego_acc\",\n",
    "    \"ego_gyro\",\n",
    "    \"ped_action\",\n",
    "    \"ped_look\",\n",
    "    \"ped_occlusion\",\n",
    "    \"traffic_light\",\n",
    "    \"static_context\",\n",
    "]\n",
    "\n",
    "# Feature sizes & categorical constants --------------------------------------\n",
    "SEQ_LEN, PRED_LEN = 30, 1\n",
    "\n",
    "INPUT_SIZE_BBOX       = 4\n",
    "INPUT_SIZE_POSE       = 34\n",
    "INPUT_SIZE_EGO_SPEED  = 1\n",
    "INPUT_SIZE_EGO_ACC    = 2\n",
    "INPUT_SIZE_EGO_GYRO   = 1\n",
    "INPUT_SIZE_PED_ACTION = 1\n",
    "INPUT_SIZE_PED_LOOK   = 1\n",
    "INPUT_SIZE_PED_OCC    = 1\n",
    "INPUT_SIZE_TL_STATE   = 4\n",
    "\n",
    "NUM_SIGNALIZED_CATS   = 4\n",
    "NUM_INTERSECTION_CATS = 5\n",
    "NUM_AGE_CATS          = 4\n",
    "NUM_GENDER_CATS       = 3\n",
    "NUM_TRAFFIC_DIR_CATS  = 2\n",
    "\n",
    "LANE_CATEGORIES = {1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 4, 7: 4, 8: 4}\n",
    "NUM_LANE_CATS   = len(set(LANE_CATEGORIES.values()))\n",
    "\n",
    "INPUT_SIZE_STATIC = (\n",
    "    NUM_SIGNALIZED_CATS\n",
    "    + NUM_INTERSECTION_CATS\n",
    "    + NUM_AGE_CATS\n",
    "    + NUM_GENDER_CATS\n",
    "    + NUM_TRAFFIC_DIR_CATS\n",
    "    + NUM_LANE_CATS\n",
    ")  # → 23\n",
    "\n",
    "TL_STATE_MAP = {\"__undefined__\": 0, \"red\": 1, \"yellow\": 2, \"green\": 3}\n",
    "NUM_TL_STATES = len(TL_STATE_MAP)\n",
    "\n",
    "# -----------------------------------------------------------------------------#\n",
    "#                               helper utils                                   #\n",
    "# -----------------------------------------------------------------------------#\n",
    "\n",
    "\n",
    "def to_one_hot(index: int, num_classes: int) -> np.ndarray:\n",
    "    vec = np.zeros(num_classes, dtype=np.float32)\n",
    "    vec[int(np.clip(index, 0, num_classes - 1))] = 1.0\n",
    "    return vec\n",
    "\n",
    "\n",
    "def balance_samples_count(seq_data: dict, label_key: str, seed: int = 42) -> dict:\n",
    "    \"\"\"Undersample majority class so positive and negative labels are equal.\"\"\"\n",
    "    labels = [lbl[0] for lbl in seq_data[label_key]]\n",
    "    n_pos  = int(np.sum(labels))\n",
    "    n_neg  = len(labels) - n_pos\n",
    "\n",
    "    if n_pos == n_neg:\n",
    "        print(\"Dataset already balanced.\")\n",
    "        return seq_data.copy()\n",
    "\n",
    "    majority_label    = 0 if n_neg > n_pos else 1\n",
    "    minority_count    = min(n_pos, n_neg)\n",
    "    majority_indices  = np.where(np.array(labels) == majority_label)[0]\n",
    "    minority_indices  = np.where(np.array(labels) != majority_label)[0]\n",
    "\n",
    "    rng = np.random.default_rng(seed)\n",
    "    keep_majority = rng.choice(majority_indices, size=minority_count, replace=False)\n",
    "    final_indices = np.concatenate([minority_indices, keep_majority])\n",
    "    rng.shuffle(final_indices)\n",
    "\n",
    "    balanced = {}\n",
    "    for k, v in seq_data.items():\n",
    "        balanced[k] = [v[i] for i in final_indices]\n",
    "\n",
    "    print(f\"Balanced: 1s={minority_count} | 0s={minority_count}\")\n",
    "    return balanced\n",
    "\n",
    "\n",
    "# -----------------------------------------------------------------------------#\n",
    "#                                PIEDataset                                    #\n",
    "# -----------------------------------------------------------------------------#\n",
    "class PIEDataset(Dataset):\n",
    "    \"\"\"\n",
    "    Lightweight dataset that can generate any subset of the PIE feature streams.\n",
    "    \"\"\"\n",
    "\n",
    "    def __init__(\n",
    "        self,\n",
    "        pie_db: dict,\n",
    "        set_names: list[str],\n",
    "        pose_dir: str,\n",
    "        seq_len: int,\n",
    "        pred_len: int,\n",
    "        scalers: dict,\n",
    "        streams_to_generate: list[str],\n",
    "    ):\n",
    "        self.pie_db            = pie_db\n",
    "        self.set_names         = set_names\n",
    "        self.pose_dir          = pose_dir\n",
    "        self.seq_len           = seq_len\n",
    "        self.pred_len          = pred_len\n",
    "        self.scalers           = scalers\n",
    "        self.streams           = streams_to_generate\n",
    "        self._input_sizes      = self._build_input_size_map()\n",
    "        self.all_pose_data     = {}\n",
    "        self.sequences         = []\n",
    "\n",
    "        if \"pose\" in self.streams:\n",
    "            self._load_pose_pkls()\n",
    "        self._enumerate_sequences()\n",
    "\n",
    "    # ------------------------ internal helpers -------------------------------\n",
    "    def _build_input_size_map(self) -> dict:\n",
    "        special = {\n",
    "            \"TRAFFIC_LIGHT\": \"TL_STATE\",\n",
    "            \"STATIC_CONTEXT\": \"STATIC\",\n",
    "            \"EGO_SPEED\": \"EGO_SPEED\",\n",
    "            \"EGO_ACC\": \"EGO_ACC\",\n",
    "            \"EGO_GYRO\": \"EGO_GYRO\",\n",
    "            \"PED_ACTION\": \"PED_ACTION\",\n",
    "            \"PED_LOOK\": \"PED_LOOK\",\n",
    "            \"PED_OCCLUSION\": \"PED_OCC\",\n",
    "        }\n",
    "        sizes = {}\n",
    "        for s in ALL_POSSIBLE_STREAMS:\n",
    "            const = f\"INPUT_SIZE_{special.get(s.upper(), s.upper())}\"\n",
    "            if s == \"bbox\":\n",
    "                const = \"INPUT_SIZE_BBOX\"\n",
    "            elif s == \"pose\":\n",
    "                const = \"INPUT_SIZE_POSE\"\n",
    "            sizes[s] = globals().get(const, 1)\n",
    "        return sizes\n",
    "\n",
    "    def _load_pose_pkls(self):\n",
    "        print(\"Loading pose PKLs …\")\n",
    "        for set_id in self.set_names:\n",
    "            set_dir = Path(self.pose_dir) / set_id\n",
    "            if not set_dir.is_dir():\n",
    "                continue\n",
    "            self.all_pose_data[set_id] = {}\n",
    "            for pkl_path in tqdm(set_dir.glob(f\"{set_id}_*_poses.pkl\"), leave=False):\n",
    "                try:\n",
    "                    with open(pkl_path, \"rb\") as fp:\n",
    "                        loaded = pickle.load(fp)\n",
    "                except Exception as e:\n",
    "                    print(f\"[pose load] {pkl_path}: {e}\")\n",
    "                    continue\n",
    "\n",
    "                if len(loaded) != 1:\n",
    "                    continue\n",
    "                (key, data), *_ = loaded.items()\n",
    "                vid = \"_\".join(key.split(\"_\")[1:])\n",
    "                if vid in self.pie_db.get(set_id, {}):\n",
    "                    self.all_pose_data[set_id][vid] = data\n",
    "\n",
    "    def _enumerate_sequences(self):\n",
    "        print(\"Enumerating sequences …\")\n",
    "        for set_id in self.set_names:\n",
    "            for vid, vdb in self.pie_db.get(set_id, {}).items():\n",
    "                for pid, pdb in vdb.get(\"ped_annotations\", {}).items():\n",
    "                    frames = pdb.get(\"frames\", [])\n",
    "                    if len(frames) < self.seq_len + self.pred_len:\n",
    "                        continue\n",
    "                    frames = sorted(frames)\n",
    "                    for i in range(len(frames) - self.seq_len - self.pred_len + 1):\n",
    "                        start = frames[i]\n",
    "                        obs_end = frames[i + self.seq_len - 1]\n",
    "                        if obs_end - start != self.seq_len - 1:\n",
    "                            continue\n",
    "                        target = frames[i + self.seq_len + self.pred_len - 1]\n",
    "                        if target - obs_end != self.pred_len:\n",
    "                            continue\n",
    "                        self.sequences.append((set_id, vid, pid, start))\n",
    "        print(f\"Total sequences: {len(self.sequences)}\")\n",
    "\n",
    "    # ------------------ Dataset API ------------------------------------------\n",
    "    def __len__(self):\n",
    "        return len(self.sequences)\n",
    "\n",
    "    def __getitem__(self, idx: int):\n",
    "        set_id, vid, pid, start = self.sequences[idx]\n",
    "        vdb  = self.pie_db[set_id][vid]\n",
    "        pdb  = vdb[\"ped_annotations\"][pid]\n",
    "        ego  = vdb.get(\"vehicle_annotations\", {})\n",
    "        tldb = vdb.get(\"traffic_annotations\", {})\n",
    "\n",
    "        frame_nums = list(range(start, start + self.seq_len))\n",
    "        target_f   = start + self.seq_len + self.pred_len - 1\n",
    "\n",
    "        # label ---------------------------------------------------------------\n",
    "        label = 0\n",
    "        if (\n",
    "            \"frames\" in pdb\n",
    "            and \"behavior\" in pdb\n",
    "            and \"cross\" in pdb[\"behavior\"]\n",
    "            and target_f in pdb[\"frames\"]\n",
    "        ):\n",
    "            try:\n",
    "                j = pdb[\"frames\"].index(target_f)\n",
    "                label = pdb[\"behavior\"][\"cross\"][j]\n",
    "                if label == -1:\n",
    "                    label = 0\n",
    "            except (ValueError, IndexError):\n",
    "                pass\n",
    "\n",
    "        # static context ------------------------------------------------------\n",
    "        static_vec = np.zeros(INPUT_SIZE_STATIC, np.float32)\n",
    "        if \"static_context\" in self.streams:\n",
    "            attr  = pdb.get(\"attributes\", {})\n",
    "            sig   = attr.get(\"signalized\", 0)\n",
    "            intr  = attr.get(\"intersection\", 0)\n",
    "            age   = attr.get(\"age\", 2)\n",
    "            gen   = attr.get(\"gender\", 0)\n",
    "            tdir  = int(attr.get(\"traffic_direction\", 0))\n",
    "            ln    = attr.get(\"num_lanes\", 2)\n",
    "            lncat = LANE_CATEGORIES.get(ln, LANE_CATEGORIES[max(LANE_CATEGORIES)])\n",
    "            static_vec = np.concatenate(\n",
    "                [\n",
    "                    to_one_hot(sig,  NUM_SIGNALIZED_CATS),\n",
    "                    to_one_hot(intr, NUM_INTERSECTION_CATS),\n",
    "                    to_one_hot(age,  NUM_AGE_CATS),\n",
    "                    to_one_hot(gen,  NUM_GENDER_CATS),\n",
    "                    to_one_hot(tdir, NUM_TRAFFIC_DIR_CATS),\n",
    "                    to_one_hot(lncat, NUM_LANE_CATS),\n",
    "                ]\n",
    "            ).astype(np.float32)\n",
    "\n",
    "        # per-frame feature assembly -----------------------------------------\n",
    "        feats = {s: [] for s in self.streams}\n",
    "\n",
    "        for fn in frame_nums:\n",
    "            fidx = -1\n",
    "            if \"frames\" in pdb:\n",
    "                try:\n",
    "                    fidx = pdb[\"frames\"].index(fn)\n",
    "                except ValueError:\n",
    "                    pass\n",
    "\n",
    "            ego_f = ego.get(fn, {})\n",
    "\n",
    "            # bbox ----------------------------------------------------------\n",
    "            if \"bbox\" in self.streams:\n",
    "                bb = np.zeros(INPUT_SIZE_BBOX, np.float32)\n",
    "                if (\n",
    "                    fidx != -1\n",
    "                    and \"bbox\" in pdb\n",
    "                    and len(pdb[\"bbox\"]) > fidx\n",
    "                ):\n",
    "                    try:\n",
    "                        x1, y1, x2, y2 = pdb[\"bbox\"][fidx]\n",
    "                        w_img = vdb.get(\"width\", 1920)\n",
    "                        h_img = vdb.get(\"height\", 1080)\n",
    "                        if w_img > 0 and h_img > 0:\n",
    "                            cx = ((x1 + x2) / 2) / w_img\n",
    "                            cy = ((y1 + y2) / 2) / h_img\n",
    "                            w  = (x2 - x1) / w_img\n",
    "                            h  = (y2 - y1) / h_img\n",
    "                            if 0 < w and 0 < h and 0 <= cx <= 1 and 0 <= cy <= 1:\n",
    "                                bb = np.array([cx, cy, w, h], np.float32)\n",
    "                    except Exception:\n",
    "                        pass\n",
    "                feats[\"bbox\"].append(bb)\n",
    "\n",
    "            # pose ----------------------------------------------------------\n",
    "            if \"pose\" in self.streams:\n",
    "                pvec = np.zeros(INPUT_SIZE_POSE, np.float32)\n",
    "                pose_set = self.all_pose_data.get(set_id, {}).get(vid, {})\n",
    "                p_loaded = pose_set.get(fn, {}).get(pid)\n",
    "                if (\n",
    "                    isinstance(p_loaded, np.ndarray)\n",
    "                    and p_loaded.shape == (INPUT_SIZE_POSE,)\n",
    "                ):\n",
    "                    pvec = p_loaded\n",
    "                feats[\"pose\"].append(pvec)\n",
    "\n",
    "            # ego signals ---------------------------------------------------\n",
    "            if \"ego_speed\" in self.streams:\n",
    "                s = ego_f.get(\"OBD_speed\", 0.0) or ego_f.get(\"GPS_speed\", 0.0)\n",
    "                s = (s - self.scalers.get(\"ego_speed_mean\", 0.0)) / self.scalers.get(\n",
    "                    \"ego_speed_std\", 1.0\n",
    "                )\n",
    "                feats[\"ego_speed\"].append([s])\n",
    "\n",
    "            if \"ego_acc\" in self.streams:\n",
    "                ax = ego_f.get(\"accX\", 0.0)\n",
    "                ay = ego_f.get(\"accY\", 0.0)\n",
    "                ax = (ax - self.scalers.get(\"accX_mean\", 0.0)) / self.scalers.get(\n",
    "                    \"accX_std\", 1.0\n",
    "                )\n",
    "                ay = (ay - self.scalers.get(\"accY_mean\", 0.0)) / self.scalers.get(\n",
    "                    \"accY_std\", 1.0\n",
    "                )\n",
    "                feats[\"ego_acc\"].append([ax, ay])\n",
    "\n",
    "            if \"ego_gyro\" in self.streams:\n",
    "                gz = ego_f.get(\"gyroZ\", 0.0)\n",
    "                gz = (gz - self.scalers.get(\"gyroZ_mean\", 0.0)) / self.scalers.get(\n",
    "                    \"gyroZ_std\", 1.0\n",
    "                )\n",
    "                feats[\"ego_gyro\"].append([gz])\n",
    "\n",
    "            # pedestrian behaviour -----------------------------------------\n",
    "            if \"ped_action\" in self.streams:\n",
    "                action = (\n",
    "                    pdb[\"behavior\"][\"action\"][fidx]\n",
    "                    if fidx != -1\n",
    "                    and \"behavior\" in pdb\n",
    "                    and \"action\" in pdb[\"behavior\"]\n",
    "                    and len(pdb[\"behavior\"][\"action\"]) > fidx\n",
    "                    else 0\n",
    "                )\n",
    "                feats[\"ped_action\"].append([float(action)])\n",
    "\n",
    "            if \"ped_look\" in self.streams:\n",
    "                look = (\n",
    "                    pdb[\"behavior\"][\"look\"][fidx]\n",
    "                    if fidx != -1\n",
    "                    and \"behavior\" in pdb\n",
    "                    and \"look\" in pdb[\"behavior\"]\n",
    "                    and len(pdb[\"behavior\"][\"look\"]) > fidx\n",
    "                    else 0\n",
    "                )\n",
    "                feats[\"ped_look\"].append([float(look)])\n",
    "\n",
    "            if \"ped_occlusion\" in self.streams:\n",
    "                occ = (\n",
    "                    float(pdb[\"occlusion\"][fidx]) / 2.0\n",
    "                    if fidx != -1\n",
    "                    and \"occlusion\" in pdb\n",
    "                    and len(pdb[\"occlusion\"]) > fidx\n",
    "                    else 0.0\n",
    "                )\n",
    "                feats[\"ped_occlusion\"].append([occ])\n",
    "\n",
    "            # traffic light -------------------------------------------------\n",
    "            if \"traffic_light\" in self.streams:\n",
    "                tl_state = 0\n",
    "                for obj in tldb.values():\n",
    "                    if obj.get(\"obj_class\") != \"traffic_light\":\n",
    "                        continue\n",
    "                    if \"frames\" not in obj or \"state\" not in obj:\n",
    "                        continue\n",
    "                    try:\n",
    "                        j = obj[\"frames\"].index(fn)\n",
    "                        if obj[\"state\"][j] != 0:\n",
    "                            tl_state = obj[\"state\"][j]\n",
    "                            break\n",
    "                    except (ValueError, IndexError):\n",
    "                        continue\n",
    "                feats[\"traffic_light\"].append(to_one_hot(tl_state, NUM_TL_STATES))\n",
    "\n",
    "            # static context -----------------------------------------------\n",
    "            if \"static_context\" in self.streams:\n",
    "                feats[\"static_context\"].append(static_vec)\n",
    "\n",
    "        # numpy → torch ------------------------------------------------------\n",
    "        out = {\n",
    "            s: torch.tensor(np.asarray(feats[s], np.float32), dtype=torch.float32)\n",
    "            for s in self.streams\n",
    "        }\n",
    "        return out, torch.tensor(label, dtype=torch.long)\n",
    "\n",
    "\n",
    "# =============================================================================\n",
    "#                       MAIN: build balanced training set\n",
    "# =============================================================================\n",
    "if __name__ == \"__main__\":\n",
    "    print(\"\\n--- DATA PREPARATION ---\")\n",
    "\n",
    "    # 1) load / regenerate PIE DB -------------------------------------------\n",
    "    cache = Path(PIE_DATABASE_CACHE_PATH)\n",
    "    if cache.is_file():\n",
    "        print(\"Loading PIE database cache …\")\n",
    "        with cache.open(\"rb\") as fp:\n",
    "            pie_db = pickle.load(fp)\n",
    "        print(\"✓ PIE DB loaded.\")\n",
    "    else:\n",
    "        if PIE is None:\n",
    "            raise RuntimeError(\"PIE class unavailable: cannot rebuild database.\")\n",
    "        print(\"Cache not found – regenerating PIE DB …\")\n",
    "        pie_db = PIE(data_path=PIE_ROOT_PATH, regen_database=True).generate_database()\n",
    "        if not pie_db:\n",
    "            raise RuntimeError(\"PIE DB generation failed.\")\n",
    "        print(\"✓ PIE DB generated.\")\n",
    "\n",
    "    # 2) compute scalers -----------------------------------------------------\n",
    "    print(\"\\nComputing scalers …\")\n",
    "    spd, accx, accy, gyz = [], [], [], []\n",
    "    for sid in TRAIN_SETS_STR:\n",
    "        for vid, vdb in pie_db.get(sid, {}).items():\n",
    "            for frame, e in vdb.get(\"vehicle_annotations\", {}).items():\n",
    "                s  = e.get(\"OBD_speed\", 0.0) or e.get(\"GPS_speed\", 0.0)\n",
    "                spd.append(s)\n",
    "                accx.append(e.get(\"accX\", 0.0))\n",
    "                accy.append(e.get(\"accY\", 0.0))\n",
    "                gyz.append(e.get(\"gyroZ\", 0.0))\n",
    "\n",
    "    scalers = {}\n",
    "    if spd:\n",
    "        scalers[\"ego_speed_mean\"] = float(np.mean(spd))\n",
    "        scalers[\"ego_speed_std\"]  = float(max(np.std(spd), 1e-6))\n",
    "    if accx:\n",
    "        scalers[\"accX_mean\"] = float(np.mean(accx))\n",
    "        scalers[\"accX_std\"]  = float(max(np.std(accx), 1e-6))\n",
    "        scalers[\"accY_mean\"] = float(np.mean(accy))\n",
    "        scalers[\"accY_std\"]  = float(max(np.std(accy), 1e-6))\n",
    "    if gyz:\n",
    "        scalers[\"gyroZ_mean\"] = float(np.mean(gyz))\n",
    "        scalers[\"gyroZ_std\"]  = float(max(np.std(gyz), 1e-6))\n",
    "\n",
    "    print(\"Scalers:\", scalers)\n",
    "\n",
    "    # 3) extract full training dataset --------------------------------------\n",
    "    print(\"\\nExtracting training sequences (all streams) …\")\n",
    "    full_ds = PIEDataset(\n",
    "        pie_db,\n",
    "        TRAIN_SETS_STR,\n",
    "        POSE_DATA_DIR,\n",
    "        SEQ_LEN,\n",
    "        PRED_LEN,\n",
    "        scalers,\n",
    "        ALL_POSSIBLE_STREAMS,\n",
    "    )\n",
    "\n",
    "    train_dict = {s: [] for s in ALL_POSSIBLE_STREAMS}\n",
    "    train_dict[\"label\"] = []\n",
    "\n",
    "    for i in tqdm(range(len(full_ds)), desc=\"seq\"):\n",
    "        feat, lbl = full_ds[i]\n",
    "        for s in ALL_POSSIBLE_STREAMS:\n",
    "            train_dict[s].append(feat[s].numpy())\n",
    "        train_dict[\"label\"].append([lbl.item()])\n",
    "\n",
    "    print(f\"Raw training samples: {len(train_dict['label'])}\")\n",
    "\n",
    "    # 4) balance -------------------------------------------------------------\n",
    "    balanced = balance_samples_count(train_dict, \"label\")\n",
    "    del train_dict, full_ds\n",
    "    gc.collect()\n",
    "\n",
    "    # 5) write pickles -------------------------------------------------------\n",
    "    print(\"\\nSaving balanced data …\")\n",
    "    with open(BALANCED_DATA_PKL_PATH, \"wb\") as fp:\n",
    "        pickle.dump(balanced, fp, pickle.HIGHEST_PROTOCOL)\n",
    "    print(f\"✓ {BALANCED_DATA_PKL_PATH}\")\n",
    "\n",
    "    print(\"Saving scalers …\")\n",
    "    with open(SCALERS_PKL_PATH, \"wb\") as fp:\n",
    "        pickle.dump(scalers, fp, pickle.HIGHEST_PROTOCOL)\n",
    "    print(f\"✓ {SCALERS_PKL_PATH}\")\n",
    "\n",
    "    del pie_db\n",
    "    gc.collect()\n",
    "\n",
    "    print(\"\\n--- DATA PREPARATION COMPLETE ---\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "73fb670a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-01T08:01:00.134627Z",
     "iopub.status.busy": "2025-05-01T08:01:00.134344Z",
     "iopub.status.idle": "2025-05-01T10:41:22.329614Z",
     "shell.execute_reply": "2025-05-01T10:41:22.328588Z"
    },
    "papermill": {
     "duration": 9622.210122,
     "end_time": "2025-05-01T10:41:22.330964",
     "exception": false,
     "start_time": "2025-05-01T08:01:00.120842",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--- Running Weighted Average Fusion With Active Streams: ['bbox', 'ped_action', 'ped_look', 'ego_speed', 'ego_acc', 'static_context'] ---\n",
      "Using device: cuda\n",
      "--- Running Model Training/Evaluation with Weighted Fusion ---\n",
      "Active Streams: ['bbox', 'ped_action', 'ped_look', 'ego_speed', 'ego_acc', 'static_context']\n",
      "\n",
      "Loading balanced training data …\n",
      "   ✓ pre-processed data loaded.\n",
      "\n",
      "Loading PIE database cache for validation …\n",
      "   ✓ PIE database loaded.\n",
      "\n",
      "Creating Datasets and DataLoaders …\n",
      "Dataset initialized with 77288 sequences for sets ['set05', 'set06'].\n",
      "   ✓ DataLoaders ready.\n",
      "\n",
      "Initialising model …\n",
      "Initializing Weighted-Avg model with streams: ['bbox', 'ped_action', 'ped_look', 'ego_speed', 'ego_acc', 'static_context']\n",
      "  – Adding stream 'bbox' (input 4)\n",
      "  – Adding stream 'ped_action' (input 1)\n",
      "  – Adding stream 'ped_look' (input 1)\n",
      "  – Adding stream 'ego_speed' (input 1)\n",
      "  – Adding stream 'ego_acc' (input 2)\n",
      "  – Adding stream 'static_context' (input 23)\n",
      "\n",
      "--- Model architecture ---\n",
      "MultiStreamWeightedAvgLSTM(\n",
      "  (lstms): ModuleDict(\n",
      "    (bbox): LSTM(4, 256, num_layers=2, batch_first=True, dropout=0.3, bidirectional=True)\n",
      "    (ped_action): LSTM(1, 256, num_layers=2, batch_first=True, dropout=0.3, bidirectional=True)\n",
      "    (ped_look): LSTM(1, 256, num_layers=2, batch_first=True, dropout=0.3, bidirectional=True)\n",
      "    (ego_speed): LSTM(1, 256, num_layers=2, batch_first=True, dropout=0.3, bidirectional=True)\n",
      "    (ego_acc): LSTM(2, 256, num_layers=2, batch_first=True, dropout=0.3, bidirectional=True)\n",
      "    (static_context): LSTM(23, 256, num_layers=2, batch_first=True, dropout=0.3, bidirectional=True)\n",
      "  )\n",
      "  (attentions): ModuleDict(\n",
      "    (bbox): Attention(\n",
      "      (attention_net): Sequential(\n",
      "        (0): Linear(in_features=512, out_features=128, bias=True)\n",
      "        (1): Tanh()\n",
      "        (2): Linear(in_features=128, out_features=1, bias=True)\n",
      "      )\n",
      "    )\n",
      "    (ped_action): Attention(\n",
      "      (attention_net): Sequential(\n",
      "        (0): Linear(in_features=512, out_features=128, bias=True)\n",
      "        (1): Tanh()\n",
      "        (2): Linear(in_features=128, out_features=1, bias=True)\n",
      "      )\n",
      "    )\n",
      "    (ped_look): Attention(\n",
      "      (attention_net): Sequential(\n",
      "        (0): Linear(in_features=512, out_features=128, bias=True)\n",
      "        (1): Tanh()\n",
      "        (2): Linear(in_features=128, out_features=1, bias=True)\n",
      "      )\n",
      "    )\n",
      "    (ego_speed): Attention(\n",
      "      (attention_net): Sequential(\n",
      "        (0): Linear(in_features=512, out_features=128, bias=True)\n",
      "        (1): Tanh()\n",
      "        (2): Linear(in_features=128, out_features=1, bias=True)\n",
      "      )\n",
      "    )\n",
      "    (ego_acc): Attention(\n",
      "      (attention_net): Sequential(\n",
      "        (0): Linear(in_features=512, out_features=128, bias=True)\n",
      "        (1): Tanh()\n",
      "        (2): Linear(in_features=128, out_features=1, bias=True)\n",
      "      )\n",
      "    )\n",
      "    (static_context): Attention(\n",
      "      (attention_net): Sequential(\n",
      "        (0): Linear(in_features=512, out_features=128, bias=True)\n",
      "        (1): Tanh()\n",
      "        (2): Linear(in_features=128, out_features=1, bias=True)\n",
      "      )\n",
      "    )\n",
      "  )\n",
      "  (dropout): Dropout(p=0.3, inplace=False)\n",
      "  (fc1): Linear(in_features=512, out_features=256, bias=True)\n",
      "  (relu): ReLU()\n",
      "  (fc2): Linear(in_features=256, out_features=2, bias=True)\n",
      ")\n",
      "Trainable parameters: 13,224,206\n",
      "------------------------------\n",
      "\n",
      "Calculating class weights …\n",
      "Loss weights → 0: 1.00, 1: 1.00\n",
      "\n",
      "--- Starting training ---\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "946b6397e7b54d9a9c1dc87bf39d287a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "30e69984f371433eaa0523fba6941829",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 01/30 – 312.9s\n",
      "  train loss 0.2648 | acc 0.8842\n",
      "  val   loss 0.1940 | acc 0.9100\n",
      "           prec 0.6416 | rec 0.9312 | f1 0.7597 | auc 0.9720\n",
      "  ✓ new best model saved → best_model_weighted_bbox_ego_acc_ego_speed_ped_action_ped_look_static_context_ep1.pth (F1 0.7597)\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "f2c7d81b5f2c44d3adb446a38c7e0323",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "2d8176a209974022aad0f00cd5890e0b",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 02/30 – 312.9s\n",
      "  train loss 0.2058 | acc 0.9106\n",
      "  val   loss 0.1810 | acc 0.9309\n",
      "           prec 0.7440 | rec 0.8349 | f1 0.7868 | auc 0.9723\n",
      "  ✓ new best model saved → best_model_weighted_bbox_ego_acc_ego_speed_ped_action_ped_look_static_context_ep2.pth (F1 0.7868)\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "966bac9e922943c6b470bd2d8876808d",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a872713e470049539e635e29fbe32fc9",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 03/30 – 309.4s\n",
      "  train loss 0.1879 | acc 0.9210\n",
      "  val   loss 0.1638 | acc 0.9420\n",
      "           prec 0.7757 | rec 0.8729 | f1 0.8215 | auc 0.9733\n",
      "  ✓ new best model saved → best_model_weighted_bbox_ego_acc_ego_speed_ped_action_ped_look_static_context_ep3.pth (F1 0.8215)\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "d5b9045deb6d4ae589181cd0cd4c6410",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5d0c04dfc54d4fecb204359ca52890b5",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 04/30 – 313.2s\n",
      "  train loss 0.1704 | acc 0.9308\n",
      "  val   loss 0.2295 | acc 0.9210\n",
      "           prec 0.6850 | rec 0.8940 | f1 0.7757 | auc 0.9675\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b33ae08c58db4334a560e7b2db79ffaf",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ba0729d4d5d54523843edafca5dc66f1",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 05/30 – 312.5s\n",
      "  train loss 0.1476 | acc 0.9425\n",
      "  val   loss 0.2070 | acc 0.9285\n",
      "           prec 0.7655 | rec 0.7673 | f1 0.7664 | auc 0.9662\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b0cab117ec7d498a83e57364940f2721",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c0d0bd641df841209838c73249408d95",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 06/30 – 313.0s\n",
      "  train loss 0.1303 | acc 0.9509\n",
      "  val   loss 0.1937 | acc 0.9331\n",
      "           prec 0.7603 | rec 0.8207 | f1 0.7893 | auc 0.9679\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "1d4acee8bd194e65bf75fa8320868f9f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "90013d0dfb794e548cb79970e94ee8d6",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 07/30 – 311.4s\n",
      "  train loss 0.1174 | acc 0.9563\n",
      "  val   loss 0.2009 | acc 0.9308\n",
      "           prec 0.7690 | rec 0.7826 | f1 0.7757 | auc 0.9705\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a1a9c50ccd53411391d0f4ce086ccd1e",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "f8474379ea7b46b0ae586827449af83d",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 08/30 – 311.9s\n",
      "  train loss 0.1061 | acc 0.9606\n",
      "  val   loss 0.2621 | acc 0.9289\n",
      "           prec 0.7998 | rec 0.7137 | f1 0.7543 | auc 0.9588\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "94dfa16b37ad4ae283bbb691568a7c11",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "11da5d940c5248ca8368958c12900ed6",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 09/30 – 312.2s\n",
      "  train loss 0.0973 | acc 0.9648\n",
      "  val   loss 0.2717 | acc 0.9283\n",
      "           prec 0.7701 | rec 0.7573 | f1 0.7636 | auc 0.9628\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "d62139da4f344767b2f58aa7a4d2966c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "2fe86786942c42d380793db39fd444b4",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 10/30 – 312.6s\n",
      "  train loss 0.0901 | acc 0.9676\n",
      "  val   loss 0.2779 | acc 0.9259\n",
      "           prec 0.7636 | rec 0.7464 | f1 0.7549 | auc 0.9577\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "2944a09361444f91a171b64649116746",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "156b20818a294e218cf88ae1b3734e76",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 11/30 – 311.4s\n",
      "  train loss 0.0837 | acc 0.9702\n",
      "  val   loss 0.2749 | acc 0.9255\n",
      "           prec 0.7438 | rec 0.7819 | f1 0.7624 | auc 0.9639\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "8295f8a29e18443ca4d2c284645f9d34",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "6467985364654293b77cb432e8c1c44b",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 12/30 – 312.1s\n",
      "  train loss 0.0785 | acc 0.9722\n",
      "  val   loss 0.3138 | acc 0.9232\n",
      "           prec 0.7665 | rec 0.7158 | f1 0.7403 | auc 0.9576\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ee6654e5865b4fe7837315b8c0b2a1eb",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "e49672a514ff4bd7b8d48b9758794a1e",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 13/30 – 312.7s\n",
      "  train loss 0.0744 | acc 0.9743\n",
      "  val   loss 0.2983 | acc 0.9296\n",
      "           prec 0.8030 | rec 0.7148 | f1 0.7563 | auc 0.9607\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "0bd1b36e9a9c41338b6da559acaf799e",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "af6f8efae81f4842b04980e62ba7a0a3",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 14/30 – 313.6s\n",
      "  train loss 0.0697 | acc 0.9752\n",
      "  val   loss 0.3117 | acc 0.9200\n",
      "           prec 0.7153 | rec 0.7915 | f1 0.7515 | auc 0.9600\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "3fe8927883b04324bcf5b3a6fab89e56",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a8cd70fa521d499994eb613da5fb8a33",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 15/30 – 313.4s\n",
      "  train loss 0.0640 | acc 0.9777\n",
      "  val   loss 0.3011 | acc 0.9243\n",
      "           prec 0.7513 | rec 0.7541 | f1 0.7527 | auc 0.9596\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a4f1231464874c23b610f51a4abf00e8",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "1ff0d0a8b3c54b99b7d2da34a2bbf28a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 16/30 – 312.6s\n",
      "  train loss 0.0629 | acc 0.9781\n",
      "  val   loss 0.3439 | acc 0.9265\n",
      "           prec 0.7630 | rec 0.7526 | f1 0.7578 | auc 0.9567\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "9bdcd779f7ed45748aa3934f5f9a8982",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a4a1168e48824c43968044a125f96778",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 17/30 – 313.1s\n",
      "  train loss 0.0597 | acc 0.9792\n",
      "  val   loss 0.3377 | acc 0.9267\n",
      "           prec 0.7890 | rec 0.7106 | f1 0.7478 | auc 0.9555\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "bc52f8dac7344fc8b32b4e914043e81a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a20d80e231774e9ebe96d10c835fa174",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 18/30 – 312.0s\n",
      "  train loss 0.0558 | acc 0.9806\n",
      "  val   loss 0.3628 | acc 0.9282\n",
      "           prec 0.7886 | rec 0.7244 | f1 0.7552 | auc 0.9582\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a5b63bb17b8c4b5fa816b7a0c1056c7f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "3bcde3bdcf3f42088eae5bc12f076186",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 19/30 – 312.5s\n",
      "  train loss 0.0529 | acc 0.9821\n",
      "  val   loss 0.4115 | acc 0.9231\n",
      "           prec 0.7907 | rec 0.6753 | f1 0.7285 | auc 0.9508\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "41a477e537f746cf9e4f54d2b73c6d6d",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "09bbddc321fd46cd89143523502bbb9a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 20/30 – 312.9s\n",
      "  train loss 0.0484 | acc 0.9835\n",
      "  val   loss 0.3949 | acc 0.9242\n",
      "           prec 0.7948 | rec 0.6795 | f1 0.7326 | auc 0.9536\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "907dad2f4125462685ff98439333e19d",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5a66a29485bc47a0be38e9cf89439140",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 21/30 – 313.0s\n",
      "  train loss 0.0496 | acc 0.9834\n",
      "  val   loss 0.3634 | acc 0.9224\n",
      "           prec 0.7422 | rec 0.7538 | f1 0.7480 | auc 0.9550\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "886e522070c94b498c07fd503eb657d0",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "e8f961c35c794a9b8311292eb92ed4bb",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 22/30 – 312.5s\n",
      "  train loss 0.0466 | acc 0.9844\n",
      "  val   loss 0.3887 | acc 0.9235\n",
      "           prec 0.7604 | rec 0.7288 | f1 0.7443 | auc 0.9547\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "825fbb27b73643c7b9d6c17c1584f104",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "dc792838518d4ac88b688938ba9a7a3f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 23/30 – 313.0s\n",
      "  train loss 0.0431 | acc 0.9856\n",
      "  val   loss 0.4437 | acc 0.9149\n",
      "           prec 0.7215 | rec 0.7217 | f1 0.7216 | auc 0.9483\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "95847b6866ff473bb41ad4a0ed5ace1e",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "42d8481e7b5d401fb3741ec73c606c55",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 24/30 – 312.0s\n",
      "  train loss 0.0438 | acc 0.9854\n",
      "  val   loss 0.4090 | acc 0.9245\n",
      "           prec 0.7564 | rec 0.7460 | f1 0.7512 | auc 0.9538\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "fd2fdf2f28454f30b0bf42d586b4f278",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ae82337b8dc341338f416b659e9806eb",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 25/30 – 311.4s\n",
      "  train loss 0.0408 | acc 0.9861\n",
      "  val   loss 0.4256 | acc 0.9235\n",
      "           prec 0.7576 | rec 0.7343 | f1 0.7457 | auc 0.9514\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "6db53ad3fe6a44ff8b7619fb023ce631",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c5f388f6d9b74c26b448083350366f00",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 26/30 – 312.2s\n",
      "  train loss 0.0401 | acc 0.9865\n",
      "  val   loss 0.3912 | acc 0.9276\n",
      "           prec 0.7754 | rec 0.7411 | f1 0.7579 | auc 0.9581\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c72421971d634546a209e33c650df5ce",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "e89a829c5d414b27b9a185b8656f5965",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 27/30 – 311.7s\n",
      "  train loss 0.0381 | acc 0.9877\n",
      "  val   loss 0.4323 | acc 0.9195\n",
      "           prec 0.7659 | rec 0.6813 | f1 0.7211 | auc 0.9525\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "633d1fba63d8450aa37abb58d027b2f3",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "3833cc0fc5de480ca3f7dd1f4117d81b",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 28/30 – 313.4s\n",
      "  train loss 0.0362 | acc 0.9883\n",
      "  val   loss 0.4227 | acc 0.9282\n",
      "           prec 0.7916 | rec 0.7192 | f1 0.7537 | auc 0.9510\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "39779e21b2a14df182d01b80bd0daf12",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "96287849637c41878739543b50b4584c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 29/30 – 312.4s\n",
      "  train loss 0.0350 | acc 0.9882\n",
      "  val   loss 0.4481 | acc 0.9247\n",
      "           prec 0.7652 | rec 0.7318 | f1 0.7481 | auc 0.9509\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "736d3a481f2c4e4593bc31fe37d63238",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Training:   0%|          | 0/3436 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "d074a1ef2a554bc3bb05cb1cafa092f5",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Epoch 30/30 – 312.6s\n",
      "  train loss 0.0335 | acc 0.9891\n",
      "  val   loss 0.4534 | acc 0.9216\n",
      "           prec 0.7642 | rec 0.7047 | f1 0.7333 | auc 0.9473\n",
      "\n",
      "--- Training finished ---\n",
      "\n",
      "Plotting training curves …\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "--- Final Evaluation on Validation set ---\n",
      "Loaded best model: best_model_weighted_bbox_ego_acc_ego_speed_ped_action_ped_look_static_context_ep3.pth\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "88fb5dc7a0e2490a89c9aa3a31cf63ee",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Evaluating:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "6100d7c4faae449bac9662f1858fe99c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Generating CM Data:   0%|          | 0/2416 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "--- Final metrics (Weighted Avg Fusion) ---\n",
      "loss      : 0.1638\n",
      "accuracy  : 0.9420\n",
      "precision : 0.7757\n",
      "recall    : 0.8729\n",
      "f1        : 0.8215\n",
      "auc       : 0.9733\n",
      "(Best validation F1 during training: 0.8215)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "--- Learned fusion weights ---\n",
      "bbox           : 0.1721\n",
      "ped_action     : 0.1673\n",
      "ped_look       : 0.1619\n",
      "ego_speed      : 0.1651\n",
      "ego_acc        : 0.1643\n",
      "static_context : 0.1692\n",
      "------------------------------\n",
      "\n",
      "--- Script complete ---\n"
     ]
    }
   ],
   "source": [
    "# --- CELL 2: ABLATION STUDY – MODEL TRAINING AND EVALUATION (with Weighted Average Fusion) ---\n",
    "\n",
    "import os\n",
    "import sys\n",
    "import gc\n",
    "import time\n",
    "import math\n",
    "import random\n",
    "import pickle\n",
    "import torch\n",
    "import numpy as np\n",
    "import pandas as pd                      # results-summary table\n",
    "import torch.nn as nn\n",
    "import torch.optim as optim\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from tqdm.notebook import tqdm\n",
    "from torch.utils.data import Dataset, DataLoader\n",
    "from sklearn.metrics import (\n",
    "    accuracy_score,\n",
    "    precision_recall_fscore_support,\n",
    "    roc_auc_score,\n",
    "    confusion_matrix,\n",
    "    ConfusionMatrixDisplay,\n",
    ")\n",
    "\n",
    "# --- Add PIE utilities path if necessary (adjust path) ------------------------\n",
    "pie_utilities_path = \"/kaggle/working/PIE/utilities\"\n",
    "if pie_utilities_path not in sys.path:\n",
    "    sys.path.insert(0, pie_utilities_path)\n",
    "\n",
    "try:\n",
    "    from pie_data import PIE\n",
    "except ImportError as e:\n",
    "    print(f\"Warn: Could not import PIE class: {e}\")\n",
    "    PIE = None\n",
    "\n",
    "# --- Configuration ------------------------------------------------------------\n",
    "PIE_ROOT_PATH = \"/kaggle/working/PIE\"\n",
    "POSE_DATA_DIR = \"/kaggle/input/pose-data/extracted_poses2\"\n",
    "PIE_DATABASE_CACHE_PATH = \"/kaggle/input/pie-database/pie_database.pkl\"\n",
    "\n",
    "# --- Define ALL possible streams (used by Dataset class) ----------------------\n",
    "ALL_POSSIBLE_STREAMS = [\n",
    "    \"bbox\",\n",
    "    \"pose\",\n",
    "    \"ego_speed\",\n",
    "    \"ego_acc\",\n",
    "    \"ego_gyro\",\n",
    "    \"ped_action\",\n",
    "    \"ped_look\",\n",
    "    \"ped_occlusion\",\n",
    "    \"traffic_light\",\n",
    "    \"static_context\",\n",
    "]\n",
    "\n",
    "# --- *** CHOOSE ACTIVE STREAMS FOR THIS EXPERIMENT *** ------------------------\n",
    "ACTIVE_STREAMS = [\n",
    "    \"bbox\",\n",
    "    \"ped_action\",\n",
    "    \"ped_look\",\n",
    "    \"ego_speed\",\n",
    "    \"ego_acc\",\n",
    "    \"static_context\",\n",
    "]\n",
    "# ------------------------------------------------------------------------------\n",
    "\n",
    "print(f\"--- Running Weighted Average Fusion With Active Streams: {ACTIVE_STREAMS} ---\")\n",
    "\n",
    "# --- Model Hyper-parameters ---------------------------------------------------\n",
    "SEQ_LEN, PRED_LEN = 30, 1\n",
    "INPUT_SIZE_BBOX = 4\n",
    "INPUT_SIZE_POSE = 34\n",
    "INPUT_SIZE_EGO_SPEED = 1\n",
    "INPUT_SIZE_EGO_ACC = 2\n",
    "INPUT_SIZE_EGO_GYRO = 1\n",
    "INPUT_SIZE_PED_ACTION = 1\n",
    "INPUT_SIZE_PED_LOOK = 1\n",
    "INPUT_SIZE_PED_OCC = 1\n",
    "INPUT_SIZE_TL_STATE = 4\n",
    "NUM_SIGNALIZED_CATS = 4\n",
    "NUM_INTERSECTION_CATS = 5\n",
    "NUM_AGE_CATS = 4\n",
    "NUM_GENDER_CATS = 3\n",
    "NUM_TRAFFIC_DIR_CATS = 2\n",
    "LANE_CATEGORIES = {1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 4, 7: 4, 8: 4}\n",
    "NUM_LANE_CATS = len(set(LANE_CATEGORIES.values()))\n",
    "INPUT_SIZE_STATIC = (\n",
    "    NUM_SIGNALIZED_CATS\n",
    "    + NUM_INTERSECTION_CATS\n",
    "    + NUM_AGE_CATS\n",
    "    + NUM_GENDER_CATS\n",
    "    + NUM_TRAFFIC_DIR_CATS\n",
    "    + NUM_LANE_CATS\n",
    ")\n",
    "\n",
    "LSTM_HIDDEN_SIZE = 256\n",
    "NUM_LSTM_LAYERS = 2\n",
    "DROPOUT_RATE = 0.3\n",
    "NUM_CLASSES = 2\n",
    "ATTENTION_DIM = 128\n",
    "\n",
    "# --- Training Hyper-parameters ------------------------------------------------\n",
    "LEARNING_RATE = 1e-4\n",
    "BATCH_SIZE = 32\n",
    "NUM_EPOCHS = 30  \n",
    "DEVICE = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "print(f\"Using device: {DEVICE}\")\n",
    "\n",
    "# --- Dataset splits -----------------------------------------------------------\n",
    "VAL_SETS_STR = [\"set05\", \"set06\"]\n",
    "\n",
    "# --- Paths for pre-processed data --------------------------------------------\n",
    "BALANCED_DATA_PKL_PATH = \"/kaggle/working/balanced_train_data.pkl\"\n",
    "SCALERS_PKL_PATH = \"/kaggle/working/scalers.pkl\"\n",
    "\n",
    "# -----------------------------------------------------------------------------#\n",
    "#                               Helper classes                                #\n",
    "# -----------------------------------------------------------------------------\n",
    "\n",
    "\n",
    "def to_one_hot(index, num_classes):\n",
    "    vec = np.zeros(num_classes, dtype=np.float32)\n",
    "    safe_index = int(np.clip(index, 0, num_classes - 1))\n",
    "    vec[safe_index] = 1.0\n",
    "    return vec\n",
    "\n",
    "\n",
    "class PIEDataset(Dataset):\n",
    "    \"\"\"\n",
    "    Dataset that can dynamically enable/disable streams.\n",
    "    \"\"\"\n",
    "\n",
    "    def __init__(\n",
    "        self,\n",
    "        pie_database,\n",
    "        set_names,\n",
    "        pose_data_dir,\n",
    "        seq_len,\n",
    "        pred_len,\n",
    "        scalers=None,\n",
    "        active_streams=None,\n",
    "    ):\n",
    "        self.pie_db = pie_database\n",
    "        self.set_names = set_names\n",
    "        self.pose_data_dir = pose_data_dir\n",
    "        self.seq_len = seq_len\n",
    "        self.pred_len = pred_len\n",
    "        self.scalers = scalers or {}\n",
    "        self.active_streams = active_streams or ALL_POSSIBLE_STREAMS\n",
    "        self.sequences = []\n",
    "        self.all_pose_data = {}\n",
    "\n",
    "        self._input_sizes_for_error = self._get_input_sizes_dict()\n",
    "\n",
    "        if \"pose\" in self.active_streams:\n",
    "            self._load_pose_data()\n",
    "\n",
    "        self._generate_sequence_list()\n",
    "        if not self.sequences:\n",
    "            raise ValueError(f\"Dataset init failed: No sequences for {self.set_names}\")\n",
    "\n",
    "    # --------------------------------------------------------------------- #\n",
    "    #                        internal helper methods                        #\n",
    "    # --------------------------------------------------------------------- #\n",
    "\n",
    "    def _get_input_sizes_dict(self):\n",
    "        \"\"\"\n",
    "        Build a dict {stream_name: feature_size}.\n",
    "        \"\"\"\n",
    "        input_sizes = {}\n",
    "        special_cases = {\n",
    "            \"TRAFFIC_LIGHT\": \"TL_STATE\",\n",
    "            \"STATIC_CONTEXT\": \"STATIC\",\n",
    "            \"EGO_SPEED\": \"EGO_SPEED\",\n",
    "            \"EGO_ACC\": \"EGO_ACC\",\n",
    "            \"EGO_GYRO\": \"EGO_GYRO\",\n",
    "            \"PED_ACTION\": \"PED_ACTION\",\n",
    "            \"PED_LOOK\": \"PED_LOOK\",\n",
    "            \"PED_OCCLUSION\": \"PED_OCC\",\n",
    "        }\n",
    "\n",
    "        for stream in ALL_POSSIBLE_STREAMS:\n",
    "            size_constant_name = f\"INPUT_SIZE_{stream.upper()}\"\n",
    "            stream_upper_key = stream.upper()\n",
    "            suffix = special_cases.get(stream_upper_key)\n",
    "\n",
    "            if suffix:\n",
    "                size_constant_name = f\"INPUT_SIZE_{suffix}\"\n",
    "            elif stream == \"bbox\":\n",
    "                size_constant_name = \"INPUT_SIZE_BBOX\"\n",
    "            elif stream == \"pose\":\n",
    "                size_constant_name = \"INPUT_SIZE_POSE\"\n",
    "\n",
    "            input_sizes[stream] = globals().get(size_constant_name, 1)\n",
    "\n",
    "        return input_sizes\n",
    "\n",
    "    def _load_pose_data(self):\n",
    "        \"\"\"\n",
    "        Load pose dictionaries once per dataset instance.\n",
    "        \"\"\"\n",
    "        sets_loaded_count = 0\n",
    "        for set_id in self.set_names:\n",
    "            self.all_pose_data[set_id] = {}\n",
    "            pose_set_path = os.path.join(self.pose_data_dir, set_id)\n",
    "            if not os.path.isdir(pose_set_path):\n",
    "                continue\n",
    "\n",
    "            pkl_files_in_set = [\n",
    "                f\n",
    "                for f in os.listdir(pose_set_path)\n",
    "                if f.startswith(f\"{set_id}_\") and f.endswith(\"_poses.pkl\")\n",
    "            ]\n",
    "            if not pkl_files_in_set:\n",
    "                continue\n",
    "\n",
    "            loaded_video_count = 0\n",
    "            for pkl_filename in pkl_files_in_set:\n",
    "                pkl_file_path = os.path.join(pose_set_path, pkl_filename)\n",
    "                try:\n",
    "                    with open(pkl_file_path, \"rb\") as f:\n",
    "                        loaded_pkl_content = pickle.load(f)\n",
    "                except FileNotFoundError:\n",
    "                    continue\n",
    "                except Exception as e:\n",
    "                    print(f\"Error loading pose PKL {pkl_file_path}: {e}\")\n",
    "                    continue\n",
    "\n",
    "                # Every pose-PKL contains a single key (video), by convention\n",
    "                if len(loaded_pkl_content) != 1:\n",
    "                    continue\n",
    "\n",
    "                unique_video_key, video_data = list(loaded_pkl_content.items())[0]\n",
    "                video_id = \"_\".join(unique_video_key.split(\"_\")[1:])\n",
    "                if video_id in self.pie_db.get(set_id, {}):\n",
    "                    self.all_pose_data[set_id][video_id] = video_data\n",
    "                    loaded_video_count += 1\n",
    "\n",
    "            if loaded_video_count > 0:\n",
    "                sets_loaded_count += 1\n",
    "\n",
    "    def _generate_sequence_list(self):\n",
    "        \"\"\"\n",
    "        Enumerate every sliding window that satisfies length + prediction horizon.\n",
    "        \"\"\"\n",
    "        sequence_count = 0\n",
    "        for set_id in self.set_names:\n",
    "            if set_id not in self.pie_db:\n",
    "                continue\n",
    "            for video_id, video_data in self.pie_db[set_id].items():\n",
    "                if \"ped_annotations\" not in video_data:\n",
    "                    continue\n",
    "                for ped_id, ped_data in video_data[\"ped_annotations\"].items():\n",
    "                    frames = ped_data.get(\"frames\", [])\n",
    "                    if len(frames) < self.seq_len + self.pred_len:\n",
    "                        continue\n",
    "\n",
    "                    frames_sorted = sorted(frames)\n",
    "                    for i in range(len(frames_sorted) - self.seq_len - self.pred_len + 1):\n",
    "                        start_f = frames_sorted[i]\n",
    "                        obs_end_f = frames_sorted[i + self.seq_len - 1]\n",
    "\n",
    "                        # consecutiveness check\n",
    "                        if obs_end_f - start_f != self.seq_len - 1:\n",
    "                            continue\n",
    "\n",
    "                        target_idx = i + self.seq_len + self.pred_len - 1\n",
    "                        if target_idx >= len(frames_sorted):\n",
    "                            continue\n",
    "\n",
    "                        target_f = frames_sorted[target_idx]\n",
    "                        if target_f - obs_end_f != self.pred_len:\n",
    "                            continue\n",
    "\n",
    "                        self.sequences.append((set_id, video_id, ped_id, start_f))\n",
    "                        sequence_count += 1\n",
    "\n",
    "        print(f\"Dataset initialized with {sequence_count} sequences for sets {self.set_names}.\")\n",
    "\n",
    "    # --------------------------------------------------------------------- #\n",
    "    #                              overrides                                #\n",
    "    # --------------------------------------------------------------------- #\n",
    "\n",
    "    def __len__(self):\n",
    "        return len(self.sequences)\n",
    "\n",
    "    def __getitem__(self, idx):\n",
    "        \"\"\"\n",
    "        Returns:\n",
    "            features_dict   {stream_name: Tensor(seq_len, feat_dim)}\n",
    "            label_tensor    Tensor([])\n",
    "        \"\"\"\n",
    "        set_id, video_id, ped_id, start_frame = self.sequences[idx]\n",
    "        frame_nums = list(range(start_frame, start_frame + self.seq_len))\n",
    "        target_frame_num = start_frame + self.seq_len + self.pred_len - 1\n",
    "\n",
    "        # convenient aliases\n",
    "        video_db = self.pie_db.get(set_id, {}).get(video_id, {})\n",
    "        ped_db = video_db.get(\"ped_annotations\", {}).get(ped_id, {})\n",
    "        ego_db = video_db.get(\"vehicle_annotations\", {})\n",
    "        traffic_db = video_db.get(\"traffic_annotations\", {})\n",
    "        ped_attributes = ped_db.get(\"attributes\", {})\n",
    "\n",
    "        feature_sequences = {s: [] for s in self.active_streams}\n",
    "        label = 0\n",
    "\n",
    "        if (\n",
    "            \"frames\" in ped_db\n",
    "            and \"behavior\" in ped_db\n",
    "            and \"cross\" in ped_db[\"behavior\"]\n",
    "        ):\n",
    "            try:\n",
    "                target_idx = ped_db[\"frames\"].index(target_frame_num)\n",
    "                label = ped_db[\"behavior\"][\"cross\"][target_idx]\n",
    "                if label == -1:\n",
    "                    label = 0\n",
    "            except (ValueError, IndexError):\n",
    "                pass\n",
    "\n",
    "        # --- static context ------------------------------------------------\n",
    "        static_vec = np.zeros(INPUT_SIZE_STATIC, dtype=np.float32)\n",
    "        if \"static_context\" in self.active_streams:\n",
    "            sig_idx = ped_attributes.get(\"signalized\", 0)\n",
    "            int_idx = ped_attributes.get(\"intersection\", 0)\n",
    "            age_idx = ped_attributes.get(\"age\", 2)\n",
    "            gen_idx = ped_attributes.get(\"gender\", 0)\n",
    "            td_idx = int(ped_attributes.get(\"traffic_direction\", 0))\n",
    "            nl_val = ped_attributes.get(\"num_lanes\", 2)\n",
    "            nl_cat_idx = LANE_CATEGORIES.get(\n",
    "                nl_val, LANE_CATEGORIES[max(LANE_CATEGORIES.keys())]\n",
    "            )\n",
    "\n",
    "            static_vec = np.concatenate(\n",
    "                [\n",
    "                    to_one_hot(sig_idx, NUM_SIGNALIZED_CATS),\n",
    "                    to_one_hot(int_idx, NUM_INTERSECTION_CATS),\n",
    "                    to_one_hot(age_idx, NUM_AGE_CATS),\n",
    "                    to_one_hot(gen_idx, NUM_GENDER_CATS),\n",
    "                    to_one_hot(td_idx, NUM_TRAFFIC_DIR_CATS),\n",
    "                    to_one_hot(nl_cat_idx, NUM_LANE_CATS),\n",
    "                ]\n",
    "            )\n",
    "\n",
    "            if static_vec.shape[0] != INPUT_SIZE_STATIC:\n",
    "                static_vec = np.zeros(INPUT_SIZE_STATIC, dtype=np.float32)\n",
    "\n",
    "        # -------------------------------------------------------------------\n",
    "        #                    per-frame feature extraction                    #\n",
    "        # -------------------------------------------------------------------\n",
    "        for frame_num in frame_nums:\n",
    "            frame_db_idx = -1\n",
    "            if \"frames\" in ped_db:\n",
    "                try:\n",
    "                    frame_db_idx = ped_db[\"frames\"].index(frame_num)\n",
    "                except ValueError:\n",
    "                    pass\n",
    "\n",
    "            ego_frame_data = ego_db.get(frame_num, {})\n",
    "\n",
    "            # ---------- bbox ------------------------------------------------\n",
    "            if \"bbox\" in self.active_streams:\n",
    "                bbox_norm = np.zeros(INPUT_SIZE_BBOX, dtype=np.float32)\n",
    "                if (\n",
    "                    frame_db_idx != -1\n",
    "                    and \"bbox\" in ped_db\n",
    "                    and len(ped_db[\"bbox\"]) > frame_db_idx\n",
    "                ):\n",
    "                    try:\n",
    "                        x1, y1, x2, y2 = ped_db[\"bbox\"][frame_db_idx]\n",
    "                        img_w = video_db.get(\"width\", 1920)\n",
    "                        img_h = video_db.get(\"height\", 1080)\n",
    "                        if img_w > 0 and img_h > 0:\n",
    "                            cx = ((x1 + x2) / 2) / img_w\n",
    "                            cy = ((y1 + y2) / 2) / img_h\n",
    "                            w = (x2 - x1) / img_w\n",
    "                            h = (y2 - y1) / img_h\n",
    "                            if 0 < w and 0 < h and 0 <= cx <= 1 and 0 <= cy <= 1:\n",
    "                                bbox_norm = np.array([cx, cy, w, h], dtype=np.float32)\n",
    "                    except Exception:\n",
    "                        pass\n",
    "\n",
    "                feature_sequences[\"bbox\"].append(bbox_norm)\n",
    "\n",
    "            # ---------- pose -----------------------------------------------\n",
    "            if \"pose\" in self.active_streams:\n",
    "                pose_vector = np.zeros(INPUT_SIZE_POSE, dtype=np.float32)\n",
    "                vid_pose = self.all_pose_data.get(set_id, {}).get(video_id, {})\n",
    "                frame_pose = vid_pose.get(frame_num, {})\n",
    "                loaded_pose = frame_pose.get(ped_id)\n",
    "\n",
    "                if (\n",
    "                    loaded_pose is not None\n",
    "                    and isinstance(loaded_pose, np.ndarray)\n",
    "                    and loaded_pose.shape == (INPUT_SIZE_POSE,)\n",
    "                ):\n",
    "                    pose_vector = loaded_pose\n",
    "\n",
    "                feature_sequences[\"pose\"].append(pose_vector)\n",
    "\n",
    "            # ---------- ego-speed ------------------------------------------\n",
    "            if \"ego_speed\" in self.active_streams:\n",
    "                speed = ego_frame_data.get(\"OBD_speed\", 0.0)\n",
    "                if speed == 0.0:\n",
    "                    speed = ego_frame_data.get(\"GPS_speed\", 0.0)\n",
    "\n",
    "                speed_scaled = (\n",
    "                    speed - self.scalers.get(\"ego_speed_mean\", 0.0)\n",
    "                ) / self.scalers.get(\"ego_speed_std\", 1.0)\n",
    "                feature_sequences[\"ego_speed\"].append([speed_scaled])\n",
    "\n",
    "            # ---------- ego-acc --------------------------------------------\n",
    "            if \"ego_acc\" in self.active_streams:\n",
    "                acc_x = ego_frame_data.get(\"accX\", 0.0)\n",
    "                acc_y = ego_frame_data.get(\"accY\", 0.0)\n",
    "                acc_x_scaled = (\n",
    "                    acc_x - self.scalers.get(\"accX_mean\", 0.0)\n",
    "                ) / self.scalers.get(\"accX_std\", 1.0)\n",
    "                acc_y_scaled = (\n",
    "                    acc_y - self.scalers.get(\"accY_mean\", 0.0)\n",
    "                ) / self.scalers.get(\"accY_std\", 1.0)\n",
    "                feature_sequences[\"ego_acc\"].append([acc_x_scaled, acc_y_scaled])\n",
    "\n",
    "            # ---------- ego-gyro -------------------------------------------\n",
    "            if \"ego_gyro\" in self.active_streams:\n",
    "                gyro_z = ego_frame_data.get(\"gyroZ\", 0.0)\n",
    "                gyro_z_scaled = (\n",
    "                    gyro_z - self.scalers.get(\"gyroZ_mean\", 0.0)\n",
    "                ) / self.scalers.get(\"gyroZ_std\", 1.0)\n",
    "                feature_sequences[\"ego_gyro\"].append([gyro_z_scaled])\n",
    "\n",
    "            # ---------- ped_action -----------------------------------------\n",
    "            if \"ped_action\" in self.active_streams:\n",
    "                action = 0\n",
    "                if (\n",
    "                    frame_db_idx != -1\n",
    "                    and \"behavior\" in ped_db\n",
    "                    and \"action\" in ped_db[\"behavior\"]\n",
    "                    and len(ped_db[\"behavior\"][\"action\"]) > frame_db_idx\n",
    "                ):\n",
    "                    action = ped_db[\"behavior\"][\"action\"][frame_db_idx]\n",
    "                feature_sequences[\"ped_action\"].append([float(action)])\n",
    "\n",
    "            # ---------- ped_look -------------------------------------------\n",
    "            if \"ped_look\" in self.active_streams:\n",
    "                look = 0\n",
    "                if (\n",
    "                    frame_db_idx != -1\n",
    "                    and \"behavior\" in ped_db\n",
    "                    and \"look\" in ped_db[\"behavior\"]\n",
    "                    and len(ped_db[\"behavior\"][\"look\"]) > frame_db_idx\n",
    "                ):\n",
    "                    look = ped_db[\"behavior\"][\"look\"][frame_db_idx]\n",
    "                feature_sequences[\"ped_look\"].append([float(look)])\n",
    "\n",
    "            # ---------- ped_occlusion --------------------------------------\n",
    "            if \"ped_occlusion\" in self.active_streams:\n",
    "                occ = 0.0\n",
    "                if (\n",
    "                    frame_db_idx != -1\n",
    "                    and \"occlusion\" in ped_db\n",
    "                    and len(ped_db[\"occlusion\"]) > frame_db_idx\n",
    "                ):\n",
    "                    occ_val = ped_db[\"occlusion\"][frame_db_idx]\n",
    "                    occ = float(occ_val) / 2.0\n",
    "                feature_sequences[\"ped_occlusion\"].append([occ])\n",
    "\n",
    "            # ---------- traffic_light --------------------------------------\n",
    "            if \"traffic_light\" in self.active_streams:\n",
    "                state_int = 0\n",
    "                for obj_id, obj_data in traffic_db.items():\n",
    "                    if (\n",
    "                        obj_data.get(\"obj_class\") == \"traffic_light\"\n",
    "                        and \"frames\" in obj_data\n",
    "                        and \"state\" in obj_data\n",
    "                    ):\n",
    "                        try:\n",
    "                            tl_idx = obj_data[\"frames\"].index(frame_num)\n",
    "                            state_val = obj_data[\"state\"][tl_idx]\n",
    "                            if state_val != 0:\n",
    "                                state_int = state_val\n",
    "                                break\n",
    "                        except (ValueError, IndexError):\n",
    "                            continue\n",
    "                feature_sequences[\"traffic_light\"].append(\n",
    "                    to_one_hot(state_int, INPUT_SIZE_TL_STATE)\n",
    "                )\n",
    "\n",
    "            # ---------- static_context (per-frame replicate) ---------------\n",
    "            if \"static_context\" in self.active_streams:\n",
    "                feature_sequences[\"static_context\"].append(static_vec)\n",
    "\n",
    "        # -------------------------------------------------------------------\n",
    "        # convert to tensors / safe fallback\n",
    "        # -------------------------------------------------------------------\n",
    "        features = {}\n",
    "        try:\n",
    "            for name in self.active_streams:\n",
    "                features[name] = torch.tensor(\n",
    "                    np.asarray(feature_sequences[name], dtype=np.float32),\n",
    "                    dtype=torch.float32,\n",
    "                )\n",
    "        except Exception as e:\n",
    "            print(f\"Error converting features idx {idx}: {e}. Returning zeros.\")\n",
    "            features = {\n",
    "                name: torch.zeros(\n",
    "                    (self.seq_len, self._input_sizes_for_error.get(name, 1)),\n",
    "                    dtype=torch.float32,\n",
    "                )\n",
    "                for name in self.active_streams\n",
    "            }\n",
    "\n",
    "        return features, torch.tensor(label, dtype=torch.long)\n",
    "\n",
    "\n",
    "class BalancedDataset(Dataset):\n",
    "    \"\"\"\n",
    "    Memory-based balanced dataset generated by the prep notebook cell.\n",
    "    \"\"\"\n",
    "\n",
    "    def __init__(self, data_dict, active_streams, label_key=\"label\"):\n",
    "        self.active_streams = active_streams\n",
    "        self.label_key = label_key\n",
    "\n",
    "        if self.label_key not in data_dict or not data_dict[self.label_key]:\n",
    "            raise ValueError(f\"Label key '{self.label_key}' missing/empty.\")\n",
    "\n",
    "        self.num_samples = len(data_dict[self.label_key])\n",
    "        if self.num_samples == 0:\n",
    "            print(\"Warning: BalancedDataset initialized with zero samples.\")\n",
    "\n",
    "        # convert every requested stream to tensor\n",
    "        self.features = {}\n",
    "        for stream in self.active_streams:\n",
    "            if stream in data_dict and data_dict[stream]:\n",
    "                try:\n",
    "                    self.features[stream] = torch.tensor(\n",
    "                        np.asarray(data_dict[stream]), dtype=torch.float32\n",
    "                    )\n",
    "                except ValueError as e:\n",
    "                    raise ValueError(f\"Error converting stream '{stream}': {e}\")\n",
    "            else:\n",
    "                raise KeyError(f\"Stream '{stream}' missing or empty in data.\")\n",
    "\n",
    "        try:\n",
    "            self.labels = torch.tensor(\n",
    "                [lbl[0] for lbl in data_dict[self.label_key]], dtype=torch.long\n",
    "            )\n",
    "        except (IndexError, TypeError) as e:\n",
    "            raise ValueError(f\"Error converting labels: {e}\")\n",
    "\n",
    "        for stream in self.active_streams:\n",
    "            if len(self.features[stream]) != self.num_samples:\n",
    "                raise ValueError(\n",
    "                    f\"Len mismatch: '{stream}' ({len(self.features[stream])}) vs labels ({self.num_samples})\"\n",
    "                )\n",
    "\n",
    "    def __len__(self):\n",
    "        return self.num_samples\n",
    "\n",
    "    def __getitem__(self, idx):\n",
    "        feature_dict = {s: self.features[s][idx] for s in self.active_streams}\n",
    "        label = self.labels[idx]\n",
    "        return feature_dict, label\n",
    "\n",
    "\n",
    "class Attention(nn.Module):\n",
    "    def __init__(self, hidden_dim, attention_dim):\n",
    "        super().__init__()\n",
    "        self.attention_net = nn.Sequential(\n",
    "            nn.Linear(hidden_dim, attention_dim),\n",
    "            nn.Tanh(),\n",
    "            nn.Linear(attention_dim, 1),\n",
    "        )\n",
    "\n",
    "    def forward(self, lstm_output):\n",
    "        att_scores = self.attention_net(lstm_output).squeeze(2)\n",
    "        att_weights = torch.softmax(att_scores, dim=1)\n",
    "        context_vector = torch.sum(lstm_output * att_weights.unsqueeze(2), dim=1)\n",
    "        return context_vector, att_weights\n",
    "\n",
    "\n",
    "# -----------------------------------------------------------------------------#\n",
    "#                  ***  MODEL WITH WEIGHTED AVERAGE FUSION  ***                #\n",
    "# -----------------------------------------------------------------------------\n",
    "\n",
    "\n",
    "class MultiStreamWeightedAvgLSTM(nn.Module):\n",
    "    def __init__(\n",
    "        self,\n",
    "        input_sizes,\n",
    "        lstm_hidden_size,\n",
    "        num_lstm_layers,\n",
    "        num_classes,\n",
    "        attention_dim,\n",
    "        dropout_rate,\n",
    "        stream_names=None,\n",
    "    ):\n",
    "        super().__init__()\n",
    "\n",
    "        if not stream_names:\n",
    "            raise ValueError(\"stream_names cannot be empty.\")\n",
    "        self.stream_names = stream_names\n",
    "        self.num_active_streams = len(stream_names)\n",
    "        self.lstm_output_dim = lstm_hidden_size * 2  # Bi-LSTM doubles hidden\n",
    "\n",
    "        self.lstms = nn.ModuleDict()\n",
    "        self.attentions = nn.ModuleDict()\n",
    "\n",
    "        print(f\"Initializing Weighted-Avg model with streams: {self.stream_names}\")\n",
    "\n",
    "        for name in self.stream_names:\n",
    "            if name not in input_sizes:\n",
    "                raise KeyError(f\"Input size for stream '{name}' not provided.\")\n",
    "\n",
    "            in_size = input_sizes[name]\n",
    "            print(f\"  – Adding stream '{name}' (input {in_size})\")\n",
    "\n",
    "            self.lstms[name] = nn.LSTM(\n",
    "                in_size,\n",
    "                lstm_hidden_size,\n",
    "                num_lstm_layers,\n",
    "                batch_first=True,\n",
    "                dropout=dropout_rate if num_lstm_layers > 1 else 0,\n",
    "                bidirectional=True,\n",
    "            )\n",
    "            self.attentions[name] = Attention(self.lstm_output_dim, attention_dim)\n",
    "\n",
    "        # learnable fusion weights (one per stream)\n",
    "        self.fusion_weights = nn.Parameter(torch.ones(self.num_active_streams))\n",
    "\n",
    "        # classification head\n",
    "        fused_dim = self.lstm_output_dim\n",
    "        self.dropout = nn.Dropout(dropout_rate)\n",
    "        inter_dim = max(num_classes * 4, fused_dim // 2)\n",
    "        self.fc1 = nn.Linear(fused_dim, inter_dim)\n",
    "        self.relu = nn.ReLU()\n",
    "        self.fc2 = nn.Linear(inter_dim, num_classes)\n",
    "\n",
    "    # --------------------------------------------------------------------- #\n",
    "\n",
    "    def forward(self, x):\n",
    "        # gather context vectors ------------------------------------------------\n",
    "        ctx_vecs = []\n",
    "        for name in self.stream_names:\n",
    "            if name not in x:\n",
    "                # gracefully handle a missing stream during inference\n",
    "                zero_ctx = torch.zeros(\n",
    "                    x[next(iter(x))].shape[0],\n",
    "                    self.lstm_output_dim,\n",
    "                    device=x[next(iter(x))].device,\n",
    "                )\n",
    "                ctx_vecs.append(zero_ctx)\n",
    "                continue\n",
    "\n",
    "            lstm_out, _ = self.lstms[name](x[name])\n",
    "            context_vector, _ = self.attentions[name](lstm_out)\n",
    "            ctx_vecs.append(context_vector)\n",
    "\n",
    "        if len(ctx_vecs) != self.num_active_streams:\n",
    "            raise RuntimeError(\n",
    "                f\"context_vectors({len(ctx_vecs)}) != num_streams({self.num_active_streams})\"\n",
    "            )\n",
    "\n",
    "        # weighted average fusion ---------------------------------------------\n",
    "        stacked = torch.stack(ctx_vecs, dim=1)  # (B, N, D)\n",
    "        weights = torch.softmax(self.fusion_weights, dim=0).view(1, -1, 1)\n",
    "        fused = torch.sum(stacked * weights, dim=1)\n",
    "\n",
    "        # classification head --------------------------------------------------\n",
    "        out = self.dropout(fused)\n",
    "        out = self.relu(self.fc1(out))\n",
    "        out = self.dropout(out)\n",
    "        logits = self.fc2(out)\n",
    "        return logits\n",
    "\n",
    "\n",
    "# -----------------------------------------------------------------------------#\n",
    "#                       Training / evaluation helpers                          #\n",
    "# -----------------------------------------------------------------------------\n",
    "\n",
    "\n",
    "def train_epoch(model, dataloader, optimizer, criterion, device):\n",
    "    model.train()\n",
    "    total_loss = 0.0\n",
    "    all_preds, all_labels = [], []\n",
    "    active = model.stream_names\n",
    "\n",
    "    for feats, labels in tqdm(dataloader, desc=\"Training\", leave=False):\n",
    "        inputs = {n: feats[n].to(device) for n in active if n in feats}\n",
    "        labels = labels.to(device)\n",
    "\n",
    "        optimizer.zero_grad()\n",
    "        outputs = model(inputs)\n",
    "        loss = criterion(outputs, labels)\n",
    "        loss.backward()\n",
    "        optimizer.step()\n",
    "\n",
    "        total_loss += loss.item()\n",
    "        all_preds.extend(torch.argmax(outputs, 1).cpu().numpy())\n",
    "        all_labels.extend(labels.cpu().numpy())\n",
    "\n",
    "    return total_loss / max(1, len(dataloader)), accuracy_score(all_labels, all_preds)\n",
    "\n",
    "\n",
    "def evaluate_epoch(model, dataloader, criterion, device):\n",
    "    model.eval()\n",
    "    total_loss = 0.0\n",
    "    all_labels, all_preds, all_probs = [], [], []\n",
    "    active = model.stream_names\n",
    "\n",
    "    with torch.no_grad():\n",
    "        for feats, labels in tqdm(dataloader, desc=\"Evaluating\", leave=False):\n",
    "            inputs = {n: feats[n].to(device) for n in active if n in feats}\n",
    "            labels = labels.to(device)\n",
    "\n",
    "            outputs = model(inputs)\n",
    "            loss = criterion(outputs, labels)\n",
    "            total_loss += loss.item()\n",
    "\n",
    "            probs = torch.softmax(outputs, 1)\n",
    "            preds = torch.argmax(probs, 1)\n",
    "\n",
    "            all_labels.extend(labels.cpu().numpy())\n",
    "            all_preds.extend(preds.cpu().numpy())\n",
    "            all_probs.extend(probs.cpu().numpy())\n",
    "\n",
    "    avg_loss = total_loss / max(1, len(dataloader))\n",
    "    all_probs = np.asarray(all_probs)\n",
    "    all_labels = np.asarray(all_labels)\n",
    "    all_preds = np.asarray(all_preds)\n",
    "\n",
    "    acc = accuracy_score(all_labels, all_preds)\n",
    "    prec, rec, f1, _ = precision_recall_fscore_support(\n",
    "        all_labels, all_preds, average=\"binary\", pos_label=1, zero_division=0\n",
    "    )\n",
    "    auc = (\n",
    "        roc_auc_score(all_labels, all_probs[:, 1])\n",
    "        if len(np.unique(all_labels)) > 1\n",
    "        else float(\"nan\")\n",
    "    )\n",
    "\n",
    "    return {\n",
    "        \"loss\": avg_loss,\n",
    "        \"accuracy\": acc,\n",
    "        \"precision\": prec,\n",
    "        \"recall\": rec,\n",
    "        \"f1\": f1,\n",
    "        \"auc\": auc,\n",
    "    }\n",
    "\n",
    "\n",
    "def get_predictions_and_labels(model, dataloader, device):\n",
    "    model.eval()\n",
    "    labels_all, preds_all = [], []\n",
    "    active = model.stream_names\n",
    "\n",
    "    with torch.no_grad():\n",
    "        for feats, labels in tqdm(dataloader, desc=\"Generating CM Data\", leave=False):\n",
    "            inputs = {n: feats[n].to(device) for n in active if n in feats}\n",
    "            outputs = model(inputs)\n",
    "            preds = torch.argmax(outputs, 1)\n",
    "            labels_all.extend(labels.cpu().numpy())\n",
    "            preds_all.extend(preds.cpu().numpy())\n",
    "\n",
    "    return np.asarray(labels_all), np.asarray(preds_all)\n",
    "\n",
    "\n",
    "# -----------------------------------------------------------------------------#\n",
    "#                            Main execution block                              #\n",
    "# -----------------------------------------------------------------------------\n",
    "\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    print(\"--- Running Model Training/Evaluation with Weighted Fusion ---\")\n",
    "    print(f\"Active Streams: {ACTIVE_STREAMS}\")\n",
    "\n",
    "    # ------------------ load balanced data & scalers -------------------------\n",
    "    print(\"\\nLoading balanced training data …\")\n",
    "    try:\n",
    "        with open(BALANCED_DATA_PKL_PATH, \"rb\") as f:\n",
    "            balanced_train_data_dict = pickle.load(f)\n",
    "        with open(SCALERS_PKL_PATH, \"rb\") as f:\n",
    "            scalers = pickle.load(f)\n",
    "        print(\"   ✓ pre-processed data loaded.\")\n",
    "    except FileNotFoundError as e:\n",
    "        print(f\"ERROR: {e}.  Run the preprocessing cell first.\")\n",
    "        sys.exit(1)\n",
    "    except Exception as e:\n",
    "        print(f\"Error loading pre-processed data: {e}\")\n",
    "        sys.exit(1)\n",
    "\n",
    "    # -------------------------- load PIE database ----------------------------\n",
    "    print(\"\\nLoading PIE database cache for validation …\")\n",
    "    if not os.path.exists(PIE_DATABASE_CACHE_PATH):\n",
    "        raise FileNotFoundError(\"PIE database cache not found.\")\n",
    "\n",
    "    try:\n",
    "        with open(PIE_DATABASE_CACHE_PATH, \"rb\") as f:\n",
    "            pie_database = pickle.load(f)\n",
    "    except Exception as e:\n",
    "        raise RuntimeError(f\"Failed to load PIE database: {e}\")\n",
    "    print(\"   ✓ PIE database loaded.\")\n",
    "\n",
    "    # ------------------- create datasets / dataloaders -----------------------\n",
    "    print(\"\\nCreating Datasets and DataLoaders …\")\n",
    "    try:\n",
    "        train_dataset = BalancedDataset(\n",
    "            balanced_train_data_dict, ACTIVE_STREAMS, label_key=\"label\"\n",
    "        )\n",
    "        del balanced_train_data_dict\n",
    "\n",
    "        val_dataset = PIEDataset(\n",
    "            pie_database,\n",
    "            VAL_SETS_STR,\n",
    "            POSE_DATA_DIR,\n",
    "            SEQ_LEN,\n",
    "            PRED_LEN,\n",
    "            scalers,\n",
    "            ALL_POSSIBLE_STREAMS,  # provide all streams for val\n",
    "        )\n",
    "    except Exception as e:\n",
    "        print(f\"Error creating datasets: {e}\")\n",
    "        raise\n",
    "\n",
    "    if len(train_dataset) == 0 or len(val_dataset) == 0:\n",
    "        raise ValueError(\"One of the datasets is empty!\")\n",
    "\n",
    "    train_loader = DataLoader(\n",
    "        train_dataset,\n",
    "        batch_size=BATCH_SIZE,\n",
    "        shuffle=True,\n",
    "        num_workers=2,\n",
    "        pin_memory=True,\n",
    "    )\n",
    "    val_loader = DataLoader(\n",
    "        val_dataset,\n",
    "        batch_size=BATCH_SIZE,\n",
    "        shuffle=False,\n",
    "        num_workers=2,\n",
    "        pin_memory=True,\n",
    "    )\n",
    "    print(\"   ✓ DataLoaders ready.\")\n",
    "    del pie_database\n",
    "    gc.collect()\n",
    "\n",
    "    # ------------------------- initialise the model --------------------------\n",
    "    print(\"\\nInitialising model …\")\n",
    "    current_input_sizes = {}\n",
    "    SPECIAL = {\n",
    "        \"TRAFFIC_LIGHT\": \"TL_STATE\",\n",
    "        \"STATIC_CONTEXT\": \"STATIC\",\n",
    "        \"EGO_SPEED\": \"EGO_SPEED\",\n",
    "        \"EGO_ACC\": \"EGO_ACC\",\n",
    "        \"EGO_GYRO\": \"EGO_GYRO\",\n",
    "        \"PED_ACTION\": \"PED_ACTION\",\n",
    "        \"PED_LOOK\": \"PED_LOOK\",\n",
    "        \"PED_OCCLUSION\": \"PED_OCC\",\n",
    "    }\n",
    "\n",
    "    for s in ACTIVE_STREAMS:\n",
    "        name = f\"INPUT_SIZE_{SPECIAL.get(s.upper(), s.upper())}\"\n",
    "        if s == \"bbox\":\n",
    "            name = \"INPUT_SIZE_BBOX\"\n",
    "        elif s == \"pose\":\n",
    "            name = \"INPUT_SIZE_POSE\"\n",
    "\n",
    "        if name not in globals():\n",
    "            raise ValueError(f\"Input-size constant {name} not found.\")\n",
    "\n",
    "        current_input_sizes[s] = globals()[name]\n",
    "\n",
    "    model = MultiStreamWeightedAvgLSTM(\n",
    "        current_input_sizes,\n",
    "        LSTM_HIDDEN_SIZE,\n",
    "        NUM_LSTM_LAYERS,\n",
    "        NUM_CLASSES,\n",
    "        ATTENTION_DIM,\n",
    "        DROPOUT_RATE,\n",
    "        stream_names=ACTIVE_STREAMS,\n",
    "    ).to(DEVICE)\n",
    "\n",
    "    print(\"\\n--- Model architecture ---\")\n",
    "    print(model)\n",
    "    total_params = sum(p.numel() for p in model.parameters() if p.requires_grad)\n",
    "    print(f\"Trainable parameters: {total_params:,}\")\n",
    "    print(\"-\" * 30)\n",
    "\n",
    "    # ---------------- loss / optimiser --------------------------------------\n",
    "    print(\"\\nCalculating class weights …\")\n",
    "    train_labels = train_dataset.labels.tolist()\n",
    "    n0, n1 = train_labels.count(0), train_labels.count(1)\n",
    "    total = len(train_labels)\n",
    "    if total == 0:\n",
    "        w0, w1 = 1.0, 1.0\n",
    "    elif n0 == 0:\n",
    "        w0, w1 = 0.0, 1.0\n",
    "    elif n1 == 0:\n",
    "        w0, w1 = 1.0, 0.0\n",
    "    else:\n",
    "        w0, w1 = total / (2.0 * n0), total / (2.0 * n1)\n",
    "\n",
    "    class_weights = torch.tensor([w0, w1], dtype=torch.float32).to(DEVICE)\n",
    "    print(f\"Loss weights → 0: {w0:.2f}, 1: {w1:.2f}\")\n",
    "\n",
    "    criterion = nn.CrossEntropyLoss(weight=class_weights)\n",
    "    optimizer = optim.Adam(model.parameters(), lr=LEARNING_RATE)\n",
    "\n",
    "    best_val_f1 = -1.0\n",
    "    history = {\"train_loss\": [], \"val_loss\": [], \"train_acc\": [], \"val_acc\": [], \"val_f1\": []}\n",
    "    best_model_path = \"\"\n",
    "\n",
    "    # --------------------------- training loop -------------------------------\n",
    "    print(\"\\n--- Starting training ---\")\n",
    "    for epoch in range(NUM_EPOCHS):\n",
    "        t0 = time.time()\n",
    "\n",
    "        train_loss, train_acc = train_epoch(model, train_loader, optimizer, criterion, DEVICE)\n",
    "        metrics = evaluate_epoch(model, val_loader, criterion, DEVICE)\n",
    "\n",
    "        history[\"train_loss\"].append(train_loss)\n",
    "        history[\"val_loss\"].append(metrics[\"loss\"])\n",
    "        history[\"train_acc\"].append(train_acc)\n",
    "        history[\"val_acc\"].append(metrics[\"accuracy\"])\n",
    "        history[\"val_f1\"].append(metrics[\"f1\"])\n",
    "\n",
    "        print(f\"\\nEpoch {epoch + 1:02d}/{NUM_EPOCHS} – {time.time() - t0:.1f}s\")\n",
    "        print(f\"  train loss {train_loss:.4f} | acc {train_acc:.4f}\")\n",
    "        print(f\"  val   loss {metrics['loss']:.4f} | acc {metrics['accuracy']:.4f}\")\n",
    "        print(\n",
    "            f\"           prec {metrics['precision']:.4f} | rec {metrics['recall']:.4f} | f1 {metrics['f1']:.4f} | auc {metrics['auc']:.4f}\"\n",
    "        )\n",
    "\n",
    "        if metrics[\"f1\"] > best_val_f1:\n",
    "            best_val_f1 = metrics[\"f1\"]\n",
    "            best_model_path = f\"best_model_weighted_{'_'.join(sorted(ACTIVE_STREAMS))}_ep{epoch + 1}.pth\"\n",
    "            torch.save(model.state_dict(), best_model_path)\n",
    "            print(f\"  ✓ new best model saved → {best_model_path} (F1 {best_val_f1:.4f})\")\n",
    "\n",
    "    print(\"\\n--- Training finished ---\")\n",
    "\n",
    "    # --------------------------- plots ---------------------------------------\n",
    "    print(\"\\nPlotting training curves …\")\n",
    "    fig, ax = plt.subplots(1, 2, figsize=(12, 5))\n",
    "\n",
    "    ax[0].plot(range(1, NUM_EPOCHS + 1), history[\"train_loss\"], label=\"Train\")\n",
    "    ax[0].plot(range(1, NUM_EPOCHS + 1), history[\"val_loss\"], label=\"Val\")\n",
    "    ax[0].set_xlabel(\"Epoch\")\n",
    "    ax[0].set_ylabel(\"Loss\")\n",
    "    ax[0].set_title(\"Loss curve\")\n",
    "    ax[0].legend()\n",
    "    ax[0].grid(True)\n",
    "\n",
    "    ax[1].plot(range(1, NUM_EPOCHS + 1), history[\"train_acc\"], label=\"Train Acc\")\n",
    "    ax[1].plot(range(1, NUM_EPOCHS + 1), history[\"val_acc\"], label=\"Val Acc\")\n",
    "    ax[1].plot(range(1, NUM_EPOCHS + 1), history[\"val_f1\"], \"--\", label=\"Val F1\")\n",
    "    ax[1].set_xlabel(\"Epoch\")\n",
    "    ax[1].set_ylabel(\"Metric\")\n",
    "    ax[1].set_title(\"Accuracy & F1\")\n",
    "    ax[1].legend()\n",
    "    ax[1].grid(True)\n",
    "\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n",
    "\n",
    "    # ------------------- final evaluation (best model) -----------------------\n",
    "    print(\"\\n--- Final Evaluation on Validation set ---\")\n",
    "    if best_model_path and os.path.exists(best_model_path):\n",
    "        try:\n",
    "            model.load_state_dict(torch.load(best_model_path, map_location=DEVICE))\n",
    "            print(f\"Loaded best model: {best_model_path}\")\n",
    "        except Exception as e:\n",
    "            print(f\"Warning: could not load best model ({e}).  Using last epoch params.\")\n",
    "    else:\n",
    "        print(\"Warning: best model not found, using last epoch parameters.\")\n",
    "\n",
    "    final_metrics = evaluate_epoch(model, val_loader, criterion, DEVICE)\n",
    "    y_true, y_pred = get_predictions_and_labels(model, val_loader, DEVICE)\n",
    "    cm = confusion_matrix(y_true, y_pred, labels=[0, 1])\n",
    "\n",
    "    print(\"\\n--- Final metrics (Weighted Avg Fusion) ---\")\n",
    "    for k, v in final_metrics.items():\n",
    "        print(f\"{k:<10}: {v:.4f}\")\n",
    "\n",
    "    print(f\"(Best validation F1 during training: {best_val_f1:.4f})\")\n",
    "\n",
    "    ConfusionMatrixDisplay(cm, display_labels=[\"Not Crossing\", \"Crossing\"]).plot(\n",
    "        cmap=plt.cm.Blues\n",
    "    )\n",
    "    plt.title(\"Confusion Matrix\")\n",
    "    plt.show()\n",
    "\n",
    "    # ------------------- inspect learned fusion weights ----------------------\n",
    "    if hasattr(model, \"fusion_weights\"):\n",
    "        w = torch.softmax(model.fusion_weights, 0).detach().cpu().numpy()\n",
    "        print(\"\\n--- Learned fusion weights ---\")\n",
    "        for stream, weight in zip(model.stream_names, w):\n",
    "            print(f\"{stream:<15}: {weight:.4f}\")\n",
    "        print(\"-\" * 30)\n",
    "\n",
    "    print(\"\\n--- Script complete ---\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "88dd5139",
   "metadata": {
    "papermill": {
     "duration": 0.018907,
     "end_time": "2025-05-01T10:41:22.370612",
     "exception": false,
     "start_time": "2025-05-01T10:41:22.351705",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 6993690,
     "sourceId": 11201333,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 6993708,
     "sourceId": 11201362,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 6993722,
     "sourceId": 11201388,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 6993740,
     "sourceId": 11201422,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 6993794,
     "sourceId": 11201506,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 6993809,
     "sourceId": 11201543,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 7034191,
     "sourceId": 11255589,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 7127490,
     "sourceId": 11382982,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 7142036,
     "sourceId": 11402679,
     "sourceType": "datasetVersion"
    },
    {
     "modelId": 279383,
     "modelInstanceId": 258142,
     "sourceId": 302300,
     "sourceType": "modelInstanceVersion"
    },
    {
     "modelId": 283333,
     "modelInstanceId": 262207,
     "sourceId": 307831,
     "sourceType": "modelInstanceVersion"
    },
    {
     "modelId": 288527,
     "modelInstanceId": 267476,
     "sourceId": 316944,
     "sourceType": "modelInstanceVersion"
    },
    {
     "modelId": 297682,
     "modelInstanceId": 276781,
     "sourceId": 329886,
     "sourceType": "modelInstanceVersion"
    },
    {
     "modelId": 297702,
     "modelInstanceId": 276800,
     "sourceId": 329908,
     "sourceType": "modelInstanceVersion"
    },
    {
     "isSourceIdPinned": true,
     "modelId": 314775,
     "modelInstanceId": 294156,
     "sourceId": 352620,
     "sourceType": "modelInstanceVersion"
    }
   ],
   "dockerImageVersionId": 30918,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 10458.736086,
   "end_time": "2025-05-01T10:41:25.935756",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-05-01T07:47:07.199670",
   "version": "2.6.0"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "0088dc59cdaf4902854d2967de7fe211": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "01140d5d7eb547f1b124d79831820cf9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "0142cd5fc00f4a2b98e55502fa97a86a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "01a52981edda4b89a7e00e0fc31e6d13": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "01f3c8655b804184856173be64338de1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_e8c7267c5a8541e8ae8036cad53fe112",
       "placeholder": "​",
       "style": "IPY_MODEL_9b2f6e8749ec423abc32b48bc711d027",
       "tabbable": null,
       "tooltip": null,
       "value": " 2415/2416 [01:55&lt;00:00, 13.75it/s]"
      }
     },
     "01fb550e0d3143ca91f3eb72b0087541": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "02087960f9514ef6936dc6b9772b614b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "027d1c622c9a4eedbea323fd7a3c7a9d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "0333ce0773cd42bfb99119ed3d71224b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "039bf19037384eb293002f3330b4cf68": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "03afbb60f9e944e6acf8c1e275545c9f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "04bc014062c44d6dac43fdd25fbc5c42": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_06cc4b4aab0d440296f2b3fdd870d279",
       "placeholder": "​",
       "style": "IPY_MODEL_dd38b9ff640a4b25a025ec4c52997c67",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "0523de712d9f469a9397e2540d3f3c7a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "05d113b8d27f4beb977a5225db6c12cb": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "061359b09fc940e2be10041a64e2ec2f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "0645d984777e495d968b7661f13c05bc": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f7fd108dfd9c42d5872a231fc13e5230",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_02087960f9514ef6936dc6b9772b614b",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "06cc4b4aab0d440296f2b3fdd870d279": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "07286459f86443b29fef387b46a561df": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_74dabbb992574663a35e48cd7616224a",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_0dfa71fccd164b488f261b89def9a17f",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "0751807dd7e24d5dafa3fac5562ac15a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "07b519f824b44fef98eedca496368347": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_95a406fc8a034751a66aa0bff244949b",
       "placeholder": "​",
       "style": "IPY_MODEL_1a292dc167814c5a9a3c11274819a71a",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "07d3beb784bc449c8bdc7c445c083ad5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "086fee0df75147ffb9c4c24b45b13bd4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "08abfcd2ef574cb69dc8262ce69414a2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "08ba83d6c6264eebaf810cbf933d84da": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a1f41ac67d684d858406b75b312160b7",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_174ce980159a473a9d520c2764cfa06c",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "09bbddc321fd46cd89143523502bbb9a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_95f0c556a9dc40afb54d72a1fc375433",
        "IPY_MODEL_a93336609fad49eb91fb1572b362e518",
        "IPY_MODEL_d15254f721a44ed4b3af505f74811223"
       ],
       "layout": "IPY_MODEL_82316297f9bf4cb4bfe65cfe21134a57",
       "tabbable": null,
       "tooltip": null
      }
     },
     "0a23142e1d214e29a23603586b854686": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "0b0f112eba214cbca590f4a0f1787db2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "0bd1b36e9a9c41338b6da559acaf799e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_c7894a30369642baad99c89aa6fbe367",
        "IPY_MODEL_9ea9ed007e594289b5df9fb1c36659a1",
        "IPY_MODEL_403ce896337e41ddbf49275872e84e89"
       ],
       "layout": "IPY_MODEL_e812ca7512bf433a86ce5d631eaea6a5",
       "tabbable": null,
       "tooltip": null
      }
     },
     "0c7eba0ae37d4d7788f12ad51256a14f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "0c8a2df9fe3b42b88a826d8273210d69": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "0d4aae4e75b04451b8da391faac92c33": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_7f549b30060d4713aa0f27071941e6b3",
       "placeholder": "​",
       "style": "IPY_MODEL_32719035c1d44a8281c7d10515fcb4e8",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "0dae5c57ce6246518ad6435db88bb952": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ed8a45a2ffbd417eb067505ecc51043e",
       "placeholder": "​",
       "style": "IPY_MODEL_ac8c8f5fd9ec42f9a881df6840a17398",
       "tabbable": null,
       "tooltip": null,
       "value": " 2415/2416 [01:57&lt;00:00, 13.75it/s]"
      }
     },
     "0ddd94412b644693b4285b2f5ee5959b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "0dfa71fccd164b488f261b89def9a17f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "0f021da0360842feb86475be7d1b696d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6e1f28e6919d4f67be6dcf01e611c351",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_5d367d1fe0a64897ba82d0a877381b98",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "1048369367bc4334aaa2497d58b0d1dd": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "10f3cfc9be694a9483b0cc3aa6127bf3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1181cd5e42ca43789cd0bb631ad64977": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "11da5d940c5248ca8368958c12900ed6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_7bb9f92907fd4229bf1d330758be4177",
        "IPY_MODEL_c8e67bd7619a4882a661a8f8046c9f11",
        "IPY_MODEL_da6fd7c4011844eca9f1b485bbcad412"
       ],
       "layout": "IPY_MODEL_6cbedc6cfb4a4fa3a87fb268ab8bfacb",
       "tabbable": null,
       "tooltip": null
      }
     },
     "121d0b470a30454b9377916d4c2c6ec2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "1239c731d4fd43d38e353f4a70aab7db": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1245eb143974471da982c33ddcde5e5f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5bb08770818a44e9940a7cc4ffd2c78c",
       "placeholder": "​",
       "style": "IPY_MODEL_88f77ba682684031b29ba2a195f724e4",
       "tabbable": null,
       "tooltip": null,
       "value": " 2/? [00:00&lt;00:00, 14.63it/s]"
      }
     },
     "125d6db70d554c80abdbbd126907d27d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "13b07bfb771c49d780a346004f271d01": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "13e02b9407eb4bbcb8ffbc0132264413": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "145bddec9bdc4f2a9dc276fc1393674c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "156b20818a294e218cf88ae1b3734e76": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_77ec3d541ea044a98e1fe18fa9f6626a",
        "IPY_MODEL_db1b46b8539743789e75def2606d88de",
        "IPY_MODEL_bb4d3bdda928422ebe1a30eb77379e87"
       ],
       "layout": "IPY_MODEL_3a80c65fb851418e9cade455d4e20205",
       "tabbable": null,
       "tooltip": null
      }
     },
     "158d077a32024c268990465a668833e2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "162e981af33347c1bd30d0fd762aa859": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_64499cdbdc334ebca37b8b4e028a8793",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_62acb7a2743a4cedbcd45743f2982aa7",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "167daeb77b8f4dddb555345ecaab42a7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "174ce980159a473a9d520c2764cfa06c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "17e5c5eb660940c68c171576442ea2d5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f8725647a93c462b971bf0f0a6e0dee0",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_8e4b5a483ce747fdbb0133b2720dac20",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "17f3c6fbfa464679888fe1c0477937b7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "194406f4a6114ee688dbf68f3ced7c9a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "19f4ece6cddf4dc9b9f058467d65192f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_46932bfeee014706aab08e7d74a44418",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_5726691a10af4e3180a7c4568874722a",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "1a03cb59ac2d433c944decc3e67b37a9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_1181cd5e42ca43789cd0bb631ad64977",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_41680814e63e4a1196a9634ae82cf3e1",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "1a292dc167814c5a9a3c11274819a71a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "1a4a8f95fa6d45b6a9cc7ddb64fc5c12": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1b09a9c7f9994798b61b68414d713afb": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "1c448ed6e8bf48b6b61dc5f215419017": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_bc6e09a13b8242dcbc60d7dacbe5bb29",
       "placeholder": "​",
       "style": "IPY_MODEL_45f5829ba452449cb46a071aeccb6069",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "1cf13770155341ba9ffe57a123326bc7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "1cfc0e0aa9d54547812bf1d1c662ff18": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1d0919489fad455ea603479f17537904": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1d1a1b1a33ac4336a86417e639527dea": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1d4acee8bd194e65bf75fa8320868f9f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_5f1e9efee2114f8e9843bf452fef5369",
        "IPY_MODEL_faa958011250474cb7f665ee396650b0",
        "IPY_MODEL_c2865cac96824112b0b3b63a149c961e"
       ],
       "layout": "IPY_MODEL_317ddd694c614b879cd62ee089426947",
       "tabbable": null,
       "tooltip": null
      }
     },
     "1de5db41e4184db7a903fba45a38c714": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1e0f6e4f300340dcbcb88eb98addbdd7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ae45633421c84117902f0cc2aadaae5b",
       "placeholder": "​",
       "style": "IPY_MODEL_eccb320515574685b28b1d6a8916e6a6",
       "tabbable": null,
       "tooltip": null,
       "value": ""
      }
     },
     "1e1476ece355443485b39b3dc2fe3cf1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_1d0919489fad455ea603479f17537904",
       "placeholder": "​",
       "style": "IPY_MODEL_48be5feb932f4eb0b0086e120ba54e9d",
       "tabbable": null,
       "tooltip": null,
       "value": " 2415/2416 [01:56&lt;00:00, 12.14it/s]"
      }
     },
     "1e154570ca0d42a98cecd03e30ae98c8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1e6ae408da43488c97dbefe94d9b08e3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a1fb2b5d00144542a194cb94f08b8478",
       "placeholder": "​",
       "style": "IPY_MODEL_7c85cd2f86764d919d92a807c6c53657",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "1e920fe3804649af840bb009cceddc2c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "1ee6d3a6cb204c54bc6fdb23710fd6c3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1ff0d0a8b3c54b99b7d2da34a2bbf28a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_2169f7d6431b46228e09eb89b4049a04",
        "IPY_MODEL_93c5c779dd064fe6a0833682a11d0fbf",
        "IPY_MODEL_7e4b6055ce1f4e7890142717843d82f4"
       ],
       "layout": "IPY_MODEL_67a9bdd0002d44e6adc66d1d1bd2ab59",
       "tabbable": null,
       "tooltip": null
      }
     },
     "2007c82c9bb84fbcbadf5ac994adcf49": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_0523de712d9f469a9397e2540d3f3c7a",
       "placeholder": "​",
       "style": "IPY_MODEL_6bc38d0d9eac49ebbbe8c066d5920f19",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "20f46512e3bf4eac9c5f4bfdf88d30fb": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2169f7d6431b46228e09eb89b4049a04": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_d9872076ddb041f1a90e6266b97c958a",
       "placeholder": "​",
       "style": "IPY_MODEL_6d1b46ed22cd4db3ba933ef2db0fdafb",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "21796750f2c343d48e7c9220b8ef64ff": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_34678a385b944db8a8f66721add958c8",
       "placeholder": "​",
       "style": "IPY_MODEL_361ae0c249fc477bb1a4709724e93d1e",
       "tabbable": null,
       "tooltip": null,
       "value": " 3435/3436 [03:14&lt;00:00, 17.19it/s]"
      }
     },
     "227f22245f244efb913e588e8457b131": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6d97851596944687bb3e727ef04ad6c1",
       "placeholder": "​",
       "style": "IPY_MODEL_65d12832a6b54f95ae24b8c88199b785",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "238031b588ba4a68be98bfdabb3c7dc5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "24561a34e5db4146b66223715ef988eb": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "24a267f0e95f455fa78bb29da53e0087": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "255cf3ca175848deb8e9778542995e5c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f72cb8e9fbab4aa591abf171fa49c6b8",
       "placeholder": "​",
       "style": "IPY_MODEL_c7b8b3316cb64e959a5ff67354950af8",
       "tabbable": null,
       "tooltip": null,
       "value": " 2414/2416 [01:54&lt;00:00, 13.34it/s]"
      }
     },
     "25bd5f78ee8a4aa6b23285500dccd255": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_1239c731d4fd43d38e353f4a70aab7db",
       "placeholder": "​",
       "style": "IPY_MODEL_a792e20844c64279b0adb68717bcb3ca",
       "tabbable": null,
       "tooltip": null,
       "value": " 2415/2416 [01:55&lt;00:00, 13.25it/s]"
      }
     },
     "25f85c9e63ce4f99ae5a0cdf7d715a49": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "268f6672e3b5460baf12715de1ca90b5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "274ef7c0055a42f29133b07720522c6e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "275350d849424917a4f5c89585ea4edd": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "27611fdc10ed4286b0b507ebb9abd17a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "27c3f9f31d06431da5b2e3e54b938d36": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "27d8fa0359dc4f118d2902a263b55390": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "27decd275eca4821af0d2eb0aa9074ee": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_01140d5d7eb547f1b124d79831820cf9",
       "placeholder": "​",
       "style": "IPY_MODEL_3d4595af25dd44cb8c7157360076f06f",
       "tabbable": null,
       "tooltip": null,
       "value": " 3434/3436 [03:15&lt;00:00, 17.13it/s]"
      }
     },
     "28751cc371194152b32f051ad48bc4ce": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "28978a570bd3465ca5a863f025de3631": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "28b53d71e164455982f23fc83ca72360": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_1e0f6e4f300340dcbcb88eb98addbdd7",
        "IPY_MODEL_98059c76dd0b4ebbb51b862db26e1ee2",
        "IPY_MODEL_1245eb143974471da982c33ddcde5e5f"
       ],
       "layout": "IPY_MODEL_86fa45cef79e486c9a992f9adb0506b5",
       "tabbable": null,
       "tooltip": null
      }
     },
     "2944a09361444f91a171b64649116746": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_7eebafbf1f394615a9edf041b7f20d9f",
        "IPY_MODEL_7c880a78c76e4bdabd98443fff2f1782",
        "IPY_MODEL_21796750f2c343d48e7c9220b8ef64ff"
       ],
       "layout": "IPY_MODEL_0ddd94412b644693b4285b2f5ee5959b",
       "tabbable": null,
       "tooltip": null
      }
     },
     "2974b6517c3747caad8a990b00079225": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "29770b3254dd4553a79064d56d26e9a7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "2996a69ad23b47d0982c0fd06afbef6b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "29cf9d12b6ac408d90fef368056c9a19": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_fa260b17bf7c4a8997d936edd14cc216",
       "placeholder": "​",
       "style": "IPY_MODEL_4fb962c6db3145d19df9fc2e5c48bf9f",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "2b3012cc42734a8daa946f1ad00cfc70": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9cd34299477d423b90a4585badfdff9c",
       "placeholder": "​",
       "style": "IPY_MODEL_d361c22f1df54587be4337af4402e554",
       "tabbable": null,
       "tooltip": null,
       "value": " 3434/3436 [03:13&lt;00:00, 17.37it/s]"
      }
     },
     "2bd216eede7448d5a7c403bb9e1d9c2b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2be23e1fc00c4147b73416a04e9d389b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "2bf4ccae45534c168b2ec42e8aa341e0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "2c02b3aec6414ccea16d11d3ac0f684c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "2c9e4e22461c43b6a094593e46b05fc6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2cd1409ba177416ba0be2956a2bed284": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_b9991af30d1e4dbf9d5199b933fa1933",
       "placeholder": "​",
       "style": "IPY_MODEL_c7cffadbd4dd4176849cc9a36ac87740",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "2d8012b3c3e44f86b411c8149c009b9b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6870ae2cd4b14340a65d189bf0c62ff3",
       "placeholder": "​",
       "style": "IPY_MODEL_4680970e2fab4225898f8ff7fcaf1ef2",
       "tabbable": null,
       "tooltip": null,
       "value": " 2414/2416 [01:56&lt;00:00, 12.17it/s]"
      }
     },
     "2d8176a209974022aad0f00cd5890e0b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_2cd1409ba177416ba0be2956a2bed284",
        "IPY_MODEL_ef7dbe8a201149b1b871dc5d3eaaa333",
        "IPY_MODEL_afa00979aff748ba980e39e35c76e3f4"
       ],
       "layout": "IPY_MODEL_63b66ae2aada40d484cb925f449e06a1",
       "tabbable": null,
       "tooltip": null
      }
     },
     "2dc2f93372754c878884f227a7ea0120": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2dded83948024fcf89da5841c5c7cccb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_83d6ae2b2e9c42859e1f7dd875e334c7",
       "max": 333454.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_72e7291076ed42a68b398e25c78d9fb2",
       "tabbable": null,
       "tooltip": null,
       "value": 333454.0
      }
     },
     "2e6bc7de596e4435ba948ffeb41d4b3a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_68fc41b9e7cd47dea04d735861af1281",
       "placeholder": "​",
       "style": "IPY_MODEL_9807a0333312401dbabeb8c7f8b23c73",
       "tabbable": null,
       "tooltip": null,
       "value": " 2416/2416 [01:55&lt;00:00, 16.37it/s]"
      }
     },
     "2ec1dc57a3fb4e3ea3d1dadd9e071736": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2f18079d6aa74a8d84ebbf2eafd185dd": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2f3a3d9a17e740a4a660d2e667e1339d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "2f3d02bd1c2b42d48fdba0783c383071": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_05d113b8d27f4beb977a5225db6c12cb",
       "placeholder": "​",
       "style": "IPY_MODEL_7e96f9269b744a8eae9de2b021f27951",
       "tabbable": null,
       "tooltip": null,
       "value": ""
      }
     },
     "2f7710eb7a2044e1abdf9be463afeeff": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_7c8741aca3574d44873ea541278a9bbe",
       "placeholder": "​",
       "style": "IPY_MODEL_8afd808b2b924edaa5284cc9432f108d",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "2fe86786942c42d380793db39fd444b4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_07b519f824b44fef98eedca496368347",
        "IPY_MODEL_f520356064544d84bcb1b3b2d8418f4e",
        "IPY_MODEL_719b1cb25b6c46ebaa282eae4679f55f"
       ],
       "layout": "IPY_MODEL_29770b3254dd4553a79064d56d26e9a7",
       "tabbable": null,
       "tooltip": null
      }
     },
     "30037537605648fea5ed3d1d754e4877": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_691294661cb14f899382a83374a181eb",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_ceb9409971be4dd5897c038729be840e",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "30724b1c66464cad9a2002377a8dd78a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "307d458c02e745278477191519075c8f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "30a663836dd04df9ada6e1ad95681aef": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "30b6d35018da4aaf876d04cd133d88ba": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "30c38a90da554f5bab5f924df6bbb5b1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f0c5e5f8ab0844ae8e3bb946066ea34c",
       "placeholder": "​",
       "style": "IPY_MODEL_b9ee267090094cf69504e558e5bfc1d4",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "30e69984f371433eaa0523fba6941829": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_dbcc61d9d8184367a4401fd16bda1405",
        "IPY_MODEL_ce012a9248db40ca973123d2668e9d8a",
        "IPY_MODEL_2d8012b3c3e44f86b411c8149c009b9b"
       ],
       "layout": "IPY_MODEL_cd683925b56549cc90be1cecb24a3c2c",
       "tabbable": null,
       "tooltip": null
      }
     },
     "3130347a13a549058ef55288d2b027a3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "3131dc5bb28b4f52acf1a82bf73caaff": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "31540c29ff9a41c7b1073fd1564bb0e8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "317ddd694c614b879cd62ee089426947": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "324075aadcee402db64663eb041fde1d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "32629850f07544959441d6225c167c41": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_34325c62d53a41258912633fc4a3356e",
       "placeholder": "​",
       "style": "IPY_MODEL_0333ce0773cd42bfb99119ed3d71224b",
       "tabbable": null,
       "tooltip": null,
       "value": " 2414/2416 [01:57&lt;00:00, 12.90it/s]"
      }
     },
     "32719035c1d44a8281c7d10515fcb4e8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "329e7f39afc24325b3d8221a9dd615f0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "33429b3149b048898fe7cfbfe88254b6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "34325c62d53a41258912633fc4a3356e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "34678a385b944db8a8f66721add958c8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3475d28408bf4eb4964eed707b5f5d7b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "35d8ab7d415f4b0b8b43a6777d260163": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "35e5231fe4df46a7a6760a84ae303276": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_7ccf1cbc75e84421be350a5b281bc484",
       "placeholder": "​",
       "style": "IPY_MODEL_a27cfe8637bb4c7e9fae4799c4179221",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "361ae0c249fc477bb1a4709724e93d1e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "3826c500d1764be889a6084879583186": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3833cc0fc5de480ca3f7dd1f4117d81b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_bdb983fbb1544f55aef27b8760058d70",
        "IPY_MODEL_6564f5bf58c34abab71e030d49f3cf12",
        "IPY_MODEL_dd4373cb27f34e6c9fcd29527cbeace2"
       ],
       "layout": "IPY_MODEL_b5d7804d8a5148979f2c5b954551101c",
       "tabbable": null,
       "tooltip": null
      }
     },
     "39779e21b2a14df182d01b80bd0daf12": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_557564ad04d24aa4a9831096b5e5fbbe",
        "IPY_MODEL_3feb1369ee0247408c550d24ee03b206",
        "IPY_MODEL_a128f535b5104a09b0bf2f0a3294f755"
       ],
       "layout": "IPY_MODEL_bf7e700193914896891d3b97b0ddac2c",
       "tabbable": null,
       "tooltip": null
      }
     },
     "3985118a4c0e4ba99126da98f15e1724": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_8673a49f73d747aeb3f5aa9d567fb482",
       "placeholder": "​",
       "style": "IPY_MODEL_ce828a9eacce4749a7e27fee60d93123",
       "tabbable": null,
       "tooltip": null,
       "value": " 3434/3436 [03:15&lt;00:00, 16.94it/s]"
      }
     },
     "39e3f872f1b145e18de9dacefc1e6c36": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5e6ec4c97ed441a1a495ce92e30d2414",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_42dffa28fae94d37bc3c331fe2804e01",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "3a2481c34f27416cbd9a1b3a54c39b5d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3a670bfce6bc4f2abb41460ce8b67484": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "3a80c65fb851418e9cade455d4e20205": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "3b93acc6659643caa72368558c99c6a2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3ba7d4b96694483bb85c33bfee1dc96f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "3bcde3bdcf3f42088eae5bc12f076186": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_cb55ba4138c144cc9c2acbf8901f56c1",
        "IPY_MODEL_86b062fc146d4736a36967907c03f935",
        "IPY_MODEL_fbfbc96afe5a4523a74846976e2bdac6"
       ],
       "layout": "IPY_MODEL_e060644c32644c90966f7c149e82637b",
       "tabbable": null,
       "tooltip": null
      }
     },
     "3bd0b769ec4e47018e11bad6efa46ad0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_cf2851d65f1345dda6ef6b3dc9a44900",
       "placeholder": "​",
       "style": "IPY_MODEL_6e967562b9d34cf5ab449d400e8eacc7",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "3c327ef8e8ec4c47b08c2d48133d80a3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "3c6c9907327e454193e04a3faaa8e023": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3c81732d029f4ccaa946096c02a440cc": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "3d12600a3f304458978fec51f5edefa0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "3d3e2448f78d445892163d6775251b7d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3d4595af25dd44cb8c7157360076f06f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "3e3474cac0f446e8af52f2f6d64ad8ff": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_3131dc5bb28b4f52acf1a82bf73caaff",
       "placeholder": "​",
       "style": "IPY_MODEL_ed6972373e31427295b4e2e9f53615c4",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "3e90d83ed29d40b9ba3f600514fc10de": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "3f243134d0e44c27ae0d34501881f22b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3fe8927883b04324bcf5b3a6fab89e56": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_0d4aae4e75b04451b8da391faac92c33",
        "IPY_MODEL_6eb3bc95bbba4b9b96e7b8aeb267eea7",
        "IPY_MODEL_5639f4356a8c4f519aa3c5cb5d670c1c"
       ],
       "layout": "IPY_MODEL_df0e74c0eca44f298e6cda5f863a85cb",
       "tabbable": null,
       "tooltip": null
      }
     },
     "3feb1369ee0247408c550d24ee03b206": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_afc3ca6c81c048ddbd4c268b84c474a7",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_27611fdc10ed4286b0b507ebb9abd17a",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "40035063abc64db4b3dc5ec43e7e687d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "403ce896337e41ddbf49275872e84e89": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_7cf490bd4df04626842f6ade10d4419c",
       "placeholder": "​",
       "style": "IPY_MODEL_d65d3d6289944113918c6ec44e9e1ea3",
       "tabbable": null,
       "tooltip": null,
       "value": " 3435/3436 [03:15&lt;00:00, 16.99it/s]"
      }
     },
     "40dfca0362dc494986fd6d275d707244": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "41680814e63e4a1196a9634ae82cf3e1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "41a477e537f746cf9e4f54d2b73c6d6d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_c9b414367ca44632af68016e16a5c2b3",
        "IPY_MODEL_07286459f86443b29fef387b46a561df",
        "IPY_MODEL_3985118a4c0e4ba99126da98f15e1724"
       ],
       "layout": "IPY_MODEL_5be6965a664246f2bed85d8db359b740",
       "tabbable": null,
       "tooltip": null
      }
     },
     "421a3886fec24b7eb5830dbbc0f27e5d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "423808b909384643b0d86bf34a08bac0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ac46071d4aff41a0a3e8b38aeb0ef8f8",
       "placeholder": "​",
       "style": "IPY_MODEL_dee18550fa7f41ca9e3555dc2e4dad18",
       "tabbable": null,
       "tooltip": null,
       "value": " 2416/2416 [01:56&lt;00:00, 15.42it/s]"
      }
     },
     "423e287517c44812bfc5becfdead5d95": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a91e38fbc02942e6a1956931434319ef",
       "placeholder": "​",
       "style": "IPY_MODEL_e135f02869424b1baf074e4f0d0a60cc",
       "tabbable": null,
       "tooltip": null,
       "value": " 2416/2416 [01:57&lt;00:00, 15.65it/s]"
      }
     },
     "425c6eacc9d645a4b7492002bb4fd642": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "42d8481e7b5d401fb3741ec73c606c55": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_2f7710eb7a2044e1abdf9be463afeeff",
        "IPY_MODEL_baaa716f95c744c69eb847bf6c0681ee",
        "IPY_MODEL_8f7ef7d973714bd8907ed29319c7f23d"
       ],
       "layout": "IPY_MODEL_8019d285e22e45d1a953102a8f155b22",
       "tabbable": null,
       "tooltip": null
      }
     },
     "42dffa28fae94d37bc3c331fe2804e01": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "43796452de00430cac771a9c38539cd0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "43f2b4e5382d4bf0a155cbc4b6e3d7a6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "44c81228ac94417a86c745489d4b4582": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "44f1fa32028b43abbb0fc4061eb245cb": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "45c49cf0098b4573805638e04d4c790e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_4e84d5bd0cc546e094a8c669a21d3b35",
       "placeholder": "​",
       "style": "IPY_MODEL_0142cd5fc00f4a2b98e55502fa97a86a",
       "tabbable": null,
       "tooltip": null,
       "value": " 2415/2416 [01:56&lt;00:00, 13.64it/s]"
      }
     },
     "45f5829ba452449cb46a071aeccb6069": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "462174c944164e3781606521a58b595e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6ecb8ba6ef6d454296e786d3f373a5ee",
       "placeholder": "​",
       "style": "IPY_MODEL_8879f46a2deb4260a10aab86c8cb9e73",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "4680970e2fab4225898f8ff7fcaf1ef2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "46932bfeee014706aab08e7d74a44418": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "473a746bd0c248c8aaa3e6c38c2b7936": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_4744f66e95ef452095b23a42a5c21d50",
       "placeholder": "​",
       "style": "IPY_MODEL_b4b7743b0ca5416a99f9816e36e6ddc4",
       "tabbable": null,
       "tooltip": null,
       "value": " 3436/3436 [03:15&lt;00:00, 17.88it/s]"
      }
     },
     "4744f66e95ef452095b23a42a5c21d50": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "47bd652c23c94fa6b17f4419906c628e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "info",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_7bda56cab73f45a9bf5680a5c749cc87",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_56b00cdef1a440f1a83bc4e644e37299",
       "tabbable": null,
       "tooltip": null,
       "value": 1.0
      }
     },
     "481210b60f994e9ab60e4ba73b43ca9b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "20px"
      }
     },
     "48ab4d6bc2104a28b9e9ace9bc7aae0e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "48be5feb932f4eb0b0086e120ba54e9d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "490f01a7faa3459585086e2dda47ea5b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "491b274a7cf0422dac1dc2f09f911ec3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a2d8d4d9ac614c13b59c67bf27d982a4",
       "placeholder": "​",
       "style": "IPY_MODEL_544aa6541fb248beb627058c0ee3465e",
       "tabbable": null,
       "tooltip": null,
       "value": " 1/? [00:00&lt;00:00,  6.29it/s]"
      }
     },
     "4927807207e74a509e96efa6f193f488": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_e0c7f02c594f4baab81095f1334405ad",
       "placeholder": "​",
       "style": "IPY_MODEL_6f32a5c8386548f3bf2c6e0086c27dc8",
       "tabbable": null,
       "tooltip": null,
       "value": " 3434/3436 [03:15&lt;00:00, 17.00it/s]"
      }
     },
     "494576370cf144f3ab9e7f043665e460": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "49a1c87ad10e4933a9b17581979effda": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "49de62d0af504c5e9be7128a4c5242b6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "49fd6922a7fb4dbc89e355f1d5164966": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_77e0faa89bab4784ac8267cfc996802d",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_92455efd59314903ab1196019028fb03",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "4a271786c0224764af4070e792fb5657": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "4bcdac5b6f9145c5804439a65b2af505": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_81b9e8b9680c463880a9b9435b102d94",
        "IPY_MODEL_47bd652c23c94fa6b17f4419906c628e",
        "IPY_MODEL_491b274a7cf0422dac1dc2f09f911ec3"
       ],
       "layout": "IPY_MODEL_ef6b9c5bc46d49faa8e1b549f03b32b4",
       "tabbable": null,
       "tooltip": null
      }
     },
     "4c539d5d124b495fb47277e95d4b478f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "4c89a6a7e14b49e5b592d4b92a8869cb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_2f3d02bd1c2b42d48fdba0783c383071",
        "IPY_MODEL_ac70dba5e2924050a43c527218c02b0c",
        "IPY_MODEL_d82732f843e642a5b186f8bc70c1aab3"
       ],
       "layout": "IPY_MODEL_28751cc371194152b32f051ad48bc4ce",
       "tabbable": null,
       "tooltip": null
      }
     },
     "4d70782b0d8b4baa97f8a5172357fef5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_d9f75b0c6d554335881e63dc720ecd79",
       "placeholder": "​",
       "style": "IPY_MODEL_194406f4a6114ee688dbf68f3ced7c9a",
       "tabbable": null,
       "tooltip": null,
       "value": " 2416/2416 [01:55&lt;00:00, 15.76it/s]"
      }
     },
     "4e84d5bd0cc546e094a8c669a21d3b35": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "4fb962c6db3145d19df9fc2e5c48bf9f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "4fd570b13a444f509384582398d3500d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "50d1ca0af69644b1a2c72fc7080ed29c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_10f3cfc9be694a9483b0cc3aa6127bf3",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_a0659a70ff7949259ee51794b8b54c6e",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "50d3c9cbd7a947f59c07587f13bdc74c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "50fdda11fce14539bd3de2cbde172f84": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_1cfc0e0aa9d54547812bf1d1c662ff18",
       "placeholder": "​",
       "style": "IPY_MODEL_35d8ab7d415f4b0b8b43a6777d260163",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "510d24c2ce3b4d16bfa6d331a1cac4cb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "521f56d5db97446db85e6cd85660b9e7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_57ec31d7bd274bcba136c4b12d3afff5",
       "placeholder": "​",
       "style": "IPY_MODEL_7e34ccd943974860b1f704ebb4169464",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "52fe9cda89f342949f95dcf9984f1747": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "534ec1ac9b29426d89e78d68aa59d143": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2ec1dc57a3fb4e3ea3d1dadd9e071736",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_44c81228ac94417a86c745489d4b4582",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "541f2ca9a1f646dd82c6754323161f63": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "5436b98924524deab707d90807c040b8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "544aa6541fb248beb627058c0ee3465e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "54a04e97807e49a89101b0e57110745a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "550c096b178d437cb82cc5605b3fb6ae": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "5558fb06a35648de98ac9555f50eed24": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "5571038b23cb4ea9a2cb4c147646ce0b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "557564ad04d24aa4a9831096b5e5fbbe": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_1d1a1b1a33ac4336a86417e639527dea",
       "placeholder": "​",
       "style": "IPY_MODEL_145bddec9bdc4f2a9dc276fc1393674c",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "5639f4356a8c4f519aa3c5cb5d670c1c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_7b8b4d50fd3e4652ba13c9d11e2aeaa8",
       "placeholder": "​",
       "style": "IPY_MODEL_ac20567ed919425ebdd00583d8e86579",
       "tabbable": null,
       "tooltip": null,
       "value": " 3436/3436 [03:15&lt;00:00, 17.87it/s]"
      }
     },
     "5656e734f5e24d158fe9a4e3fd4e1194": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "56b00cdef1a440f1a83bc4e644e37299": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "5726691a10af4e3180a7c4568874722a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "575bf5dc43c84025aa5de13a9272541d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "5775e66c29534e03828018ff75d654e0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "57ec31d7bd274bcba136c4b12d3afff5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "58fb85d8b98c4dd0bbbf3f16387398fb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_fb8036e8d5944d91b80c793e21183832",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_99f593a4cbc748c78b9af1161a4d0d3f",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "594d0f0648074a1ab8202e823c81ec9c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_75a91c68368b43fa8660b94c0eadc4c7",
       "placeholder": "​",
       "style": "IPY_MODEL_2996a69ad23b47d0982c0fd06afbef6b",
       "tabbable": null,
       "tooltip": null,
       "value": " 3435/3436 [03:15&lt;00:00, 16.99it/s]"
      }
     },
     "594f724e77514f85bb210cea7deb9c5f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ec058e187f0747e4bf4c45907433d180",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_cf379a4747de4754a640f1ccee2dceed",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "595993e898d14934bfed278c8ee5b0b4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "599a09d9d704413988c0b764ae0b4f04": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "599c2765ba244b41b0983575c1c3e0b3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "59b8713093e841d0b9ed2ed696ac40a8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "59d8b47f55d04ee98d1081f31f830687": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_421a3886fec24b7eb5830dbbc0f27e5d",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_64a2f4451e8c42779e659d39ec14138d",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "5a0c282cb36d46d39afcfd2af3eeb008": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5a66a29485bc47a0be38e9cf89439140": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_ef275e04a7d74d1d84eb8d81b5ad263f",
        "IPY_MODEL_68e7108599844d968b6c89924ea065d1",
        "IPY_MODEL_423808b909384643b0d86bf34a08bac0"
       ],
       "layout": "IPY_MODEL_db51fb715cd54dfb94d012229a3479b5",
       "tabbable": null,
       "tooltip": null
      }
     },
     "5a72491ad8744a228a3d497e8638e156": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "5a86a0e168284ae09a54c301f8ff6b17": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "5af02d648fb94e77a6e20d4f31a4a452": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a61d4881b31842a3b88eca80f0605eec",
       "placeholder": "​",
       "style": "IPY_MODEL_67c6a0baafcc4e2ebc1b5cb96b8fdc58",
       "tabbable": null,
       "tooltip": null,
       "value": " 3435/3436 [03:14&lt;00:00, 17.03it/s]"
      }
     },
     "5bac0254245f4e559f14f8f74e7c327e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5bb08770818a44e9940a7cc4ffd2c78c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5bb4dadde5ea4eaca75c050aac8c109f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "5be6965a664246f2bed85d8db359b740": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "5d0c04dfc54d4fecb204359ca52890b5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_c39d1e7846324263a0c7b04555147d9f",
        "IPY_MODEL_df11b56ed53145019b7e9462d37cf9e0",
        "IPY_MODEL_32629850f07544959441d6225c167c41"
       ],
       "layout": "IPY_MODEL_ac28a4c1ba8f4741ad63c45271109768",
       "tabbable": null,
       "tooltip": null
      }
     },
     "5d367d1fe0a64897ba82d0a877381b98": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "5d4b6983b26d44ab99296eba5205e843": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5e01014c728746db84deeae531f29a65": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "5e6ec4c97ed441a1a495ce92e30d2414": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5e9ae38898d5428898655b5f9331b61a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "5e9e38e10412495bb98e345249dbef02": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_94d05f8c381340cb95968c78e021d89e",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_cf3129b0357b4eef984bc3b6d31177e3",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "5ea27b3131f14fb1aeab05f93e055f12": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_3b93acc6659643caa72368558c99c6a2",
       "placeholder": "​",
       "style": "IPY_MODEL_2bf4ccae45534c168b2ec42e8aa341e0",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "5f14571cca714b58a33f55668f048c7a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5f1e9efee2114f8e9843bf452fef5369": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_caa346f68b43414abebb8b8b729341a4",
       "placeholder": "​",
       "style": "IPY_MODEL_3a670bfce6bc4f2abb41460ce8b67484",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "5f3371f9a2744c6183b1fcdb413758a8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9b4f44a9ca0c4e82b87419b8db878856",
       "placeholder": "​",
       "style": "IPY_MODEL_9eb8157ecb2244e094f5461c071cf3ab",
       "tabbable": null,
       "tooltip": null,
       "value": " 3435/3436 [03:16&lt;00:00, 17.23it/s]"
      }
     },
     "5f6ed3b4936e43cb9cc5e6df52f27139": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5f7c9846755347c1a41b339410e5752b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "609edfebf2424a5aab5a1f6fb3ec45aa": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_28978a570bd3465ca5a863f025de3631",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d9b93aeebfc6427789821d70c3813f6c",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "6100d7c4faae449bac9662f1858fe99c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_83780f334aea4621b0e47635f9d00c47",
        "IPY_MODEL_bd49b05ff8c44dc3ad5e1f4c1b06ab2a",
        "IPY_MODEL_92e5fa75f3634916afd032a1e2d49e35"
       ],
       "layout": "IPY_MODEL_595993e898d14934bfed278c8ee5b0b4",
       "tabbable": null,
       "tooltip": null
      }
     },
     "62acb7a2743a4cedbcd45743f2982aa7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "633d1fba63d8450aa37abb58d027b2f3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_89df12ff3ef94ec7a67e3c4fd492a0bb",
        "IPY_MODEL_cd10d3ba62c845658458ecf336a4bc6f",
        "IPY_MODEL_9a43d334246f4c37b1e1d04243d55720"
       ],
       "layout": "IPY_MODEL_24561a34e5db4146b66223715ef988eb",
       "tabbable": null,
       "tooltip": null
      }
     },
     "63b66ae2aada40d484cb925f449e06a1": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "641613cc7e554be28e24955a53161b5f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_3f243134d0e44c27ae0d34501881f22b",
       "placeholder": "​",
       "style": "IPY_MODEL_5e01014c728746db84deeae531f29a65",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "64499cdbdc334ebca37b8b4e028a8793": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6467985364654293b77cb432e8c1c44b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_8646e1543ba744d4bc402eada3861c40",
        "IPY_MODEL_7c426ba85d894a4eb5c71ee5e3c89ce7",
        "IPY_MODEL_8684255838e24863a5de7f89208d76c7"
       ],
       "layout": "IPY_MODEL_921d86746ef54fa9952a49abbbfd80cc",
       "tabbable": null,
       "tooltip": null
      }
     },
     "64a2f4451e8c42779e659d39ec14138d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "64a80f21fa5a4646a30d9a6868a686fc": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "64f30daad9a74bfe8fdfabaf10a1794f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6564f5bf58c34abab71e030d49f3cf12": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_cc2580692e15498a89db478b5f11f5a0",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_978abc2261b9416fb0bb0d831495a50e",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "65838a084e194b34bfab7dc91c03aaf1": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "65938bc1de014529ac64c89fe3bb61c3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "6598b5171d6c420385c76de20903d5e6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "65d12832a6b54f95ae24b8c88199b785": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "67a9bdd0002d44e6adc66d1d1bd2ab59": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "67c6a0baafcc4e2ebc1b5cb96b8fdc58": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "684d6da1861d41559bf9ca84c70bcb29": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6870ae2cd4b14340a65d189bf0c62ff3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "687a40a9fc4f4207857fba9d6bf67755": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6895f6c00470404d81ae72cec2a7048a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_494576370cf144f3ab9e7f043665e460",
       "placeholder": "​",
       "style": "IPY_MODEL_4fd570b13a444f509384582398d3500d",
       "tabbable": null,
       "tooltip": null,
       "value": " 3436/3436 [03:15&lt;00:00, 17.86it/s]"
      }
     },
     "68bf3748310247979cf0c60ffeb7178d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "68e7108599844d968b6c89924ea065d1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_d8b673bcddfb4b82a2a9b58f428cef69",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_0b0f112eba214cbca590f4a0f1787db2",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "68fc41b9e7cd47dea04d735861af1281": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "691294661cb14f899382a83374a181eb": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "691a6bcb35f74eae8569a1dd8143ba84": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "692788004a3b4caeb182bc6e743c2198": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6985460c86f3423ebd1680467cfacf10": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_da06a1e0ddf9450eadd0e51ad509b50f",
       "placeholder": "​",
       "style": "IPY_MODEL_d57cff720cf445e798e1e2d09635ac56",
       "tabbable": null,
       "tooltip": null,
       "value": " 2414/2416 [01:56&lt;00:00, 13.42it/s]"
      }
     },
     "69a5578ba1c04192b9b70e705c1699f7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ead53894ddd54b048b3835e50aad5c94",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_49a1c87ad10e4933a9b17581979effda",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "6acbc92b317f491fb4895f4be89ee3a0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6b1eb02c68a0425290f75c0f081d950a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_324075aadcee402db64663eb041fde1d",
       "placeholder": "​",
       "style": "IPY_MODEL_24a267f0e95f455fa78bb29da53e0087",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "6b774d56327e4ab396cdd54bf96df288": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6bc38d0d9eac49ebbbe8c066d5920f19": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "6c388f9280eb4f1c88ac8ff9c956159f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_dd794faa04aa441fa625c63aa0c6055f",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_90793145ec8a4b21ae6bdbd46e50bddc",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "6c61309028fe46f1b6eacb2f0e25992c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_eca13e41518c4d1c8340122bac59f879",
       "placeholder": "​",
       "style": "IPY_MODEL_cf92926e5aba4ff79ef495dfb6ccff1f",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "6cbedc6cfb4a4fa3a87fb268ab8bfacb": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "6d1b46ed22cd4db3ba933ef2db0fdafb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "6d97851596944687bb3e727ef04ad6c1": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6db53ad3fe6a44ff8b7619fb023ce631": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_9be7a6af95f34f2894abe3b6e58124c1",
        "IPY_MODEL_abef0d0284834a9f8b44f52ee4005f46",
        "IPY_MODEL_8477ff4da22f40608e9be49d5d26205c"
       ],
       "layout": "IPY_MODEL_6eecc24759c84587a7e0a939b48e969c",
       "tabbable": null,
       "tooltip": null
      }
     },
     "6e1f28e6919d4f67be6dcf01e611c351": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6e967562b9d34cf5ab449d400e8eacc7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "6eb3bc95bbba4b9b96e7b8aeb267eea7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_d7387c5d08944734a319305c634164c9",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_c1af201486a74c6ab2e66c45d72a766f",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "6ecb8ba6ef6d454296e786d3f373a5ee": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6eecc24759c84587a7e0a939b48e969c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "6f217f2af0ed483abade03db58372817": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6f237f9493714306b10e262cd5439dcb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "6f32a5c8386548f3bf2c6e0086c27dc8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "6f970477dce04c32b85d93e0548a9769": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "6f9ca2194f0941e89ccf1f88956c2a39": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7038287f80fd4466a915c83162a263cf": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "719b1cb25b6c46ebaa282eae4679f55f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2bd216eede7448d5a7c403bb9e1d9c2b",
       "placeholder": "​",
       "style": "IPY_MODEL_43f2b4e5382d4bf0a155cbc4b6e3d7a6",
       "tabbable": null,
       "tooltip": null,
       "value": " 2416/2416 [01:56&lt;00:00, 15.60it/s]"
      }
     },
     "728deb76a14b4da19c2e7b8e11ceb978": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7296720bf65f439eb0912b1e5f188834": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_b4bdb0fb9892484f983639a4eab8fc3d",
       "placeholder": "​",
       "style": "IPY_MODEL_c773c01674c54aafb946120acd8b1331",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "72cb8bd6181d4535b599200f3fa5f6d1": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "72cbd163a44749ab8b04862c5733815a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "72e7291076ed42a68b398e25c78d9fb2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "73274639c5164c9e920880cdd86968a0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "736d3a481f2c4e4593bc31fe37d63238": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_f00b78b63abf4c7c904ee4b0ab8968db",
        "IPY_MODEL_d9b18c1f8fcd451a908fec7deec795b2",
        "IPY_MODEL_c20575212616479ca8fa41c39f902f81"
       ],
       "layout": "IPY_MODEL_9551981fe6a64b9d9e129e342446fc17",
       "tabbable": null,
       "tooltip": null
      }
     },
     "73bca07188b74b04aa53affd9fcd05df": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7469a4731e3644ee932fa699735aea89": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a6b1923ce3b3402087b0c9fed96e60fd",
       "placeholder": "​",
       "style": "IPY_MODEL_9b28e49a5ad3491d85e8de479263f234",
       "tabbable": null,
       "tooltip": null,
       "value": " 3434/3436 [03:14&lt;00:00, 16.98it/s]"
      }
     },
     "74dabbb992574663a35e48cd7616224a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "75241bca465a4aa48b2589f7d9328db6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "75496145b837444f921bc2ceaf690159": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "754be48620574a8b834dfbd61337a60c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "75a91c68368b43fa8660b94c0eadc4c7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "779b810a8aa549e2b582707243c5ac18": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_c9393fe7596a4611a128bc1aeedc7d40",
       "placeholder": "​",
       "style": "IPY_MODEL_01fb550e0d3143ca91f3eb72b0087541",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "77e0faa89bab4784ac8267cfc996802d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "77ec3d541ea044a98e1fe18fa9f6626a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_490f01a7faa3459585086e2dda47ea5b",
       "placeholder": "​",
       "style": "IPY_MODEL_b638b32abe9d463a801e24bc6111e3e8",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "78b7df64d2914f56950e07176745c781": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_8eff637e960f45c9a6c3796ef777b0f8",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_bb3aafba56e84dcba796c9cf05af5213",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "791679a81e3e40eead6efefa8c3ee870": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "7964e48b286f4565972e138c420c6820": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "79e2725d006849149cbef275881a165e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7a63cc33540645b0a44498a26c5a6c50": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_64f30daad9a74bfe8fdfabaf10a1794f",
       "placeholder": "​",
       "style": "IPY_MODEL_98788cde681441c59957a402a0cef472",
       "tabbable": null,
       "tooltip": null,
       "value": " 3435/3436 [03:15&lt;00:00, 17.30it/s]"
      }
     },
     "7b8b4d50fd3e4652ba13c9d11e2aeaa8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7ba032170823467d88263d8cc00b531e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7bb9f92907fd4229bf1d330758be4177": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2f18079d6aa74a8d84ebbf2eafd185dd",
       "placeholder": "​",
       "style": "IPY_MODEL_4c539d5d124b495fb47277e95d4b478f",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "7bda56cab73f45a9bf5680a5c749cc87": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "20px"
      }
     },
     "7c426ba85d894a4eb5c71ee5e3c89ce7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_d1bf6e7466314d50a88bb3d34b87071f",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_5a86a0e168284ae09a54c301f8ff6b17",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "7c85cd2f86764d919d92a807c6c53657": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "7c8741aca3574d44873ea541278a9bbe": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7c880a78c76e4bdabd98443fff2f1782": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_49de62d0af504c5e9be7128a4c5242b6",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_afc820ce7a774451b0796905413e3569",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "7ccf1cbc75e84421be350a5b281bc484": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7cf3aa6bdaac49dd9ccc23c4b714c1b2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_1de5db41e4184db7a903fba45a38c714",
       "placeholder": "​",
       "style": "IPY_MODEL_db36d2f280bd4be0819aac54aae91685",
       "tabbable": null,
       "tooltip": null,
       "value": " 2414/2416 [01:56&lt;00:00,  9.37it/s]"
      }
     },
     "7cf490bd4df04626842f6ade10d4419c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7d18a610b5e0477794f7684bc3976d25": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "7e34ccd943974860b1f704ebb4169464": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "7e4b6055ce1f4e7890142717843d82f4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_3a2481c34f27416cbd9a1b3a54c39b5d",
       "placeholder": "​",
       "style": "IPY_MODEL_40dfca0362dc494986fd6d275d707244",
       "tabbable": null,
       "tooltip": null,
       "value": " 2413/2416 [01:56&lt;00:00, 12.68it/s]"
      }
     },
     "7e96f9269b744a8eae9de2b021f27951": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "7eebafbf1f394615a9edf041b7f20d9f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f0269c061cf04ab6a1f65ea6edffd0b5",
       "placeholder": "​",
       "style": "IPY_MODEL_d412125e671344a1b886cd90fbbd66f1",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "7f549b30060d4713aa0f27071941e6b3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7f70ff434496437a9d66bae8a32425ea": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "8019d285e22e45d1a953102a8f155b22": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "8020e3175071469686680772e64825d5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9867056d0a4b40ecaa24b057955401c6",
       "placeholder": "​",
       "style": "IPY_MODEL_c95daadb1228463aa536e57287df7b94",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "8130337cb1c445ab9f3bbf9c31e1b036": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "81b9e8b9680c463880a9b9435b102d94": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_fbe736029d8846748e50f1213301fb41",
       "placeholder": "​",
       "style": "IPY_MODEL_8723cafc714d4899aa53be4e4190c52b",
       "tabbable": null,
       "tooltip": null,
       "value": ""
      }
     },
     "81dd605e0d104a0bbcbda79a786c923f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5d4b6983b26d44ab99296eba5205e843",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d6eb189ab64e4df6ae79168d7ba93613",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "82316297f9bf4cb4bfe65cfe21134a57": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "8257dac0abf84269a8e532de140a95e5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "825fbb27b73643c7b9d6c17c1584f104": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_50fdda11fce14539bd3de2cbde172f84",
        "IPY_MODEL_30037537605648fea5ed3d1d754e4877",
        "IPY_MODEL_c06716653bb24da39e7bedb5cb68fdd9"
       ],
       "layout": "IPY_MODEL_2f3a3d9a17e740a4a660d2e667e1339d",
       "tabbable": null,
       "tooltip": null
      }
     },
     "8295f8a29e18443ca4d2c284645f9d34": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_e910740022f143bc84e7b0092eb99179",
        "IPY_MODEL_9a06a1db10f54d16b4da8ab5ac80088e",
        "IPY_MODEL_a1f64bab4b58404f8679c8108b4d49ad"
       ],
       "layout": "IPY_MODEL_c5bf60679e71474db53449152e01606d",
       "tabbable": null,
       "tooltip": null
      }
     },
     "833e8bb7b2274666bcc92280bee9548d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "83780f334aea4621b0e47635f9d00c47": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_01a52981edda4b89a7e00e0fc31e6d13",
       "placeholder": "​",
       "style": "IPY_MODEL_086fee0df75147ffb9c4c24b45b13bd4",
       "tabbable": null,
       "tooltip": null,
       "value": "Generating CM Data: 100%"
      }
     },
     "83d6ae2b2e9c42859e1f7dd875e334c7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "845764a26af3428ba2c5be2cb607c337": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_1a4a8f95fa6d45b6a9cc7ddb64fc5c12",
       "placeholder": "​",
       "style": "IPY_MODEL_3130347a13a549058ef55288d2b027a3",
       "tabbable": null,
       "tooltip": null,
       "value": " 2414/2416 [01:56&lt;00:00, 13.02it/s]"
      }
     },
     "8477ff4da22f40608e9be49d5d26205c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_027d1c622c9a4eedbea323fd7a3c7a9d",
       "placeholder": "​",
       "style": "IPY_MODEL_5775e66c29534e03828018ff75d654e0",
       "tabbable": null,
       "tooltip": null,
       "value": " 3436/3436 [03:15&lt;00:00, 17.67it/s]"
      }
     },
     "855b9306f14a4d9799bbd73f5b7d37a4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_b2bc9b312fbb4f6e877a110f2d3e27b3",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_8a4adf5977cb4d2683d75a38d90a434d",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "85a200e403fe4d40b9422777069606a3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_13e02b9407eb4bbcb8ffbc0132264413",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_167daeb77b8f4dddb555345ecaab42a7",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "85e6ed831a2d4c96b20147a63b4da84c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8646e1543ba744d4bc402eada3861c40": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_8d3c787692744cc4839dca12b7326c68",
       "placeholder": "​",
       "style": "IPY_MODEL_a80c99a7ab5e436e9730c0e1270d8a56",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "8673a49f73d747aeb3f5aa9d567fb482": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8684255838e24863a5de7f89208d76c7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_7ba032170823467d88263d8cc00b531e",
       "placeholder": "​",
       "style": "IPY_MODEL_1048369367bc4334aaa2497d58b0d1dd",
       "tabbable": null,
       "tooltip": null,
       "value": " 2415/2416 [01:55&lt;00:00, 13.90it/s]"
      }
     },
     "86b062fc146d4736a36967907c03f935": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_3d3e2448f78d445892163d6775251b7d",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_bf67d984a7584d56a076f0e21578ac5f",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "86fa45cef79e486c9a992f9adb0506b5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "8723cafc714d4899aa53be4e4190c52b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "886e522070c94b498c07fd503eb657d0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_227f22245f244efb913e588e8457b131",
        "IPY_MODEL_59d8b47f55d04ee98d1081f31f830687",
        "IPY_MODEL_6895f6c00470404d81ae72cec2a7048a"
       ],
       "layout": "IPY_MODEL_a5e4b3969945455d8ba2921ed63ba6df",
       "tabbable": null,
       "tooltip": null
      }
     },
     "8879f46a2deb4260a10aab86c8cb9e73": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "888801e7455c4ee39d0b6b49f71677b1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "889b067944fc49de8b6f28f08ed23864": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_0a23142e1d214e29a23603586b854686",
       "placeholder": "​",
       "style": "IPY_MODEL_329e7f39afc24325b3d8221a9dd615f0",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "88d14a08ccac404f9c6976ac60eaec93": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "88f77ba682684031b29ba2a195f724e4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "88fb5dc7a0e2490a89c9aa3a31cf63ee": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_6c61309028fe46f1b6eacb2f0e25992c",
        "IPY_MODEL_17e5c5eb660940c68c171576442ea2d5",
        "IPY_MODEL_4d70782b0d8b4baa97f8a5172357fef5"
       ],
       "layout": "IPY_MODEL_550c096b178d437cb82cc5605b3fb6ae",
       "tabbable": null,
       "tooltip": null
      }
     },
     "891a41130e2e42c4996c6d68f6cbf1cc": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "89df12ff3ef94ec7a67e3c4fd492a0bb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_c16ac1f45f7245b1ab761e3f1688207a",
       "placeholder": "​",
       "style": "IPY_MODEL_27d8fa0359dc4f118d2902a263b55390",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "89f82bdf8d2b47ce96bbb45197ef0687": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8a4adf5977cb4d2683d75a38d90a434d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "8a7c5e885ccd4bc4831f9a07a4ff6f23": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_72cb8bd6181d4535b599200f3fa5f6d1",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_b8712dbd7c4d45d1b58932a3cdc9f8bd",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "8ac178e272f4440598f2533152431250": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "8ad3a9bec3744827947623b87d1f081e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "8add16dc22e34919892102b716dcde09": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5f7c9846755347c1a41b339410e5752b",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d54f92d4245d4416ba8bbcdf133e7577",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "8afd808b2b924edaa5284cc9432f108d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "8b407de2fbbf40ecad825945865a855b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "8b45d8329d524a1ba5de1e7afba70c4f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "8b4e6ddc5d604aadadbdaafddba4274b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "8d3c787692744cc4839dca12b7326c68": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8d7d84bcdcb84a75971d2e087a12795c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "8e4b5a483ce747fdbb0133b2720dac20": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "8e64a14fcd0842a392c305173c31273b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "8eff637e960f45c9a6c3796ef777b0f8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8f7a7a0a0d654e958867b45af5c85194": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_d50400911e1247b0b5f593ef512112f6",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_93e48687d6fb4b67b844c5f8d71c4dc7",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "8f7ef7d973714bd8907ed29319c7f23d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_27c3f9f31d06431da5b2e3e54b938d36",
       "placeholder": "​",
       "style": "IPY_MODEL_fa1183cef4194e45b3478b7f34e00c48",
       "tabbable": null,
       "tooltip": null,
       "value": " 2414/2416 [01:55&lt;00:00, 12.21it/s]"
      }
     },
     "90013d0dfb794e548cb79970e94ee8d6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_99213c272d1942b796fe9c30822a4d26",
        "IPY_MODEL_e4d204fd6e8c48caa8a0911b41bf7036",
        "IPY_MODEL_01f3c8655b804184856173be64338de1"
       ],
       "layout": "IPY_MODEL_541f2ca9a1f646dd82c6754323161f63",
       "tabbable": null,
       "tooltip": null
      }
     },
     "90793145ec8a4b21ae6bdbd46e50bddc": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "907dad2f4125462685ff98439333e19d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_641613cc7e554be28e24955a53161b5f",
        "IPY_MODEL_9341f59ae7a44cccb5ba0ee5d9fbef50",
        "IPY_MODEL_d9db006c92094cf7ab21fca6c39652ef"
       ],
       "layout": "IPY_MODEL_40035063abc64db4b3dc5ec43e7e687d",
       "tabbable": null,
       "tooltip": null
      }
     },
     "91002de7c15f407bbeeda2a1379ba2b8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "921d86746ef54fa9952a49abbbfd80cc": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "92455efd59314903ab1196019028fb03": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "92e5fa75f3634916afd032a1e2d49e35": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ce6b20e4a49842968db9ce16297d332e",
       "placeholder": "​",
       "style": "IPY_MODEL_5558fb06a35648de98ac9555f50eed24",
       "tabbable": null,
       "tooltip": null,
       "value": " 2415/2416 [01:55&lt;00:00, 13.56it/s]"
      }
     },
     "93058bf896f34a45b6b3f2a74f99cee8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "9341f59ae7a44cccb5ba0ee5d9fbef50": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_0088dc59cdaf4902854d2967de7fe211",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_888801e7455c4ee39d0b6b49f71677b1",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "93c5c779dd064fe6a0833682a11d0fbf": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6598b5171d6c420385c76de20903d5e6",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_a279cecc7c1048749b60ad052b44144a",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "93e48687d6fb4b67b844c5f8d71c4dc7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "94053111f2bf4769b957f4a211bd2e80": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "946b6397e7b54d9a9c1dc87bf39d287a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_9a59d4c194fd4b41a8175363d5eeb603",
        "IPY_MODEL_c14e0b8567854dd2b1cd7203988e3f22",
        "IPY_MODEL_7a63cc33540645b0a44498a26c5a6c50"
       ],
       "layout": "IPY_MODEL_691a6bcb35f74eae8569a1dd8143ba84",
       "tabbable": null,
       "tooltip": null
      }
     },
     "94b8d785282f4c579e4c963a1f6d5b02": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_20f46512e3bf4eac9c5f4bfdf88d30fb",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_8130337cb1c445ab9f3bbf9c31e1b036",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "94d05f8c381340cb95968c78e021d89e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "94dfa16b37ad4ae283bbb691568a7c11": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_d15c8bd1482e48b7a2da2678e3eba077",
        "IPY_MODEL_6c388f9280eb4f1c88ac8ff9c956159f",
        "IPY_MODEL_c20bdb95d17c476a8d69fa85c52cf05f"
       ],
       "layout": "IPY_MODEL_91002de7c15f407bbeeda2a1379ba2b8",
       "tabbable": null,
       "tooltip": null
      }
     },
     "9537f70a62d44d3c8193c9e222599584": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9545ba1a947c4ac99550418a33e7db57": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "9551981fe6a64b9d9e129e342446fc17": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "9561497f09134faeae6ec8589bdf7c6c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "95847b6866ff473bb41ad4a0ed5ace1e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_b5163938cac442eaba93dcff090dab85",
        "IPY_MODEL_eaf769eb964b48b5a878a287a92562a4",
        "IPY_MODEL_a67b3b0a48c44603b321910556265cf5"
       ],
       "layout": "IPY_MODEL_25f85c9e63ce4f99ae5a0cdf7d715a49",
       "tabbable": null,
       "tooltip": null
      }
     },
     "95a406fc8a034751a66aa0bff244949b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "95f0c556a9dc40afb54d72a1fc375433": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_30a663836dd04df9ada6e1ad95681aef",
       "placeholder": "​",
       "style": "IPY_MODEL_bab435e09b8f48e89c32d2c52b571214",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "96287849637c41878739543b50b4584c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_9bda75f662ad46f4bd971e4e6de0dc23",
        "IPY_MODEL_0645d984777e495d968b7661f13c05bc",
        "IPY_MODEL_f67ca6940c5a43beb919ad1500f17f19"
       ],
       "layout": "IPY_MODEL_1cf13770155341ba9ffe57a123326bc7",
       "tabbable": null,
       "tooltip": null
      }
     },
     "966bac9e922943c6b470bd2d8876808d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_f1ad6ed78934498eb273392da90df933",
        "IPY_MODEL_58fb85d8b98c4dd0bbbf3f16387398fb",
        "IPY_MODEL_7469a4731e3644ee932fa699735aea89"
       ],
       "layout": "IPY_MODEL_50d3c9cbd7a947f59c07587f13bdc74c",
       "tabbable": null,
       "tooltip": null
      }
     },
     "978abc2261b9416fb0bb0d831495a50e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "98059c76dd0b4ebbb51b862db26e1ee2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "info",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_481210b60f994e9ab60e4ba73b43ca9b",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_c3ccd9acb575464b8e613575e001d784",
       "tabbable": null,
       "tooltip": null,
       "value": 1.0
      }
     },
     "9807a0333312401dbabeb8c7f8b23c73": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "9867056d0a4b40ecaa24b057955401c6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "98788cde681441c59957a402a0cef472": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "99213c272d1942b796fe9c30822a4d26": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6acbc92b317f491fb4895f4be89ee3a0",
       "placeholder": "​",
       "style": "IPY_MODEL_575bf5dc43c84025aa5de13a9272541d",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "998a91231e2246d1af567e3cddff5155": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "99f593a4cbc748c78b9af1161a4d0d3f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "9a06a1db10f54d16b4da8ab5ac80088e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_52fe9cda89f342949f95dcf9984f1747",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_13b07bfb771c49d780a346004f271d01",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "9a43d334246f4c37b1e1d04243d55720": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_238031b588ba4a68be98bfdabb3c7dc5",
       "placeholder": "​",
       "style": "IPY_MODEL_d9255a64e588455992ad89ea4bf905b3",
       "tabbable": null,
       "tooltip": null,
       "value": " 3434/3436 [03:15&lt;00:00, 17.11it/s]"
      }
     },
     "9a59d4c194fd4b41a8175363d5eeb603": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_73274639c5164c9e920880cdd86968a0",
       "placeholder": "​",
       "style": "IPY_MODEL_cfd2521efbfa4eb9bbc1fcf6f8017be9",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "9b28e49a5ad3491d85e8de479263f234": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "9b2bf24fca7b47799b0fbdde5894524a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2dc2f93372754c878884f227a7ea0120",
       "placeholder": "​",
       "style": "IPY_MODEL_039bf19037384eb293002f3330b4cf68",
       "tabbable": null,
       "tooltip": null,
       "value": "seq: 100%"
      }
     },
     "9b2f6e8749ec423abc32b48bc711d027": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "9b4f44a9ca0c4e82b87419b8db878856": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9bda75f662ad46f4bd971e4e6de0dc23": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_33429b3149b048898fe7cfbfe88254b6",
       "placeholder": "​",
       "style": "IPY_MODEL_f2aeb1dd93304d22a9f4c417f2f2640d",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "9bdcd779f7ed45748aa3934f5f9a8982": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_fe56b681d5ba4cd083b598ff1c4c2f45",
        "IPY_MODEL_08ba83d6c6264eebaf810cbf933d84da",
        "IPY_MODEL_f407c3d3067b4467bed943f771888d6f"
       ],
       "layout": "IPY_MODEL_3ba7d4b96694483bb85c33bfee1dc96f",
       "tabbable": null,
       "tooltip": null
      }
     },
     "9be7a6af95f34f2894abe3b6e58124c1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5f6ed3b4936e43cb9cc5e6df52f27139",
       "placeholder": "​",
       "style": "IPY_MODEL_268f6672e3b5460baf12715de1ca90b5",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "9c22a222d85b446e970337f72b06b968": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9cd34299477d423b90a4585badfdff9c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9db0813781184dea9944bacd13f8f90d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "20px"
      }
     },
     "9dbcb8e351e44a728b72c729dfa600c6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "9e84b1985de34173919ac8332ee7503e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_1ee6d3a6cb204c54bc6fdb23710fd6c3",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_fda314330a4b415c992a571748d1423b",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "9ea9ed007e594289b5df9fb1c36659a1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_89f82bdf8d2b47ce96bbb45197ef0687",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d04936e4608e483484df527404d13a53",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "9eb8157ecb2244e094f5461c071cf3ab": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "a0306c4dd9e24aeb92c59c4643d9c1b6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a0659a70ff7949259ee51794b8b54c6e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "a128f535b5104a09b0bf2f0a3294f755": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_79e2725d006849149cbef275881a165e",
       "placeholder": "​",
       "style": "IPY_MODEL_5571038b23cb4ea9a2cb4c147646ce0b",
       "tabbable": null,
       "tooltip": null,
       "value": " 3436/3436 [03:14&lt;00:00, 17.87it/s]"
      }
     },
     "a1a9c50ccd53411391d0f4ce086ccd1e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_7296720bf65f439eb0912b1e5f188834",
        "IPY_MODEL_609edfebf2424a5aab5a1f6fb3ec45aa",
        "IPY_MODEL_594d0f0648074a1ab8202e823c81ec9c"
       ],
       "layout": "IPY_MODEL_8b407de2fbbf40ecad825945865a855b",
       "tabbable": null,
       "tooltip": null
      }
     },
     "a1f41ac67d684d858406b75b312160b7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a1f64bab4b58404f8679c8108b4d49ad": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2c9e4e22461c43b6a094593e46b05fc6",
       "placeholder": "​",
       "style": "IPY_MODEL_7f70ff434496437a9d66bae8a32425ea",
       "tabbable": null,
       "tooltip": null,
       "value": " 3436/3436 [03:15&lt;00:00, 17.73it/s]"
      }
     },
     "a1fb2b5d00144542a194cb94f08b8478": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a2086064cac64bc6bb10a9c522fcbe94": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a20d80e231774e9ebe96d10c835fa174": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_afc0793e400b4fc987cce24bbb1d087d",
        "IPY_MODEL_94b8d785282f4c579e4c963a1f6d5b02",
        "IPY_MODEL_25bd5f78ee8a4aa6b23285500dccd255"
       ],
       "layout": "IPY_MODEL_833e8bb7b2274666bcc92280bee9548d",
       "tabbable": null,
       "tooltip": null
      }
     },
     "a279cecc7c1048749b60ad052b44144a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "a27cfe8637bb4c7e9fae4799c4179221": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "a2d8d4d9ac614c13b59c67bf27d982a4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a39e5a0107a84e6986c98b5ce506049a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "a40379b747f7431f92c490be713bba91": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_3826c500d1764be889a6084879583186",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_3c327ef8e8ec4c47b08c2d48133d80a3",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "a478d67a5fac4390937f53529d86c6da": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "a4a1168e48824c43968044a125f96778": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_1e6ae408da43488c97dbefe94d9b08e3",
        "IPY_MODEL_69a5578ba1c04192b9b70e705c1699f7",
        "IPY_MODEL_7cf3aa6bdaac49dd9ccc23c4b714c1b2"
       ],
       "layout": "IPY_MODEL_a4fa1ab4b26b47cc8390ebe3fe3836f4",
       "tabbable": null,
       "tooltip": null
      }
     },
     "a4b85a0364e54a58a0359306783d307b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "a4f1231464874c23b610f51a4abf00e8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_e8809035984445de8a8f3427ec082de3",
        "IPY_MODEL_9e84b1985de34173919ac8332ee7503e",
        "IPY_MODEL_27decd275eca4821af0d2eb0aa9074ee"
       ],
       "layout": "IPY_MODEL_5e9ae38898d5428898655b5f9331b61a",
       "tabbable": null,
       "tooltip": null
      }
     },
     "a4fa1ab4b26b47cc8390ebe3fe3836f4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "a5084acb5a8a4c6495f06822f0f159d3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "a5b63bb17b8c4b5fa816b7a0c1056c7f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_5ea27b3131f14fb1aeab05f93e055f12",
        "IPY_MODEL_5e9e38e10412495bb98e345249dbef02",
        "IPY_MODEL_d0928346fee943f7921fa734c1be8487"
       ],
       "layout": "IPY_MODEL_31540c29ff9a41c7b1073fd1564bb0e8",
       "tabbable": null,
       "tooltip": null
      }
     },
     "a5e4b3969945455d8ba2921ed63ba6df": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "a61d4881b31842a3b88eca80f0605eec": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a67b3b0a48c44603b321910556265cf5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_07d3beb784bc449c8bdc7c445c083ad5",
       "placeholder": "​",
       "style": "IPY_MODEL_9561497f09134faeae6ec8589bdf7c6c",
       "tabbable": null,
       "tooltip": null,
       "value": " 3435/3436 [03:15&lt;00:00, 17.09it/s]"
      }
     },
     "a6b1923ce3b3402087b0c9fed96e60fd": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a7482a766613480f84260fa165e09563": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a792e20844c64279b0adb68717bcb3ca": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "a80c99a7ab5e436e9730c0e1270d8a56": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "a812e55f93e04887b9a0bf226dd979b7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_684d6da1861d41559bf9ca84c70bcb29",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_8ac178e272f4440598f2533152431250",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "a82fd5908bd44af8bfde61688da4f43c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "a872713e470049539e635e29fbe32fc9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_e7da0326193243d5b9a3a634d0dde17f",
        "IPY_MODEL_50d1ca0af69644b1a2c72fc7080ed29c",
        "IPY_MODEL_255cf3ca175848deb8e9778542995e5c"
       ],
       "layout": "IPY_MODEL_307d458c02e745278477191519075c8f",
       "tabbable": null,
       "tooltip": null
      }
     },
     "a89f91f35bf74bb89a2a93227a8b1d33": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_d64561bb8c074b74b5cc78052a5f13c4",
       "placeholder": "​",
       "style": "IPY_MODEL_158d077a32024c268990465a668833e2",
       "tabbable": null,
       "tooltip": null,
       "value": " 3435/3436 [03:15&lt;00:00, 17.03it/s]"
      }
     },
     "a8cd70fa521d499994eb613da5fb8a33": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_b5bcf4ccee9b43ed919834785303f5a8",
        "IPY_MODEL_8a7c5e885ccd4bc4831f9a07a4ff6f23",
        "IPY_MODEL_0dae5c57ce6246518ad6435db88bb952"
       ],
       "layout": "IPY_MODEL_a4b85a0364e54a58a0359306783d307b",
       "tabbable": null,
       "tooltip": null
      }
     },
     "a91e38fbc02942e6a1956931434319ef": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a93336609fad49eb91fb1572b362e518": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_43796452de00430cac771a9c38539cd0",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_c55254beebae47ddbb3bae1809dba757",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "a9aedeae28c84f37b01a45928f6f31f2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_d8c2ce1c86c541cf99d830e987708867",
       "placeholder": "​",
       "style": "IPY_MODEL_6f970477dce04c32b85d93e0548a9769",
       "tabbable": null,
       "tooltip": null,
       "value": " 3434/3436 [03:15&lt;00:00, 17.27it/s]"
      }
     },
     "ab2e1716ab8e4e5e97984a604016e9ac": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "aba5491439414faa9cef66853217d465": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "abb7b5ef975c45b1967709a63c9ac9db": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "abef0d0284834a9f8b44f52ee4005f46": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_85e6ed831a2d4c96b20147a63b4da84c",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_b6c2ff61cd804148903003ea113e0513",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "ac20567ed919425ebdd00583d8e86579": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "ac28a4c1ba8f4741ad63c45271109768": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "ac46071d4aff41a0a3e8b38aeb0ef8f8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ac70dba5e2924050a43c527218c02b0c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "info",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9db0813781184dea9944bacd13f8f90d",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_68bf3748310247979cf0c60ffeb7178d",
       "tabbable": null,
       "tooltip": null,
       "value": 1.0
      }
     },
     "ac8c8f5fd9ec42f9a881df6840a17398": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "ad085402a36143d080aa39286e8314a2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ae45633421c84117902f0cc2aadaae5b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ae547ec3421b4990a3a11341b265a8aa": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ae82337b8dc341338f416b659e9806eb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_521f56d5db97446db85e6cd85660b9e7",
        "IPY_MODEL_78b7df64d2914f56950e07176745c781",
        "IPY_MODEL_45c49cf0098b4573805638e04d4c790e"
       ],
       "layout": "IPY_MODEL_cc5a4d6b2ce34b6ab9210c38f2a4c5e6",
       "tabbable": null,
       "tooltip": null
      }
     },
     "af5e00aa2c1343efbc0e1f399833619c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_9b2bf24fca7b47799b0fbdde5894524a",
        "IPY_MODEL_2dded83948024fcf89da5841c5c7cccb",
        "IPY_MODEL_d638369784c6415ebf773f80ec70b012"
       ],
       "layout": "IPY_MODEL_687a40a9fc4f4207857fba9d6bf67755",
       "tabbable": null,
       "tooltip": null
      }
     },
     "af6f8efae81f4842b04980e62ba7a0a3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_29cf9d12b6ac408d90fef368056c9a19",
        "IPY_MODEL_39e3f872f1b145e18de9dacefc1e6c36",
        "IPY_MODEL_423e287517c44812bfc5becfdead5d95"
       ],
       "layout": "IPY_MODEL_65838a084e194b34bfab7dc91c03aaf1",
       "tabbable": null,
       "tooltip": null
      }
     },
     "afa00979aff748ba980e39e35c76e3f4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_4a271786c0224764af4070e792fb5657",
       "placeholder": "​",
       "style": "IPY_MODEL_9dbcb8e351e44a728b72c729dfa600c6",
       "tabbable": null,
       "tooltip": null,
       "value": " 2413/2416 [01:56&lt;00:00, 11.55it/s]"
      }
     },
     "afc0793e400b4fc987cce24bbb1d087d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_75241bca465a4aa48b2589f7d9328db6",
       "placeholder": "​",
       "style": "IPY_MODEL_30724b1c66464cad9a2002377a8dd78a",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "afc3ca6c81c048ddbd4c268b84c474a7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "afc820ce7a774451b0796905413e3569": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "b0cab117ec7d498a83e57364940f2721": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_2007c82c9bb84fbcbadf5ac994adcf49",
        "IPY_MODEL_f9a870d7f6374a51bfad978e97631360",
        "IPY_MODEL_f8ca6c99c737494f9b1055719462fc0f"
       ],
       "layout": "IPY_MODEL_abb7b5ef975c45b1967709a63c9ac9db",
       "tabbable": null,
       "tooltip": null
      }
     },
     "b23aac0eceda409191f9d9c4f05e1177": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b2a7cbd7467347669ed031b2b591a85e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_b4d9988d2d09429e90b433446ed7bd24",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_8b4e6ddc5d604aadadbdaafddba4274b",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "b2bc9b312fbb4f6e877a110f2d3e27b3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b33ae08c58db4334a560e7b2db79ffaf": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_d1604582358940f9b419500c20013a1b",
        "IPY_MODEL_a40379b747f7431f92c490be713bba91",
        "IPY_MODEL_5f3371f9a2744c6183b1fcdb413758a8"
       ],
       "layout": "IPY_MODEL_791679a81e3e40eead6efefa8c3ee870",
       "tabbable": null,
       "tooltip": null
      }
     },
     "b392c8d319e848f282a25a8a9fc89ec0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "b4b7743b0ca5416a99f9816e36e6ddc4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "b4bdb0fb9892484f983639a4eab8fc3d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b4d9988d2d09429e90b433446ed7bd24": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b5163938cac442eaba93dcff090dab85": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_94053111f2bf4769b957f4a211bd2e80",
       "placeholder": "​",
       "style": "IPY_MODEL_0c7eba0ae37d4d7788f12ad51256a14f",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "b5bcf4ccee9b43ed919834785303f5a8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_0c8a2df9fe3b42b88a826d8273210d69",
       "placeholder": "​",
       "style": "IPY_MODEL_bd51981b9e824978845f4c13994cf4c5",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "b5d7804d8a5148979f2c5b954551101c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "b638b32abe9d463a801e24bc6111e3e8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "b6c2ff61cd804148903003ea113e0513": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "b77ec5e1ff3f4991a86b5b4e4cb1a9c2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "b7e633f84d9a4138ac13beb85767bd3a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "b8712dbd7c4d45d1b58932a3cdc9f8bd": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "b9991af30d1e4dbf9d5199b933fa1933": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b9b6af342c424157845683ee0f2b70fc": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9537f70a62d44d3c8193c9e222599584",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_425c6eacc9d645a4b7492002bb4fd642",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "b9ee267090094cf69504e558e5bfc1d4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "ba0729d4d5d54523843edafca5dc66f1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_f373b997d6fa4db09478dac44e2c3b14",
        "IPY_MODEL_1a03cb59ac2d433c944decc3e67b37a9",
        "IPY_MODEL_2e6bc7de596e4435ba948ffeb41d4b3a"
       ],
       "layout": "IPY_MODEL_bc02605b099c4619a92b8ef6bbb66270",
       "tabbable": null,
       "tooltip": null
      }
     },
     "baaa716f95c744c69eb847bf6c0681ee": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ed2adb9fa93e41e5b4c2de1ddd6b6c7e",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_cae39075c810498f8cdd299295870c3d",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "bab435e09b8f48e89c32d2c52b571214": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "bb3aafba56e84dcba796c9cf05af5213": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "bb4d3bdda928422ebe1a30eb77379e87": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ce1fd65fa40e41d5bc2a8fcd389589af",
       "placeholder": "​",
       "style": "IPY_MODEL_d24f7cc5c7254d5283c52146a1241784",
       "tabbable": null,
       "tooltip": null,
       "value": " 2414/2416 [01:55&lt;00:00, 13.04it/s]"
      }
     },
     "bc02605b099c4619a92b8ef6bbb66270": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "bc1bac3230b04f85b17879de33d21822": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_fb1fecefe27b475d919f93b9214c50e7",
       "placeholder": "​",
       "style": "IPY_MODEL_dad3411403d342bcbc0520f4e65e3dc1",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "bc52f8dac7344fc8b32b4e914043e81a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_6b1eb02c68a0425290f75c0f081d950a",
        "IPY_MODEL_8add16dc22e34919892102b716dcde09",
        "IPY_MODEL_4927807207e74a509e96efa6f193f488"
       ],
       "layout": "IPY_MODEL_cf11bfc7ff864d6f80e23995f3fb63cf",
       "tabbable": null,
       "tooltip": null
      }
     },
     "bc6e09a13b8242dcbc60d7dacbe5bb29": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "bcc15189d24c4aec860d235653267e86": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "bd49b05ff8c44dc3ad5e1f4c1b06ab2a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_1e154570ca0d42a98cecd03e30ae98c8",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_061359b09fc940e2be10041a64e2ec2f",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "bd51981b9e824978845f4c13994cf4c5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "bdb983fbb1544f55aef27b8760058d70": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_728deb76a14b4da19c2e7b8e11ceb978",
       "placeholder": "​",
       "style": "IPY_MODEL_65938bc1de014529ac64c89fe3bb61c3",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "be60a1bb47b44dd68f063bc8bb506eb8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "bf67d984a7584d56a076f0e21578ac5f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "bf7e700193914896891d3b97b0ddac2c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "c06716653bb24da39e7bedb5cb68fdd9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_274ef7c0055a42f29133b07720522c6e",
       "placeholder": "​",
       "style": "IPY_MODEL_bcc15189d24c4aec860d235653267e86",
       "tabbable": null,
       "tooltip": null,
       "value": " 3435/3436 [03:15&lt;00:00, 16.93it/s]"
      }
     },
     "c0b2eda37b33416b8ce0a1aaa35d37ac": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c0d0bd641df841209838c73249408d95": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_1c448ed6e8bf48b6b61dc5f215419017",
        "IPY_MODEL_534ec1ac9b29426d89e78d68aa59d143",
        "IPY_MODEL_fae2d85c84a249f2ba8447fed677fa0c"
       ],
       "layout": "IPY_MODEL_e5d6925021f54a49ac3f056b98ea53fa",
       "tabbable": null,
       "tooltip": null
      }
     },
     "c14e0b8567854dd2b1cd7203988e3f22": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_cb65f86e301e4b81a47da587f326c8ce",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_8e64a14fcd0842a392c305173c31273b",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "c16ac1f45f7245b1ab761e3f1688207a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c1af201486a74c6ab2e66c45d72a766f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "c20575212616479ca8fa41c39f902f81": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a7482a766613480f84260fa165e09563",
       "placeholder": "​",
       "style": "IPY_MODEL_3c81732d029f4ccaa946096c02a440cc",
       "tabbable": null,
       "tooltip": null,
       "value": " 3434/3436 [03:15&lt;00:00, 16.99it/s]"
      }
     },
     "c20bdb95d17c476a8d69fa85c52cf05f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_dcd50643ca5b492fbe2f76638391f971",
       "placeholder": "​",
       "style": "IPY_MODEL_8d7d84bcdcb84a75971d2e087a12795c",
       "tabbable": null,
       "tooltip": null,
       "value": " 3435/3436 [03:14&lt;00:00, 17.14it/s]"
      }
     },
     "c2865cac96824112b0b3b63a149c961e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_fb9d80e3208e48c69d72a885403952bd",
       "placeholder": "​",
       "style": "IPY_MODEL_121d0b470a30454b9377916d4c2c6ec2",
       "tabbable": null,
       "tooltip": null,
       "value": " 3434/3436 [03:15&lt;00:00, 17.15it/s]"
      }
     },
     "c39d1e7846324263a0c7b04555147d9f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_692788004a3b4caeb182bc6e743c2198",
       "placeholder": "​",
       "style": "IPY_MODEL_d33c93c331c6419dbec48b14bb522e2b",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "c3ccd9acb575464b8e613575e001d784": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "c4b326eb7c6d48b9ab84e16f5c499759": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "c4ea4c0aae4c4c97bcf7632ac20999a7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "c55254beebae47ddbb3bae1809dba757": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "c5bf60679e71474db53449152e01606d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "c5f388f6d9b74c26b448083350366f00": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_3e3474cac0f446e8af52f2f6d64ad8ff",
        "IPY_MODEL_b9b6af342c424157845683ee0f2b70fc",
        "IPY_MODEL_c9ccfbec09c4403db30c9fb523e8613a"
       ],
       "layout": "IPY_MODEL_a478d67a5fac4390937f53529d86c6da",
       "tabbable": null,
       "tooltip": null
      }
     },
     "c62c0ed9c9894cf1bfdb28220e6d36c2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ceedc68d19144cd28b7757729f5236ff",
       "placeholder": "​",
       "style": "IPY_MODEL_a82fd5908bd44af8bfde61688da4f43c",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "c698d6b0c62448ed9e8ab86a924269bf": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_dabe554973e64e17a2bb2ff7ea524960",
       "placeholder": "​",
       "style": "IPY_MODEL_1e920fe3804649af840bb009cceddc2c",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "c72421971d634546a209e33c650df5ce": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_30c38a90da554f5bab5f924df6bbb5b1",
        "IPY_MODEL_85a200e403fe4d40b9422777069606a3",
        "IPY_MODEL_473a746bd0c248c8aaa3e6c38c2b7936"
       ],
       "layout": "IPY_MODEL_7d18a610b5e0477794f7684bc3976d25",
       "tabbable": null,
       "tooltip": null
      }
     },
     "c747953c0f624af6a575eefe9ec82dea": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c773c01674c54aafb946120acd8b1331": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "c7894a30369642baad99c89aa6fbe367": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5bac0254245f4e559f14f8f74e7c327e",
       "placeholder": "​",
       "style": "IPY_MODEL_5bb4dadde5ea4eaca75c050aac8c109f",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "c7b8b3316cb64e959a5ff67354950af8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "c7cffadbd4dd4176849cc9a36ac87740": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "c8e67bd7619a4882a661a8f8046c9f11": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_599a09d9d704413988c0b764ae0b4f04",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d4af5c0c35424c81a9f54f46b8ded8c9",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "c9393fe7596a4611a128bc1aeedc7d40": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c95daadb1228463aa536e57287df7b94": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "c9a7d0bf419346c8b0f059e52486ca56": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "c9b414367ca44632af68016e16a5c2b3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ffe91edee39d4026adfd2617cf5dac89",
       "placeholder": "​",
       "style": "IPY_MODEL_fb138d75c05945e985b7dbb5151f3ac9",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "c9ccfbec09c4403db30c9fb523e8613a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6f217f2af0ed483abade03db58372817",
       "placeholder": "​",
       "style": "IPY_MODEL_e16132cd4fb34917a31ba9d5e488cd47",
       "tabbable": null,
       "tooltip": null,
       "value": " 2415/2416 [01:55&lt;00:00, 13.17it/s]"
      }
     },
     "caa346f68b43414abebb8b8b729341a4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "cac7be351c0546a282842ece4dd495ed": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "cae39075c810498f8cdd299295870c3d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "cae4d13e40c14b189163ffa5fcaa4e9d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "cb55ba4138c144cc9c2acbf8901f56c1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_cc98b6f71b134c809f57d63abfa092fa",
       "placeholder": "​",
       "style": "IPY_MODEL_b392c8d319e848f282a25a8a9fc89ec0",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "cb65f86e301e4b81a47da587f326c8ce": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "cbeefeca59cf4b0294642270533dea22": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "cc2580692e15498a89db478b5f11f5a0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "cc5a4d6b2ce34b6ab9210c38f2a4c5e6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "cc98b6f71b134c809f57d63abfa092fa": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "cd10d3ba62c845658458ecf336a4bc6f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_17f3c6fbfa464679888fe1c0477937b7",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_891a41130e2e42c4996c6d68f6cbf1cc",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "cd205f7bfb154a95ad785d4761b48d31": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "cd50b0a0283340268a7fd9d31048af1d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "cd683925b56549cc90be1cecb24a3c2c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "ce012a9248db40ca973123d2668e9d8a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_3c6c9907327e454193e04a3faaa8e023",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_aba5491439414faa9cef66853217d465",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "ce1fd65fa40e41d5bc2a8fcd389589af": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ce6b20e4a49842968db9ce16297d332e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ce828a9eacce4749a7e27fee60d93123": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "ceb9409971be4dd5897c038729be840e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "ceedc68d19144cd28b7757729f5236ff": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "cf11bfc7ff864d6f80e23995f3fb63cf": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "cf2851d65f1345dda6ef6b3dc9a44900": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "cf3129b0357b4eef984bc3b6d31177e3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "cf379a4747de4754a640f1ccee2dceed": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "cf92926e5aba4ff79ef495dfb6ccff1f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "cfd2521efbfa4eb9bbc1fcf6f8017be9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d04936e4608e483484df527404d13a53": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "d074a1ef2a554bc3bb05cb1cafa092f5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_779b810a8aa549e2b582707243c5ac18",
        "IPY_MODEL_0f021da0360842feb86475be7d1b696d",
        "IPY_MODEL_845764a26af3428ba2c5be2cb607c337"
       ],
       "layout": "IPY_MODEL_1b09a9c7f9994798b61b68414d713afb",
       "tabbable": null,
       "tooltip": null
      }
     },
     "d0928346fee943f7921fa734c1be8487": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_cae4d13e40c14b189163ffa5fcaa4e9d",
       "placeholder": "​",
       "style": "IPY_MODEL_d52f051ff44d4c6f97359b8d89bc1b69",
       "tabbable": null,
       "tooltip": null,
       "value": " 3436/3436 [03:14&lt;00:00, 17.95it/s]"
      }
     },
     "d0f65b9d4e9d42708fb1ed1a5c2b3c7e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d15254f721a44ed4b3af505f74811223": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9c22a222d85b446e970337f72b06b968",
       "placeholder": "​",
       "style": "IPY_MODEL_ab2e1716ab8e4e5e97984a604016e9ac",
       "tabbable": null,
       "tooltip": null,
       "value": " 2414/2416 [01:56&lt;00:00, 11.38it/s]"
      }
     },
     "d15aaa57be4846ef8d633b5b918773e9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_125d6db70d554c80abdbbd126907d27d",
       "placeholder": "​",
       "style": "IPY_MODEL_8ad3a9bec3744827947623b87d1f081e",
       "tabbable": null,
       "tooltip": null,
       "value": " 2413/2416 [01:55&lt;00:00, 11.92it/s]"
      }
     },
     "d15c8bd1482e48b7a2da2678e3eba077": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_dc23c7d6163847ef97868f7ebe05ec38",
       "placeholder": "​",
       "style": "IPY_MODEL_e5a36f9755654bb4b94667df5dc568ca",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "d1604582358940f9b419500c20013a1b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f5022e00d3194e01a49469a02b9f18b1",
       "placeholder": "​",
       "style": "IPY_MODEL_7964e48b286f4565972e138c420c6820",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "d1bf6e7466314d50a88bb3d34b87071f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d24f7cc5c7254d5283c52146a1241784": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d27a9f6f42024b968ffd6004045b0e08": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d33c93c331c6419dbec48b14bb522e2b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d361c22f1df54587be4337af4402e554": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d412125e671344a1b886cd90fbbd66f1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d4af5c0c35424c81a9f54f46b8ded8c9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "d50400911e1247b0b5f593ef512112f6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d52f051ff44d4c6f97359b8d89bc1b69": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d54f92d4245d4416ba8bbcdf133e7577": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "d57cff720cf445e798e1e2d09635ac56": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d5b9045deb6d4ae589181cd0cd4c6410": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_3bd0b769ec4e47018e11bad6efa46ad0",
        "IPY_MODEL_81dd605e0d104a0bbcbda79a786c923f",
        "IPY_MODEL_fc91cf484a8e4a6caf95a69f62c71975"
       ],
       "layout": "IPY_MODEL_5436b98924524deab707d90807c040b8",
       "tabbable": null,
       "tooltip": null
      }
     },
     "d62139da4f344767b2f58aa7a4d2966c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_c62c0ed9c9894cf1bfdb28220e6d36c2",
        "IPY_MODEL_b2a7cbd7467347669ed031b2b591a85e",
        "IPY_MODEL_a89f91f35bf74bb89a2a93227a8b1d33"
       ],
       "layout": "IPY_MODEL_c9a7d0bf419346c8b0f059e52486ca56",
       "tabbable": null,
       "tooltip": null
      }
     },
     "d638369784c6415ebf773f80ec70b012": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a2086064cac64bc6bb10a9c522fcbe94",
       "placeholder": "​",
       "style": "IPY_MODEL_cac7be351c0546a282842ece4dd495ed",
       "tabbable": null,
       "tooltip": null,
       "value": " 333454/333454 [13:01&lt;00:00, 425.37it/s]"
      }
     },
     "d644261a2b824ea28ada05a431acbfa6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "d64561bb8c074b74b5cc78052a5f13c4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d65d3d6289944113918c6ec44e9e1ea3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d6eb189ab64e4df6ae79168d7ba93613": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "d7387c5d08944734a319305c634164c9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d82732f843e642a5b186f8bc70c1aab3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_c747953c0f624af6a575eefe9ec82dea",
       "placeholder": "​",
       "style": "IPY_MODEL_cd205f7bfb154a95ad785d4761b48d31",
       "tabbable": null,
       "tooltip": null,
       "value": " 16/? [00:00&lt;00:00, 19.81it/s]"
      }
     },
     "d8b673bcddfb4b82a2a9b58f428cef69": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d8c2ce1c86c541cf99d830e987708867": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d9255a64e588455992ad89ea4bf905b3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d9872076ddb041f1a90e6266b97c958a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d9b18c1f8fcd451a908fec7deec795b2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f791113c07f340089b20bdf1dfea947c",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_8257dac0abf84269a8e532de140a95e5",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "d9b93aeebfc6427789821d70c3813f6c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "d9db006c92094cf7ab21fca6c39652ef": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ad085402a36143d080aa39286e8314a2",
       "placeholder": "​",
       "style": "IPY_MODEL_a39e5a0107a84e6986c98b5ce506049a",
       "tabbable": null,
       "tooltip": null,
       "value": " 3435/3436 [03:15&lt;00:00, 17.12it/s]"
      }
     },
     "d9f75b0c6d554335881e63dc720ecd79": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "da06a1e0ddf9450eadd0e51ad509b50f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "da6fd7c4011844eca9f1b485bbcad412": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_db67f00efcd24a00bf1f4fc514e693a0",
       "placeholder": "​",
       "style": "IPY_MODEL_cd50b0a0283340268a7fd9d31048af1d",
       "tabbable": null,
       "tooltip": null,
       "value": " 2415/2416 [01:56&lt;00:00, 13.94it/s]"
      }
     },
     "dabe554973e64e17a2bb2ff7ea524960": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "dad3411403d342bcbc0520f4e65e3dc1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "db1b46b8539743789e75def2606d88de": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_44f1fa32028b43abbb0fc4061eb245cb",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_2c02b3aec6414ccea16d11d3ac0f684c",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "db36d2f280bd4be0819aac54aae91685": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "db51fb715cd54dfb94d012229a3479b5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "db67f00efcd24a00bf1f4fc514e693a0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "dbcc61d9d8184367a4401fd16bda1405": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_54a04e97807e49a89101b0e57110745a",
       "placeholder": "​",
       "style": "IPY_MODEL_93058bf896f34a45b6b3f2a74f99cee8",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "dc23c7d6163847ef97868f7ebe05ec38": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "dc792838518d4ac88b688938ba9a7a3f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_e9d761ee7d9c472da3994f6aab2894ae",
        "IPY_MODEL_162e981af33347c1bd30d0fd762aa859",
        "IPY_MODEL_fd941838bbb44519a2191a05d4a5206c"
       ],
       "layout": "IPY_MODEL_9545ba1a947c4ac99550418a33e7db57",
       "tabbable": null,
       "tooltip": null
      }
     },
     "dcd50643ca5b492fbe2f76638391f971": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "dd38b9ff640a4b25a025ec4c52997c67": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "dd4373cb27f34e6c9fcd29527cbeace2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_be60a1bb47b44dd68f063bc8bb506eb8",
       "placeholder": "​",
       "style": "IPY_MODEL_e187359a75ca49b5b7dd111b5fd9ca44",
       "tabbable": null,
       "tooltip": null,
       "value": " 2416/2416 [01:57&lt;00:00, 14.34it/s]"
      }
     },
     "dd794faa04aa441fa625c63aa0c6055f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ded79702c51449e8a87998429b2b6f7f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "dee18550fa7f41ca9e3555dc2e4dad18": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "df0e74c0eca44f298e6cda5f863a85cb": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "df11b56ed53145019b7e9462d37cf9e0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_88d14a08ccac404f9c6976ac60eaec93",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_f54965c2423047f6bd967fd9abc72dd9",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "e060644c32644c90966f7c149e82637b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "e0c7f02c594f4baab81095f1334405ad": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e135f02869424b1baf074e4f0d0a60cc": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "e16132cd4fb34917a31ba9d5e488cd47": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "e187359a75ca49b5b7dd111b5fd9ca44": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "e49672a514ff4bd7b8d48b9758794a1e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_bc1bac3230b04f85b17879de33d21822",
        "IPY_MODEL_19f4ece6cddf4dc9b9f058467d65192f",
        "IPY_MODEL_1e1476ece355443485b39b3dc2fe3cf1"
       ],
       "layout": "IPY_MODEL_3475d28408bf4eb4964eed707b5f5d7b",
       "tabbable": null,
       "tooltip": null
      }
     },
     "e4d204fd6e8c48caa8a0911b41bf7036": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f9149cc3bcc34bbca7b6fc00f10365ae",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_f9d7256b0a824857b5960f4b8edb263a",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "e5a36f9755654bb4b94667df5dc568ca": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "e5cf420455344ac3b8fda172fc97126e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6f9ca2194f0941e89ccf1f88956c2a39",
       "placeholder": "​",
       "style": "IPY_MODEL_c4ea4c0aae4c4c97bcf7632ac20999a7",
       "tabbable": null,
       "tooltip": null,
       "value": " 2415/2416 [01:55&lt;00:00, 13.56it/s]"
      }
     },
     "e5d6925021f54a49ac3f056b98ea53fa": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "e7da0326193243d5b9a3a634d0dde17f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f6d98b7771244610a945eb017c2196df",
       "placeholder": "​",
       "style": "IPY_MODEL_ed5bdab906bc4b3ba271fda79f886916",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "e812ca7512bf433a86ce5d631eaea6a5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "e8809035984445de8a8f3427ec082de3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_72cbd163a44749ab8b04862c5733815a",
       "placeholder": "​",
       "style": "IPY_MODEL_b77ec5e1ff3f4991a86b5b4e4cb1a9c2",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "e89a829c5d414b27b9a185b8656f5965": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_889b067944fc49de8b6f28f08ed23864",
        "IPY_MODEL_ea6ca10d9e544c82b642543dc4c5cffd",
        "IPY_MODEL_d15aaa57be4846ef8d633b5b918773e9"
       ],
       "layout": "IPY_MODEL_5a72491ad8744a228a3d497e8638e156",
       "tabbable": null,
       "tooltip": null
      }
     },
     "e8c7267c5a8541e8ae8036cad53fe112": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e8f961c35c794a9b8311292eb92ed4bb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_c698d6b0c62448ed9e8ab86a924269bf",
        "IPY_MODEL_a812e55f93e04887b9a0bf226dd979b7",
        "IPY_MODEL_6985460c86f3423ebd1680467cfacf10"
       ],
       "layout": "IPY_MODEL_8b45d8329d524a1ba5de1e7afba70c4f",
       "tabbable": null,
       "tooltip": null
      }
     },
     "e910740022f143bc84e7b0092eb99179": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f7b364bbb2324d8a8b5831440971f7f7",
       "placeholder": "​",
       "style": "IPY_MODEL_6f237f9493714306b10e262cd5439dcb",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "e9d761ee7d9c472da3994f6aab2894ae": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ef60d58610f74b7e860aa7c1c73f3050",
       "placeholder": "​",
       "style": "IPY_MODEL_3e90d83ed29d40b9ba3f600514fc10de",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "ea6ca10d9e544c82b642543dc4c5cffd": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f25493d6ec024ffba72e5b9b50f07cef",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_b7e633f84d9a4138ac13beb85767bd3a",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "ead53894ddd54b048b3835e50aad5c94": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "eaf769eb964b48b5a878a287a92562a4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5a0c282cb36d46d39afcfd2af3eeb008",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_a5084acb5a8a4c6495f06822f0f159d3",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "eafbcd9b28bc4b11bef6bc36935d26b4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "ec058e187f0747e4bf4c45907433d180": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "eca13e41518c4d1c8340122bac59f879": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "eccb320515574685b28b1d6a8916e6a6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "ed2adb9fa93e41e5b4c2de1ddd6b6c7e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ed5bdab906bc4b3ba271fda79f886916": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "ed6972373e31427295b4e2e9f53615c4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "ed8a45a2ffbd417eb067505ecc51043e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ee6654e5865b4fe7837315b8c0b2a1eb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_35e5231fe4df46a7a6760a84ae303276",
        "IPY_MODEL_594f724e77514f85bb210cea7deb9c5f",
        "IPY_MODEL_5af02d648fb94e77a6e20d4f31a4a452"
       ],
       "layout": "IPY_MODEL_f23b6b273e5547998ae65dda56463b5c",
       "tabbable": null,
       "tooltip": null
      }
     },
     "ef275e04a7d74d1d84eb8d81b5ad263f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_b23aac0eceda409191f9d9c4f05e1177",
       "placeholder": "​",
       "style": "IPY_MODEL_7038287f80fd4466a915c83162a263cf",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "ef60d58610f74b7e860aa7c1c73f3050": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ef6b9c5bc46d49faa8e1b549f03b32b4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "ef7dbe8a201149b1b871dc5d3eaaa333": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_275350d849424917a4f5c89585ea4edd",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_59b8713093e841d0b9ed2ed696ac40a8",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "f00b78b63abf4c7c904ee4b0ab8968db": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_998a91231e2246d1af567e3cddff5155",
       "placeholder": "​",
       "style": "IPY_MODEL_510d24c2ce3b4d16bfa6d331a1cac4cb",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "f0269c061cf04ab6a1f65ea6edffd0b5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f0c5e5f8ab0844ae8e3bb946066ea34c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f1ad6ed78934498eb273392da90df933": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_c0b2eda37b33416b8ce0a1aaa35d37ac",
       "placeholder": "​",
       "style": "IPY_MODEL_75496145b837444f921bc2ceaf690159",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "f23b6b273e5547998ae65dda56463b5c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": "hidden",
       "width": null
      }
     },
     "f25493d6ec024ffba72e5b9b50f07cef": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f2aeb1dd93304d22a9f4c417f2f2640d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "f2c7d81b5f2c44d3adb446a38c7e0323": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_462174c944164e3781606521a58b595e",
        "IPY_MODEL_855b9306f14a4d9799bbd73f5b7d37a4",
        "IPY_MODEL_a9aedeae28c84f37b01a45928f6f31f2"
       ],
       "layout": "IPY_MODEL_c4b326eb7c6d48b9ab84e16f5c499759",
       "tabbable": null,
       "tooltip": null
      }
     },
     "f373b997d6fa4db09478dac44e2c3b14": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5656e734f5e24d158fe9a4e3fd4e1194",
       "placeholder": "​",
       "style": "IPY_MODEL_64a80f21fa5a4646a30d9a6868a686fc",
       "tabbable": null,
       "tooltip": null,
       "value": "Evaluating: 100%"
      }
     },
     "f407c3d3067b4467bed943f771888d6f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6b774d56327e4ab396cdd54bf96df288",
       "placeholder": "​",
       "style": "IPY_MODEL_d27a9f6f42024b968ffd6004045b0e08",
       "tabbable": null,
       "tooltip": null,
       "value": " 3435/3436 [03:15&lt;00:00, 17.07it/s]"
      }
     },
     "f5022e00d3194e01a49469a02b9f18b1": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f520356064544d84bcb1b3b2d8418f4e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_03afbb60f9e944e6acf8c1e275545c9f",
       "max": 2416.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d644261a2b824ea28ada05a431acbfa6",
       "tabbable": null,
       "tooltip": null,
       "value": 2416.0
      }
     },
     "f54965c2423047f6bd967fd9abc72dd9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "f67ca6940c5a43beb919ad1500f17f19": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ded79702c51449e8a87998429b2b6f7f",
       "placeholder": "​",
       "style": "IPY_MODEL_48ab4d6bc2104a28b9e9ace9bc7aae0e",
       "tabbable": null,
       "tooltip": null,
       "value": " 2414/2416 [01:56&lt;00:00, 12.31it/s]"
      }
     },
     "f6d98b7771244610a945eb017c2196df": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f72cb8e9fbab4aa591abf171fa49c6b8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f791113c07f340089b20bdf1dfea947c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f7b364bbb2324d8a8b5831440971f7f7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f7fd108dfd9c42d5872a231fc13e5230": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f8474379ea7b46b0ae586827449af83d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_8020e3175071469686680772e64825d5",
        "IPY_MODEL_49fd6922a7fb4dbc89e355f1d5164966",
        "IPY_MODEL_e5cf420455344ac3b8fda172fc97126e"
       ],
       "layout": "IPY_MODEL_754be48620574a8b834dfbd61337a60c",
       "tabbable": null,
       "tooltip": null
      }
     },
     "f8725647a93c462b971bf0f0a6e0dee0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f8ca6c99c737494f9b1055719462fc0f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5f14571cca714b58a33f55668f048c7a",
       "placeholder": "​",
       "style": "IPY_MODEL_feb10fd941bb4ad3a6f5caf8d3de68ae",
       "tabbable": null,
       "tooltip": null,
       "value": " 3435/3436 [03:16&lt;00:00, 17.06it/s]"
      }
     },
     "f8f4c9b8d7f1435e9af6ec4a60ccbcc9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f9149cc3bcc34bbca7b6fc00f10365ae": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f9a870d7f6374a51bfad978e97631360": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a0306c4dd9e24aeb92c59c4643d9c1b6",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_eafbcd9b28bc4b11bef6bc36935d26b4",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "f9d7256b0a824857b5960f4b8edb263a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "fa1183cef4194e45b3478b7f34e00c48": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "fa260b17bf7c4a8997d936edd14cc216": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "faa958011250474cb7f665ee396650b0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f8f4c9b8d7f1435e9af6ec4a60ccbcc9",
       "max": 3436.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_fdeacc1620b7479fa8a3622bdbf7512b",
       "tabbable": null,
       "tooltip": null,
       "value": 3436.0
      }
     },
     "fae2d85c84a249f2ba8447fed677fa0c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_cbeefeca59cf4b0294642270533dea22",
       "placeholder": "​",
       "style": "IPY_MODEL_2be23e1fc00c4147b73416a04e9d389b",
       "tabbable": null,
       "tooltip": null,
       "value": " 2415/2416 [01:56&lt;00:00, 13.55it/s]"
      }
     },
     "fb138d75c05945e985b7dbb5151f3ac9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "fb1fecefe27b475d919f93b9214c50e7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "fb8036e8d5944d91b80c793e21183832": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "fb9d80e3208e48c69d72a885403952bd": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "fbe736029d8846748e50f1213301fb41": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "fbfbc96afe5a4523a74846976e2bdac6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ae547ec3421b4990a3a11341b265a8aa",
       "placeholder": "​",
       "style": "IPY_MODEL_599c2765ba244b41b0983575c1c3e0b3",
       "tabbable": null,
       "tooltip": null,
       "value": " 2414/2416 [01:56&lt;00:00, 12.51it/s]"
      }
     },
     "fc91cf484a8e4a6caf95a69f62c71975": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_0751807dd7e24d5dafa3fac5562ac15a",
       "placeholder": "​",
       "style": "IPY_MODEL_2974b6517c3747caad8a990b00079225",
       "tabbable": null,
       "tooltip": null,
       "value": " 3436/3436 [03:15&lt;00:00, 17.92it/s]"
      }
     },
     "fd2fdf2f28454f30b0bf42d586b4f278": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_04bc014062c44d6dac43fdd25fbc5c42",
        "IPY_MODEL_8f7a7a0a0d654e958867b45af5c85194",
        "IPY_MODEL_2b3012cc42734a8daa946f1ad00cfc70"
       ],
       "layout": "IPY_MODEL_3d12600a3f304458978fec51f5edefa0",
       "tabbable": null,
       "tooltip": null
      }
     },
     "fd941838bbb44519a2191a05d4a5206c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_08abfcd2ef574cb69dc8262ce69414a2",
       "placeholder": "​",
       "style": "IPY_MODEL_d0f65b9d4e9d42708fb1ed1a5c2b3c7e",
       "tabbable": null,
       "tooltip": null,
       "value": " 2414/2416 [01:56&lt;00:00, 12.37it/s]"
      }
     },
     "fda314330a4b415c992a571748d1423b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "fdeacc1620b7479fa8a3622bdbf7512b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "fe56b681d5ba4cd083b598ff1c4c2f45": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_73bca07188b74b04aa53affd9fcd05df",
       "placeholder": "​",
       "style": "IPY_MODEL_30b6d35018da4aaf876d04cd133d88ba",
       "tabbable": null,
       "tooltip": null,
       "value": "Training: 100%"
      }
     },
     "feb10fd941bb4ad3a6f5caf8d3de68ae": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "ffe91edee39d4026adfd2617cf5dac89": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
